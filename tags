!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
$	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${1\/\/\/}', '', Placeholder)$/;"	C	function:assertText
$	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/([A-Z][a-z]\/format\/}', '${foo\/([A-Z][a-z]\/format\/}', Text)$/;"	C	function:assertText
$	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/\/\/}', '', Variable)$/;"	C	function:assertText
$NODE_ENV	.config/nvim/bundle/coc.nvim/src/__tests__/vimrc	/^let $NODE_ENV='test'$/;"	v
$ref	.config/nvim/bundle/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerCommand"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.1
$ref	.config/nvim/bundle/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerModule"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.0
$ref	.config/nvim/bundle/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerSocket"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.2
$ref	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	s	object:definitions.languageServerCommand.allOf.0
$ref	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	s	object:definitions.languageServerModule.allOf.0
$ref	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	s	object:definitions.languageServerSocket.allOf.0
$schema	.config/nvim/bundle/coc.nvim/data/schema.json	/^  "$schema": "http:\/\/json-schema.org\/draft-06\/schema",$/;"	s
-	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> -    :<C-U>exe <SID>BlameJump('')<CR>$/;"	m
.	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer>          .     :<C-U> <C-R>=<SID>fnameescape(fugitive#Real(@%))<CR><Home>$/;"	m
.	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer>          . :<C-U> <C-R>=<SID>StageArgs(0)<CR><Home>$/;"	m
.	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    xnoremap <buffer>          .     :<C-U> <C-R>=<SID>fnameescape(fugitive#Real(@%))<CR><Home>$/;"	m
.	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    xnoremap <buffer>          . :<C-U> <C-R>=<SID>StageArgs(1)<CR><Home>$/;"	m
.color	.config/nvim/bundle/oceanic-next/test/test.css	/^.color{$/;"	c
/	.config/nvim/bundle/vista.vim/ftplugin/vista.vim	/^nnoremap <buffer> <silent> \/     :<c-u>call vista#finder#fzf#Run()<CR>$/;"	m
/	.config/nvim/bundle/vista.vim/ftplugin/vista_kind.vim	/^nnoremap <buffer> <silent> \/    :<c-u>call vista#finder#fzf#Run()<CR>$/;"	m
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	o	array:definitions.languageServerCommand.allOf
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	o	array:definitions.languageServerModule.allOf
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	o	array:definitions.languageServerSocket.allOf
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	s	array:properties.coc.source.file.trimSameExts.default
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [".vim", ".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": ["\/"],$/;"	s	array:properties.coc.source.file.triggerCharacters.default
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	s	array:properties.diagnostic.messageTarget.enum
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	s	array:properties.coc.preferences.jumpCommand.enum
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	s	array:properties.signature.target.enum
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.coc.preferences.hoverTarget.enum
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	s	array:definitions.languageServerCommand.required
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	s	array:definitions.languageServerModule.required
0	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	s	array:definitions.languageServerSocket.required
0	.config/nvim/bundle/coc.nvim/package.json	/^      "ts",$/;"	s	array:jest.moduleFileExtensions
0	.config/nvim/bundle/coc.nvim/package.json	/^    "complete",$/;"	s	array:keywords
0	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^          "package.json",$/;"	s	array:contributes.rootPatterns.0.patterns
0	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^      {$/;"	o	array:contributes.commands
0	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^      {$/;"	o	array:contributes.rootPatterns
0	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "lib": ["es2017", "es2018"],$/;"	s	array:compilerOptions.lib
0	.config/nvim/bundle/coc.nvim/tsconfig.json	/^  "include": ["src"],$/;"	s	array:include
0	.config/nvim/coc-settings.json	/^      "args": ["--stdio"]$/;"	s	array:languageserver.dockerfile.args
0	.config/nvim/coc-settings.json	/^      "args": ["lsp"],$/;"	s	array:languageserver.flow.args
0	.config/nvim/coc-settings.json	/^      "args": ["start"],$/;"	s	array:languageserver.bash.args
0	.config/nvim/coc-settings.json	/^      "filetypes": ["c", "cpp", "objc", "objcpp"],$/;"	s	array:languageserver.ccls.filetypes
0	.config/nvim/coc-settings.json	/^      "filetypes": ["dockerfile"],$/;"	s	array:languageserver.dockerfile.filetypes
0	.config/nvim/coc-settings.json	/^      "filetypes": ["javascript", "javascriptreact"],$/;"	s	array:languageserver.flow.filetypes
0	.config/nvim/coc-settings.json	/^      "filetypes": ["lua"]$/;"	s	array:languageserver.lua.filetypes
0	.config/nvim/coc-settings.json	/^      "filetypes": ["sh"],$/;"	s	array:languageserver.bash.filetypes
0	.config/nvim/coc-settings.json	/^      "ignoredRootPaths": ["~"]$/;"	s	array:languageserver.bash.ignoredRootPaths
0	.config/nvim/coc-settings.json	/^      "rootPatterns": [".ccls", "compile_commands.json", ".vim\/", ".git\/", ".hg\/"],$/;"	s	array:languageserver.ccls.rootPatterns
0	.config/nvim/coc-settings.json	/^      "rootPatterns": [".flowconfig"]$/;"	s	array:languageserver.flow.rootPatterns
0	.config/nvim/coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["go"],$/;"	s	array:coc.preferences.formatOnSaveFiletypes
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	s	array:properties.coc.source.file.trimSameExts.default
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [".vim", ".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	s	array:properties.diagnostic.messageTarget.enum
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	s	array:properties.coc.preferences.jumpCommand.enum
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	s	array:properties.signature.target.enum
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.coc.preferences.hoverTarget.enum
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	s	array:definitions.languageServerCommand.required
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	s	array:definitions.languageServerModule.required
1	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	s	array:definitions.languageServerSocket.required
1	.config/nvim/bundle/coc.nvim/package.json	/^      "tsx",$/;"	s	array:jest.moduleFileExtensions
1	.config/nvim/bundle/coc.nvim/package.json	/^    "neovim"$/;"	s	array:keywords
1	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^          "jsconfig.json"$/;"	s	array:contributes.rootPatterns.0.patterns
1	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "lib": ["es2017", "es2018"],$/;"	s	array:compilerOptions.lib
1	.config/nvim/coc-settings.json	/^      "filetypes": ["c", "cpp", "objc", "objcpp"],$/;"	s	array:languageserver.ccls.filetypes
1	.config/nvim/coc-settings.json	/^      "filetypes": ["javascript", "javascriptreact"],$/;"	s	array:languageserver.flow.filetypes
1	.config/nvim/coc-settings.json	/^      "rootPatterns": [".ccls", "compile_commands.json", ".vim\/", ".git\/", ".hg\/"],$/;"	s	array:languageserver.ccls.rootPatterns
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [".vim", ".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	s	array:properties.coc.preferences.jumpCommand.enum
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
2	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.coc.preferences.hoverTarget.enum
2	.config/nvim/bundle/coc.nvim/package.json	/^      "json",$/;"	s	array:jest.moduleFileExtensions
2	.config/nvim/coc-settings.json	/^      "filetypes": ["c", "cpp", "objc", "objcpp"],$/;"	s	array:languageserver.ccls.filetypes
2	.config/nvim/coc-settings.json	/^      "rootPatterns": [".ccls", "compile_commands.json", ".vim\/", ".git\/", ".hg\/"],$/;"	s	array:languageserver.ccls.rootPatterns
2018-07-12	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-12$/;"	c
2018-07-13	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-13$/;"	c
2018-07-14	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-14$/;"	c
2018-07-15	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-15$/;"	c
2018-07-16	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-16$/;"	c
2018-07-17	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-17$/;"	c
2018-07-19	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-19$/;"	c
2018-07-20	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-20$/;"	c
2018-07-21	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-21$/;"	c
2018-07-23	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-23$/;"	c
2018-07-24	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-24$/;"	c
2018-07-27	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-27$/;"	c
2018-07-28	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-28$/;"	c
2018-07-29	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-29$/;"	c
2018-07-30	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-30$/;"	c
2018-07-31	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-07-31$/;"	c
2018-08-02	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-02$/;"	c
2018-08-03	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-03$/;"	c
2018-08-04	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-04$/;"	c
2018-08-05	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-05$/;"	c
2018-08-07	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-07$/;"	c
2018-08-08	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-08$/;"	c
2018-08-09	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-09$/;"	c
2018-08-10	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-10$/;"	c
2018-08-11	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-11$/;"	c
2018-08-12	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-12$/;"	c
2018-08-14	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-14$/;"	c
2018-08-15	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-15$/;"	c
2018-08-16	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-16$/;"	c
2018-08-17	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-17$/;"	c
2018-08-21	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-21$/;"	c
2018-08-23	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-23$/;"	c
2018-08-30	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-08-30$/;"	c
2018-09-07	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-09-07$/;"	c
2018-09-10	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-09-10$/;"	c
2018-09-15	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-09-15$/;"	c
2018-09-20	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-09-20$/;"	c
2018-09-24	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-09-24$/;"	c
2018-09-27	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-09-27$/;"	c
2018-09-28	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-09-28$/;"	c
2018-09-30	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-09-30$/;"	c
2018-10-01	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-10-01$/;"	c
2018-10-05	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-10-05$/;"	c
2018-10-14	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-10-14$/;"	c
2018-10-18	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-10-18$/;"	c
2018-10-21	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-10-21$/;"	c
2018-10-25	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-10-25$/;"	c
2018-10-29	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-10-29$/;"	c
2018-11-02	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-11-02$/;"	c
2018-11-07	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-11-07$/;"	c
2018-11-13	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-11-13$/;"	c
2018-11-19	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-11-19$/;"	c
2018-11-24	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-11-24$/;"	c
2018-11-28	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-11-28$/;"	c
2018-12-05	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-12-05$/;"	c
2018-12-06	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-12-06$/;"	c
2018-12-08	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-12-08$/;"	c
2018-12-12	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-12-12$/;"	c
2018-12-17	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-12-17$/;"	c
2018-12-20	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-12-20$/;"	c
2018-12-27	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-12-27$/;"	c
2018-12-31	.config/nvim/bundle/coc.nvim/history.md	/^# 2018-12-31$/;"	c
2019-01-01	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-01-01$/;"	c
2019-01-03	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-01-03$/;"	c
2019-01-09	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-01-09$/;"	c
2019-01-24	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-01-24$/;"	c
2019-01-28	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-01-28$/;"	c
2019-02-02	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-02-02$/;"	c
2019-02-04	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-02-04$/;"	c
2019-02-11	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-02-11$/;"	c
2019-02-12	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-02-12$/;"	c
2019-02-17	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-02-17$/;"	c
2019-02-22	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-02-22$/;"	c
2019-02-25	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-02-25$/;"	c
2019-03-03	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-03-03$/;"	c
2019-03-11	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-03-11$/;"	c
2019-03-16	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-03-16$/;"	c
2019-03-19	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-03-19$/;"	c
2019-03-24	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-03-24$/;"	c
2019-03-28	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-03-28$/;"	c
2019-03-31	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-03-31$/;"	c
2019-04-09	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-04-09$/;"	c
2019-04-27	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-04-27$/;"	c
2019-05-07	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-05-07$/;"	c
2019-05-30	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-05-30$/;"	c
2019-06-09	.config/nvim/bundle/coc.nvim/history.md	/^# 2019-06-09$/;"	c
3	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
3	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
3	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [".vim", ".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
3	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
3	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	s	array:properties.coc.preferences.jumpCommand.enum
3	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
3	.config/nvim/bundle/coc.nvim/package.json	/^      "js"$/;"	s	array:jest.moduleFileExtensions
3	.config/nvim/coc-settings.json	/^      "filetypes": ["c", "cpp", "objc", "objcpp"],$/;"	s	array:languageserver.ccls.filetypes
3	.config/nvim/coc-settings.json	/^      "rootPatterns": [".ccls", "compile_commands.json", ".vim\/", ".git\/", ".hg\/"],$/;"	s	array:languageserver.ccls.rootPatterns
4	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	s	array:properties.coc.preferences.jumpCommand.enum
4	.config/nvim/coc-settings.json	/^      "rootPatterns": [".ccls", "compile_commands.json", ".vim\/", ".git\/", ".hg\/"],$/;"	s	array:languageserver.ccls.rootPatterns
5	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	s	array:properties.coc.preferences.jumpCommand.enum
<BS>	.config/nvim/bundle/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <BS> <c-g>c$/;"	m
<C-.>	.config/nvim/mappings/defx.vim	/^	nnoremap <silent><buffer><expr> <C-.>$/;"	m
<C-H>	.config/nvim/mappings/buffers.vim	/^nnoremap <C-H> <C-W><C-H>$/;"	m
<C-H>	.vimrc	/^nnoremap <C-H> <C-W><C-H>$/;"	m
<C-J>	.config/nvim/mappings/buffers.vim	/^nnoremap <C-J> <C-W><C-J>$/;"	m
<C-J>	.vimrc	/^nnoremap <C-J> <C-W><C-J>$/;"	m
<C-K>	.config/nvim/mappings/buffers.vim	/^nnoremap <C-K> <C-W><C-K>$/;"	m
<C-K>	.vimrc	/^nnoremap <C-K> <C-W><C-K>$/;"	m
<C-L>	.config/nvim/mappings/buffers.vim	/^nnoremap <C-L> <C-W><C-L>$/;"	m
<C-L>	.vimrc	/^nnoremap <C-L> <C-W><C-L>$/;"	m
<C-N>	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> <C-N> :<C-U>execute <SID>StageNext(v:count1)<CR>$/;"	m
<C-N>	.config/nvim/bundle/vista.vim/ftplugin/vista.vim	/^nnoremap <buffer> <silent> <C-N> :<c-u>call vista#jump#NextTopLevel()<CR>$/;"	m
<C-P>	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> <C-P> :<C-U>execute <SID>StagePrevious(v:count1)<CR>$/;"	m
<C-P>	.config/nvim/bundle/vista.vim/ftplugin/vista.vim	/^nnoremap <buffer> <silent> <C-P> :<c-u>call vista#jump#PrevTopLevel()<CR>$/;"	m
<C-W>C	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> <C-W>C :<C-U>exe 'Gsplit ' . <SID>fnameescape(<SID>ContainingComm/;"	m
<C-c>	.config/nvim/coc-settings.json	/^    "<C-c>": "do:exit"$/;"	s	object:list.insertMappings
<C-c>	.config/nvim/coc-settings.json	/^    "<C-c>": "do:exit"$/;"	s	object:list.normalMappings
<C-o>	.config/nvim/mappings/defx.vim	/^map <C-o> :Defx -toggle -show-ignored-files -columns=indent:icons:filename:type:size:time<CR>$/;"	m
<C-o>	.vimrc	/^map <C-o> :NERDTreeToggle<CR>$/;"	m
<C-r>	.config/nvim/mappings/vista.vim	/^map <C-r> :Vista<CR>$/;"	m
<CR>	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> <CR> :<C-U>exe <SID>BlameCommit("exe 'norm q'<Bar>edit")<CR>$/;"	m
<CR>	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> <CR>    :<C-U>.Gblame<CR>$/;"	m
<CR>	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> <CR>    :<C-U>exe <SID>GF("edit")<CR>$/;"	m
<CR>	.config/nvim/bundle/vista.vim/ftplugin/vista.vim	/^nnoremap <buffer> <silent> <CR>  :<c-u>call vista#cursor#FoldOrJump()<CR>$/;"	m
<CR>	.config/nvim/bundle/vista.vim/ftplugin/vista_kind.vim	/^nnoremap <buffer> <silent> <CR> :<c-u>call vista#cursor#FoldOrJump()<CR>$/;"	m
<CR>	.config/nvim/mappings/defx.vim	/^  nnoremap <silent><buffer><expr> <CR>$/;"	m
<DEL>	.config/nvim/bundle/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <DEL> <c-g>c$/;"	m
<F1>	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> <F1> :help fugitive-:Gblame<CR>$/;"	m
<F1>	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> <F1> :help fugitive-mappings<CR>$/;"	m
<F2>	.config/nvim/mappings/session.vim	/^map <F2> :mksession! .\/vim_session <cr>$/;"	m
<F2>	.vimrc	/^map <F2> :mksession! .\/vim_session <cr>$/;"	m
<F3>	.config/nvim/mappings/session.vim	/^map <F3> :source .\/vim_session <cr>$/;"	m
<F3>	.vimrc	/^map <F3> :source .\/vim_session <cr>$/;"	m
<Plug>(coc-codeaction)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction)          :<C-u>call CocActionAsync('codeAction',     '')<CR>$/;"	m
<Plug>(coc-codeaction-selected)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-selected) :<C-u>set  operatorfunc=<SID>CodeActionFromSelected<CR>/;"	m
<Plug>(coc-codeaction-selected)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^vnoremap <Plug>(coc-codeaction-selected) :<C-u>call CocActionAsync('codeAction',     visualmode(/;"	m
<Plug>(coc-codelens-action)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codelens-action)     :<C-u>call CocActionAsync('codeLensAction')<CR>$/;"	m
<Plug>(coc-command-repeat)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-command-repeat)      :<C-u>call CocAction('repeatCommand')<CR>$/;"	m
<Plug>(coc-declaration)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-declaration)         :<C-u>call CocAction('jumpDeclaration')<CR>$/;"	m
<Plug>(coc-definition)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-definition)          :<C-u>call CocAction('jumpDefinition')<CR>$/;"	m
<Plug>(coc-diagnostic-info)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-diagnostic-info)     :<C-u>call CocActionAsync('diagnosticInfo')<CR>$/;"	m
<Plug>(coc-diagnostic-next)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-diagnostic-next)     :<C-u>call CocActionAsync('diagnosticNext')<CR>$/;"	m
<Plug>(coc-diagnostic-prev)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-diagnostic-prev)     :<C-u>call CocActionAsync('diagnosticPrevious')<CR>$/;"	m
<Plug>(coc-fix-current)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-fix-current)         :<C-u>call CocActionAsync('doQuickfix')<CR>$/;"	m
<Plug>(coc-float-hide)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-float-hide)          :<C-u>call coc#util#float_hide()<CR>$/;"	m
<Plug>(coc-float-jump)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-float-jump)          :<c-u>call coc#util#float_jump()<cr>$/;"	m
<Plug>(coc-format)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-format)              :<C-u>call CocActionAsync('format')<CR>$/;"	m
<Plug>(coc-format-selected)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-format-selected)     :<C-u>set  operatorfunc=<SID>FormatFromSelected<CR>g@$/;"	m
<Plug>(coc-format-selected)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^vnoremap <Plug>(coc-format-selected)     :<C-u>call CocActionAsync('formatSelected', visualmode(/;"	m
<Plug>(coc-implementation)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-implementation)      :<C-u>call CocAction('jumpImplementation')<CR>$/;"	m
<Plug>(coc-openlink)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-openlink)            :<C-u>call CocActionAsync('openLink')<CR>$/;"	m
<Plug>(coc-references)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-references)          :<C-u>call CocAction('jumpReferences')<CR>$/;"	m
<Plug>(coc-rename)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-rename)              :<C-u>call CocActionAsync('rename')<CR>$/;"	m
<Plug>(coc-type-definition)	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-type-definition)     :<C-u>call CocAction('jumpTypeDefinition')<CR>$/;"	m
<Plug>CocRefresh	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^inoremap <silent> <Plug>CocRefresh       <C-r>=coc#_complete()<CR>$/;"	m
<SID>:	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<Space>	.config/nvim/mappings/defx.vim	/^  nnoremap <silent><buffer><expr> <Space>$/;"	m
<c-h>	.config/nvim/bundle/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <c-h> <c-g>c$/;"	m
<c-r>	.config/nvim/bundle/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <c-r> <c-g>"_c<c-r>$/;"	m
<esc>	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^  nnoremap <silent><nowait><buffer> <esc> <C-w>c$/;"	m
<esc>	.config/nvim/bundle/coc.nvim/autoload/coc/snippet.vim	/^  nnoremap <buffer> <silent> <esc> :call coc#rpc#request('snippetCancel', [])<cr>$/;"	m
@chemzqm/neovim	.config/nvim/bundle/coc.nvim/package.json	/^    "@chemzqm\/neovim": "5.1.7",$/;"	s	object:dependencies
@chemzqm/tslint-config	.config/nvim/bundle/coc.nvim/package.json	/^    "@chemzqm\/tslint-config": "^1.0.18",$/;"	s	object:devDependencies
@types/debounce	.config/nvim/bundle/coc.nvim/package.json	/^    "@types\/debounce": "^3.0.0",$/;"	s	object:devDependencies
@types/fb-watchman	.config/nvim/bundle/coc.nvim/package.json	/^    "@types\/fb-watchman": "^2.0.0",$/;"	s	object:devDependencies
@types/find-up	.config/nvim/bundle/coc.nvim/package.json	/^    "@types\/find-up": "^2.1.1",$/;"	s	object:devDependencies
@types/glob	.config/nvim/bundle/coc.nvim/package.json	/^    "@types\/glob": "^7.1.1",$/;"	s	object:devDependencies
@types/jest	.config/nvim/bundle/coc.nvim/package.json	/^    "@types\/jest": "^24.0.13",$/;"	s	object:devDependencies
@types/minimatch	.config/nvim/bundle/coc.nvim/package.json	/^    "@types\/minimatch": "^3.0.3",$/;"	s	object:devDependencies
@types/node	.config/nvim/bundle/coc.nvim/package.json	/^    "@types\/node": "^12.0.5",$/;"	s	object:devDependencies
@types/semver	.config/nvim/bundle/coc.nvim/package.json	/^    "@types\/semver": "^6.0.0",$/;"	s	object:devDependencies
@types/uuid	.config/nvim/bundle/coc.nvim/package.json	/^    "@types\/uuid": "^3.4.4",$/;"	s	object:devDependencies
@types/which	.config/nvim/bundle/coc.nvim/package.json	/^    "@types\/which": "^1.3.1",$/;"	s	object:devDependencies
A	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/([A-Z][a-z]\/format\/}', '${foo\/([A-Z][a-z]\/format\/}', Text)$/;"	C	function:assertText
A	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  A = 65,$/;"	e	enum:CharCode
A	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> A    :<C-u>exe "vertical resize ".(<SID>linechars('.\\{-\\}\\/;"	m
ACTION_FUNC	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^ACTION_FUNC = typing.Callable[[View, Defx, Context], None]$/;"	v
ACTION_FUNC	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^ACTION_FUNC = typing.Callable[[View, Defx, Context], None]$/;"	v
About	.config/nvim/bundle/defx.nvim/README.md	/^## About$/;"	s
ActionAttr	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/action.py	/^class ActionAttr(IntFlag):$/;"	c
ActionTable	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/action.py	/^class ActionTable(typing.NamedTuple):$/;"	c
Advanced configuration	.config/nvim/bundle/lightline.vim/README.md	/^## Advanced configuration$/;"	s
Ampersand	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Ampersand = 38,$/;"	e	enum:CharCode
AnonymousFunction1da22f600100	.config/nvim/bundle/coc.nvim/bin/server.js	/^process.on('uncaughtException', function (err) {$/;"	f
AnonymousFunction1da22f600200	.config/nvim/bundle/coc.nvim/bin/server.js	/^process.on('unhandledRejection', function (reason, p) {$/;"	f
AnonymousFunction3f885c470100	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^        return function () { }; \/\/ tslint:disable-line$/;"	f	function:log
AnonymousFunction3f885c470200	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^    process.__defineGetter__('stdout', function () {$/;"	f
AnonymousFunction3f885c470300	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^    process.__defineGetter__('stderr', function () {$/;"	f
AnonymousFunction3f885c470400	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^    let server = net.createServer(function (stream) {$/;"	f
AnonymousFunction3f885c470500	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^        process.__defineGetter__('stdin', function () {$/;"	f
AnonymousFunction3f885c470600	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^        let timer = setInterval(function () {$/;"	f	function:AnonymousFunction3f885c470400
AnonymousFunction3f885c470700	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^    server.listen(stdInPipeName, function () {$/;"	f
AnonymousFunctiona4be8e970100	.config/nvim/bundle/coc.nvim/jest.js	/^process.on('uncaughtException', function(err) {$/;"	f
AnonymousFunctiond4995ed80100	.config/nvim/bundle/coc.nvim/build/index.js	/^\/******\/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__./;"	f	function:__webpack_require__.t
Asterisk	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Asterisk = 42,$/;"	e	enum:CharCode
AtSign	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  AtSign = 64,$/;"	e	enum:CharCode
Author	.config/nvim/bundle/lightline.vim/README.md	/^## Author$/;"	s
B	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  B = 66,$/;"	e	enum:CharCode
BASE_DIR	.config/nvim/bundle/defx.nvim/test/conftest.py	/^BASE_DIR = Path(__file__).parent.parent$/;"	v
BUILD_INVERTED_INDEX	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set BUILD_INVERTED_INDEX=1$/;"	v
BUILD_INVERTED_INDEX	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set BUILD_INVERTED_INDEX=0$/;"	v
BackTick	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  BackTick = 96,$/;"	e	enum:CharCode
Backers	.config/nvim/bundle/coc.nvim/Readme.md	/^## Backers$/;"	s
Backslash	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  Backslash,$/;"	e	enum:TokenType
Backslash	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Backslash = 92,$/;"	e	enum:CharCode
Backspace	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Backspace = 8,$/;"	e	enum:CharCode
Base	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/column.py	/^class Base:$/;"	c
Base	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^class Base:$/;"	c
Base	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/source.py	/^class Base(ABC):$/;"	c
Basic Options	.config/nvim/bundle/ctrlp.vim/readme.md	/^## Basic Options$/;"	s
Basic Usage	.config/nvim/bundle/ctrlp.vim/readme.md	/^## Basic Usage$/;"	s
Button	.config/nvim/bundle/oceanic-next/test/style-components.js	/^const Button = styled.button`$/;"	C
C	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  C = 67,$/;"	e	enum:CharCode
C	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> C    :<C-u>exe "vertical resize ".(<SID>linechars('^\\S\\+')+/;"	m
C	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> C     :<C-U>exe 'Gedit ' . <SID>fnameescape(<SID>ContainingCommit/;"	m
C	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> C :<C-U>Gcommit<CR>:echohl WarningMsg<Bar>echo ':Gstatus C is dep/;"	m
CDToGitRoot	.vimrc	/^function! CDToGitRoot()$/;"	f
COPY	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/clipboard.py	/^    COPY = auto()$/;"	v	class:ClipboardAction
CSCOPE_ARGS	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -q$/;"	v
CSCOPE_ARGS	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_ARGS	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=%CSCOPE_ARGS% -i %DB_FILE%.files$/;"	v
CSCOPE_EXE	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CallSequence	.config/nvim/bundle/coc.nvim/src/util/callSequence.ts	/^export default class CallSequence {$/;"	c
Can I display the plugin information at the filename component?	.config/nvim/bundle/lightline.vim/README.md	/^### Can I display the plugin information at the filename component?$/;"	S
Can I display the plugin name at the mode component?	.config/nvim/bundle/lightline.vim/README.md	/^### Can I display the plugin name at the mode component?$/;"	S
Can I hide the readonly component in other plugins buffer?	.config/nvim/bundle/lightline.vim/README.md	/^### Can I hide the readonly component in other plugins buffer?$/;"	S
Can I hide the readonly component in the help buffer?	.config/nvim/bundle/lightline.vim/README.md	/^### Can I hide the readonly component in the help buffer?$/;"	S
Can I trim the bar between the filename and modified sign?	.config/nvim/bundle/lightline.vim/README.md	/^### Can I trim the bar between the filename and modified sign?$/;"	S
Can I trim the file format and encoding information on narrow windows?	.config/nvim/bundle/lightline.vim/README.md	/^### Can I trim the file format and encoding information on narrow windows?$/;"	S
Candidate	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/defx.py	/^Candidate = typing.Dict[str, typing.Any]$/;"	v
Caret	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Caret = 94,$/;"	e	enum:CharCode
CarriageReturn	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  CarriageReturn = 13,$/;"	e	enum:CharCode
CharCode	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^export const enum CharCode {$/;"	g
CleanUp	.config/nvim/bundle/vim-gutentags/plat/unix/update_scopedb.sh	/^CleanUp() {$/;"	f
ClearAllCtrlPCaches	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearAllCtrlPCaches cal ctrlp#clra()$/;"	c
ClearCtrlPCache	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearCtrlPCache     cal ctrlp#clr()$/;"	c
ClientState	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^export enum ClientState {$/;"	g
Clipboard	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/clipboard.py	/^class Clipboard():$/;"	c
ClipboardAction	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/clipboard.py	/^class ClipboardAction(Enum):$/;"	c
CloseAction	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^export enum CloseAction {$/;"	g
CloseCurlyBrace	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  CloseCurlyBrace = 125,$/;"	e	enum:CharCode
CloseParen	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  CloseParen = 41,$/;"	e	enum:CharCode
CloseSquareBracket	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  CloseSquareBracket = 93,$/;"	e	enum:CharCode
CocAction	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=* -range CocAction :call coc#rpc#notify('codeActionRange', [<line1>, <line2>, <f/;"	c
CocAction	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! CocAction(...) abort$/;"	f
CocActionAsync	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! CocActionAsync(...) abort$/;"	f
CocCommand	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,s:CommandList -range CocCommand :call coc#rpc#notify('runComm/;"	c
CocConfig	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocConfig       :call s:OpenConfig()$/;"	c
CocDisable	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocDisable      :call s:Disable()$/;"	c
CocEnable	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocEnable       :call s:Enable()$/;"	c
CocFix	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=* -range CocFix    :call coc#rpc#notify('codeActionRange', [<line1>, <line2>, 'q/;"	c
CocInfo	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocInfo         :call s:ShowInfo()$/;"	c
CocInstall	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:InstallOptions CocInstall   :call coc#util#install_extensio/;"	c
CocList	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,coc#list#options CocList      :call coc#rpc#notify('openList'/;"	c
CocListResume	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocListResume   :call coc#rpc#notify('listResume', [])$/;"	c
CocLocations	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! CocLocations(id, method, ...) abort$/;"	f
CocLocationsAsync	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! CocLocationsAsync(id, method, ...) abort$/;"	f
CocNext	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocNext         :call coc#rpc#notify('listNext', [])$/;"	c
CocOpenLog	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocOpenLog      :call coc#rpc#notify('openLog',  [])$/;"	c
CocPrev	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocPrev         :call coc#rpc#notify('listPrev', [])$/;"	c
CocRebuild	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocRebuild      :call coc#util#rebuild()$/;"	c
CocRegistNotification	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! CocRegistNotification(id, method, cb) abort$/;"	f
CocRequest	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! CocRequest(...) abort$/;"	f
CocRequestAsync	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! CocRequestAsync(...)$/;"	f
CocRestart	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocRestart      :call coc#rpc#restart()$/;"	c
CocStart	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocStart        :call coc#rpc#start_server()$/;"	c
CocUninstall	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:ExtensionList  CocUninstall :call coc#rpc#notify('CocAction/;"	c
CocUpdate	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocUpdate       :call coc#util#update_extensions(1)$/;"	c
CocUpdateSync	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocUpdateSync   :call coc#util#update_extensions()$/;"	c
CodeLensManager	.config/nvim/bundle/coc.nvim/src/provider/codeLensManager.ts	/^export default class CodeLensManager extends Manager<CodeLensProvider> implements Disposable {$/;"	c
Colon	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  Colon,$/;"	e	enum:TokenType
Colon	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Colon = 58,$/;"	e	enum:CharCode
Colorscheme configuration	.config/nvim/bundle/lightline.vim/README.md	/^## Colorscheme configuration$/;"	s
Column	.config/nvim/bundle/defx-icons/rplugin/python3/defx/column/icons.py	/^class Column(Base):$/;"	c
Column	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/filename.py	/^class Column(Base):$/;"	c
Column	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/icon.py	/^class Column(Base):$/;"	c
Column	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/indent.py	/^class Column(Base):$/;"	c
Column	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/mark.py	/^class Column(Base):$/;"	c
Column	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/size.py	/^class Column(Base):$/;"	c
Column	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/time.py	/^class Column(Base):$/;"	c
Column	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/type.py	/^class Column(Base):$/;"	c
Column	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^from defx.base.column import Base as Column$/;"	x
Comma	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  Comma,$/;"	e	enum:TokenType
Comma	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Comma = 44,$/;"	e	enum:CharCode
Command	.config/nvim/bundle/coc.nvim/src/commands.ts	/^class CommandItem implements Disposable, Command {$/;"	C
Commands	.config/nvim/bundle/vista.vim/README.md	/^### Commands$/;"	S
CommandsList	.config/nvim/bundle/coc.nvim/src/list/source/commands.ts	/^export default class CommandsList extends BasicList {$/;"	c
Compile ctags with JSON format support	.config/nvim/bundle/vista.vim/README.md	/^#### Compile ctags with JSON format support$/;"	t
Completion sources	.config/nvim/bundle/coc.nvim/Readme.md	/^## Completion sources$/;"	s
Concept	.config/nvim/bundle/defx.nvim/README.md	/^## Concept$/;"	s
Configuration	.config/nvim/bundle/coc.nvim/src/configuration/configuration.ts	/^export class Configuration {$/;"	c
Configuration	.config/nvim/bundle/defx-icons/README.md	/^## Configuration$/;"	s
Configuration	.config/nvim/bundle/oceanic-next/README.md	/^## Configuration$/;"	s
Configuration Examples	.config/nvim/bundle/defx.nvim/README.md	/^## Configuration Examples$/;"	s
ConfigurationModel	.config/nvim/bundle/coc.nvim/src/configuration/model.ts	/^export class ConfigurationModel implements IConfigurationModel {$/;"	c
Context	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^class Context(typing.NamedTuple):$/;"	c
Continue	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Continue = 1,$/;"	e	enum:ErrorAction
Contribute Code	.config/nvim/bundle/coc.nvim/CONTRIBUTING.md	/^## Contribute Code$/;"	s
Contribute Documentation	.config/nvim/bundle/coc.nvim/CONTRIBUTING.md	/^## Contribute Documentation$/;"	s
Contributing	.config/nvim/bundle/coc.nvim/CONTRIBUTING.md	/^# Contributing$/;"	c
Contributing	.config/nvim/bundle/vim-gutentags/CONTRIBUTING.md	/^# Contributing$/;"	c
Contributing	.config/nvim/bundle/vista.vim/README.md	/^## Contributing$/;"	s
CtrlP	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlP         cal ctrlp#init(0, { 'dir': <q-args> })$/;"	c
CtrlPAug	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^	aug CtrlPAug$/;"	a
CtrlPBookmarkDir	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBookmarkDir cal ctrlp#init(ctrlp#bookmarkdir#id())$/;"	c
CtrlPBookmarkDirAdd	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir -bang CtrlPBookmarkDirAdd$/;"	c
CtrlPBufTag	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPBufTag$/;"	c
CtrlPBufTagAll	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBufTagAll cal ctrlp#init(ctrlp#buffertag#cmd(1))$/;"	c
CtrlPBuffer	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBuffer   cal ctrlp#init('buf')$/;"	c
CtrlPChange	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPChange$/;"	c
CtrlPChangeAll	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPChangeAll   cal ctrlp#init(ctrlp#changes#cmd(1))$/;"	c
CtrlPClearAllCaches	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearAllCaches cal ctrlp#clra()$/;"	c
CtrlPClearCache	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearCache     cal ctrlp#clr()$/;"	c
CtrlPCurFile	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurFile cal ctrlp#init('fil', { 'mode': 'c' })$/;"	c
CtrlPCurWD	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurWD   cal ctrlp#init('fil', { 'mode': '' })$/;"	c
CtrlPDir	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPDir$/;"	c
CtrlPLastMode	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? CtrlPLastMode cal ctrlp#init(-1, { 'args': <q-args> })$/;"	c
CtrlPLazy	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^		aug CtrlPLazy$/;"	a
CtrlPLine	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPLine$/;"	c
CtrlPMRUF	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^	aug CtrlPMRUF$/;"	a
CtrlPMRUFiles	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPMRUFiles cal ctrlp#init('mru', { 'dir': <q-args> })$/;"	c
CtrlPMixed	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPMixed       cal ctrlp#init(ctrlp#mixed#id())$/;"	c
CtrlPQuickfix	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPQuickfix cal ctrlp#init(ctrlp#quickfix#id())$/;"	c
CtrlPRTS	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRTS       cal ctrlp#init(ctrlp#rtscript#id())$/;"	c
CtrlPRoot	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRoot    cal ctrlp#init('fil', { 'mode': 'r' })$/;"	c
CtrlPTag	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPTag      cal ctrlp#init(ctrlp#tag#id())$/;"	c
CtrlPUndo	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPUndo      cal ctrlp#init(ctrlp#undo#id())$/;"	c
CurlyClose	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  CurlyClose,$/;"	e	enum:TokenType
CurlyOpen	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  CurlyOpen,$/;"	e	enum:TokenType
CursorPosition	.config/nvim/bundle/coc.nvim/src/__tests__/helper.ts	/^export interface CursorPosition {$/;"	i
Custom	.config/nvim/bundle/lightline.vim/test/expand.vim	/^  function! Custom()$/;"	f
Custom	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^  function! Custom(n)$/;"	f
Custom1	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^  function! Custom1()$/;"	f
Custom2	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^  function! Custom2()$/;"	f
Custom3	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^  function! Custom3()$/;"	f
D	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  D = 68,$/;"	e	enum:CharCode
D	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> D    :<C-u>exe "vertical resize ".(<SID>linechars('.\\{-\\}\\/;"	m
D	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> D :<C-U>execute <SID>StageDiff('Gdiff')<CR>$/;"	m
DB	.config/nvim/bundle/coc.nvim/src/model/db.ts	/^export default class DB {$/;"	c
DB_FILE	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
Dash	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  Dash,$/;"	e	enum:TokenType
Dash	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Dash = 45,$/;"	e	enum:CharCode
Defx	.config/nvim/bundle/defx.nvim/plugin/defx.vim	/^      \\ Defx$/;"	c
Defx	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/defx.py	/^class Defx(object):$/;"	c
Defx icons	.config/nvim/bundle/defx-icons/README.md	/^# Defx icons$/;"	c
DefxHandlers	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^    class DefxHandlers:$/;"	c
Describe the bug	.config/nvim/bundle/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Describe the bug$/;"	s
DevIconsLinemode	.config/ranger/plugins/devicons_linemode.py	/^class DevIconsLinemode(LinemodeBase):$/;"	c
DevIconsLinemode	.config/ranger/plugins/ranger_devicons/__init__.py	/^class DevIconsLinemode(LinemodeBase):$/;"	c
DevIconsLinemodeFile	.config/ranger/plugins/devicons_linemode.py	/^class DevIconsLinemodeFile(LinemodeBase):$/;"	c
DevIconsLinemodeFile	.config/ranger/plugins/ranger_devicons/__init__.py	/^class DevIconsLinemodeFile(LinemodeBase):$/;"	c
Digit0	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Digit0 = 48,$/;"	e	enum:CharCode
Digit1	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Digit1 = 49,$/;"	e	enum:CharCode
Digit2	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Digit2 = 50,$/;"	e	enum:CharCode
Digit3	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Digit3 = 51,$/;"	e	enum:CharCode
Digit4	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Digit4 = 52,$/;"	e	enum:CharCode
Digit5	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Digit5 = 53,$/;"	e	enum:CharCode
Digit6	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Digit6 = 54,$/;"	e	enum:CharCode
Digit7	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Digit7 = 55,$/;"	e	enum:CharCode
Digit8	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Digit8 = 56,$/;"	e	enum:CharCode
Digit9	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Digit9 = 57,$/;"	e	enum:CharCode
Disposable	.config/nvim/bundle/coc.nvim/src/list/basic.ts	/^export default abstract class BasicList implements IList, Disposable {$/;"	C
DoNotRestart	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  DoNotRestart = 1,$/;"	e	enum:CloseAction
DocumentColorManager	.config/nvim/bundle/coc.nvim/src/provider/documentColorManager.ts	/^export default class DocumentColorManager extends Manager<DocumentColorProvider> implements Disp/;"	c
DocumentHighlightManager	.config/nvim/bundle/coc.nvim/src/provider/documentHighlightManager.ts	/^export default class DocumentHighlightManager extends Manager<DocumentHighlightProvider> impleme/;"	c
DocumentLinkManager	.config/nvim/bundle/coc.nvim/src/provider/documentLinkManager.ts	/^export default class DocumentLinkManager extends Manager<DocumentLinkProvider> implements Dispos/;"	c
DocumentSymbolManager	.config/nvim/bundle/coc.nvim/src/provider/documentSymbolManager.ts	/^export default class DocumentSymbolManager extends Manager<DocumentSymbolProvider> implements Di/;"	c
Dollar	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  Dollar,$/;"	e	enum:TokenType
DollarSign	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  DollarSign = 36,$/;"	e	enum:CharCode
DoneParseArgs	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
DoubleQuote	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  DoubleQuote = 34,$/;"	e	enum:CharCode
E	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  E = 69,$/;"	e	enum:CharCode
ENABLE_LOGGING	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^let ENABLE_LOGGING = false;$/;"	v
EOF	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  EOF$/;"	e	enum:TokenType
EmailField	.config/nvim/bundle/oceanic-next/test/test.jsx	/^const EmailField = function (props) {$/;"	f
Environment Information	.config/nvim/bundle/defx.nvim/.github/ISSUE_TEMPLATE.md	/^## Environment Information$/;"	s
Environment Information	.config/nvim/bundle/oceanic-next/.github/ISSUE_TEMPLATE.md	/^## Environment Information$/;"	s
Equals	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Equals = 61,$/;"	e	enum:CharCode
Error	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Error = 3,$/;"	e	enum:RevealOutputChannelOn
ErrorAction	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^export enum ErrorAction {$/;"	g
Example vim configuration	.config/nvim/bundle/coc.nvim/Readme.md	/^## Example vim configuration$/;"	s
ExclamationMark	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  ExclamationMark = 33,$/;"	e	enum:CharCode
Expected	.config/nvim/bundle/defx.nvim/.github/ISSUE_TEMPLATE.md	/^## Expected$/;"	s
Expected	.config/nvim/bundle/oceanic-next/.github/ISSUE_TEMPLATE.md	/^## Expected$/;"	s
Experimental method:	.config/ranger/plugins/ranger_devicons/README.md	/^### Experimental method:$/;"	S
Extensions	.config/nvim/bundle/coc.nvim/Readme.md	/^## Extensions$/;"	s
F	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  F = 70,$/;"	e	enum:CharCode
FAQ	.config/nvim/bundle/vim-fugitive/README.markdown	/^## FAQ$/;"	s
FILESIZE	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^for \/F %%F in ("%DB_FILE%.files") do set FILESIZE=%%~zF$/;"	v
FILESIZE	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILESIZE=0$/;"	v
FILE_LIST_CMD	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
Features	.config/nvim/bundle/vista.vim/README.md	/^## Features$/;"	s
Feedback	.config/nvim/bundle/coc.nvim/Readme.md	/^## Feedback$/;"	s
File	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/defx.py	/^from defx.source.file import Source as File$/;"	x
File icons for the Ranger file manager	.config/ranger/plugins/ranger_devicons/README.md	/^# File icons for the Ranger file manager$/;"	c
FoldList	.config/nvim/bundle/coc.nvim/src/list/source/folders.ts	/^export default class FoldList extends BasicList {$/;"	c
FoldingRangeManager	.config/nvim/bundle/coc.nvim/src/provider/foldingRangeManager.ts	/^export default class FoldingRangeManager extends Manager<FoldingRangeProvider> implements Dispos/;"	c
Format	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  Format,$/;"	e	enum:TokenType
FormatManager	.config/nvim/bundle/coc.nvim/src/provider/formatManager.ts	/^export default class FormatManager extends Manager<DocumentFormattingEditProvider> implements Di/;"	c
FormatRangeManager	.config/nvim/bundle/coc.nvim/src/provider/formatRangeManager.ts	/^export default class FormatRangeManager extends Manager<DocumentRangeFormattingEditProvider> imp/;"	c
Forwardslash	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  Forwardslash,$/;"	e	enum:TokenType
FugitiveCommonDir	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveCommonDir(...) abort$/;"	f
FugitiveConfig	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfig(...) abort$/;"	f
FugitiveDetect	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDetect(path) abort$/;"	f
FugitiveExtractGitDir	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExtractGitDir(path) abort$/;"	f
FugitiveFind	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveFind(...) abort$/;"	f
FugitiveGitDir	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitDir(...) abort$/;"	f
FugitiveHead	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveHead(...) abort$/;"	f
FugitiveIsGitDir	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveIsGitDir(path) abort$/;"	f
FugitiveParse	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveParse(...) abort$/;"	f
FugitivePath	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePath(...) abort$/;"	f
FugitivePrepare	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePrepare(...) abort$/;"	f
FugitiveReal	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveReal(...) abort$/;"	f
FugitiveRemoteUrl	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveRemoteUrl(...) abort$/;"	f
FugitiveStatusline	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveStatusline(...) abort$/;"	f
FugitiveWorkTree	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveWorkTree(...) abort$/;"	f
G	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  G = 71,$/;"	e	enum:CharCode
Generate a logfile if appropriate	.config/nvim/bundle/defx.nvim/.github/ISSUE_TEMPLATE.md	/^## Generate a logfile if appropriate$/;"	s
GreaterThan	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  GreaterThan = 62,$/;"	e	enum:CharCode
Gutentags	.config/nvim/bundle/vim-gutentags/README.md	/^# Gutentags$/;"	c
GutentagsToggleEnabled	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUpdate	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^    command! -buffer -bang GutentagsUpdate :call s:manual_update_tags(<bang>0)$/;"	c
H	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  H = 72,$/;"	e	enum:CharCode
Hash	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Hash = 35,$/;"	e	enum:CharCode
Here is a H1	.config/nvim/bundle/oceanic-next/test/test.md	/^# Here is a H1$/;"	c
Here is a H2	.config/nvim/bundle/oceanic-next/test/test.md	/^## Here is a H2$/;"	s
Here is a H3	.config/nvim/bundle/oceanic-next/test/test.md	/^### Here is a H3$/;"	S
HoverManager	.config/nvim/bundle/coc.nvim/src/provider/hoverManager.ts	/^export default class HoverManager extends Manager<HoverProvider> implements Disposable {$/;"	c
How do I... <a name="toc"></a>	.config/nvim/bundle/coc.nvim/CONTRIBUTING.md	/^## How do I... <a name="toc"><\/a>$/;"	s
How?	.config/nvim/bundle/vim-gutentags/README.md	/^## How?$/;"	s
I	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  I = 73,$/;"	e	enum:CharCode
I have recently moved to Arch on my laptop, this is now just a clusterfuck of scripts until I find time to update them to be platform agnostic.	README.md	/^## I have recently moved to Arch on my laptop, this is now just a clusterfuck of scripts until I/;"	s
INDEX_WHOLE_PROJECT	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
ImplementationManager	.config/nvim/bundle/coc.nvim/src/provider/implementatioinManager.ts	/^export default class ImplementationManager extends Manager<ImplementationProvider> implements Di/;"	c
Info	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Info = 1,$/;"	e	enum:RevealOutputChannelOn
Initial	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Initial,$/;"	e	enum:ClientState
Install instructions	.config/ranger/plugins/ranger_devicons/README.md	/^## Install instructions$/;"	s
Installation	.config/nvim/bundle/ctrlp.vim/readme.md	/^## Installation$/;"	s
Installation	.config/nvim/bundle/defx.nvim/README.md	/^## Installation$/;"	s
Installation	.config/nvim/bundle/lightline.vim/README.md	/^## Installation$/;"	s
Installation	.config/nvim/bundle/oceanic-next/README.md	/^## Installation$/;"	s
Installation	.config/nvim/bundle/vim-fugitive/README.markdown	/^## Installation$/;"	s
Installation	.config/nvim/bundle/vista.vim/README.md	/^## Installation$/;"	s
Int	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  Int,$/;"	e	enum:TokenType
Introduction	.config/nvim/bundle/coc.nvim/CONTRIBUTING.md	/^## Introduction$/;"	s
Introduction	.config/nvim/bundle/lightline.vim/README.md	/^## Introduction$/;"	s
Introduction	.config/nvim/bundle/vista.vim/README.md	/^## Introduction$/;"	s
IsNERDTreeOpen	.vimrc	/^function! IsNERDTreeOpen()$/;"	f
J	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  J = 74,$/;"	e	enum:CharCode
J	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> J :<C-U>execute <SID>StageNext(v:count1)<CR>$/;"	m
Join the Project Team	.config/nvim/bundle/coc.nvim/CONTRIBUTING.md	/^## Join the Project Team$/;"	s
K	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  K = 75,$/;"	e	enum:CharCode
K	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> K :<C-U>execute <SID>StagePrevious(v:count1)<CR>$/;"	m
Kind	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/source.py	/^        from defx.base.kind import Base as Kind$/;"	x	member:Base.__init__	file:
Kind	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^class Kind(Base):$/;"	c
L	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  L = 76,$/;"	e	enum:CharCode
LINE_SEPARATOR_2028	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  LINE_SEPARATOR_2028 = 8232,$/;"	e	enum:CharCode
LOG_FILE	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
LessThan	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  LessThan = 60,$/;"	e	enum:CharCode
License	.config/nvim/bundle/coc.nvim/Readme.md	/^## License$/;"	s
License	.config/nvim/bundle/ctrlp.vim/readme.md	/^## License$/;"	s
License	.config/nvim/bundle/lightline.vim/README.md	/^## License$/;"	s
License	.config/nvim/bundle/vim-fugitive/README.markdown	/^## License$/;"	s
License	.config/nvim/bundle/vista.vim/README.md	/^## License$/;"	s
LineFeed	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  LineFeed = 10,$/;"	e	enum:CharCode
LinksList	.config/nvim/bundle/coc.nvim/src/list/source/links.ts	/^export default class LinksList extends BasicList {$/;"	c
LinksList	.config/nvim/bundle/coc.nvim/src/list/source/lists.ts	/^export default class LinksList extends BasicList {$/;"	c
Linux	.config/nvim/bundle/coc.nvim/src/util/platform.ts	/^  Linux = 3$/;"	e	enum:OperatingSystem
Linux	.config/nvim/bundle/coc.nvim/src/util/platform.ts	/^  Linux,$/;"	e	enum:Platform
LoopParseArgs	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
M	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  M = 77,$/;"	e	enum:CharCode
MARK	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/action.py	/^    MARK = auto()$/;"	v	class:ActionAttr
MOVE	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/clipboard.py	/^    MOVE = auto()$/;"	v	class:ClipboardAction
Mac	.config/nvim/bundle/coc.nvim/src/util/platform.ts	/^  Mac,$/;"	e	enum:Platform
Macintosh	.config/nvim/bundle/coc.nvim/src/util/platform.ts	/^  Macintosh = 2,$/;"	e	enum:OperatingSystem
MatchResult	.config/nvim/bundle/coc.nvim/src/util/score.ts	/^export interface MatchResult {$/;"	i
Modified	.config/nvim/bundle/lightline.vim/test/expand.vim	/^  function! Modified()$/;"	f
MsgTypes	.config/nvim/bundle/coc.nvim/src/types.ts	/^export type MsgTypes = 'error' | 'warning' | 'more'$/;"	a
My setup	README.md	/^# My setup$/;"	c
N	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  N = 78,$/;"	e	enum:CharCode
NERDTreeShowHidden	.vimrc	/^let NERDTreeShowHidden=1$/;"	v
NONE	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/action.py	/^    NONE = 0$/;"	v	class:ActionAttr
NO_TAGETS	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/action.py	/^    NO_TAGETS = auto()$/;"	v	class:ActionAttr
NeoVim	.config/nvim/bundle/vista.vim/README.md	/^#### NeoVim$/;"	t
Never	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Never = 4$/;"	e	enum:RevealOutputChannelOn
No	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet format section #37562', function() {$/;"	C	function:assertText
No	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet regex #36715', function() {$/;"	C	function:assertText
Note for developers of other plugins	.config/nvim/bundle/lightline.vim/README.md	/^## Note for developers of other plugins$/;"	s
Note: Python3 must be enabled before updating remote plugins	.config/nvim/bundle/defx.nvim/README.md	/^## Note: Python3 must be enabled before updating remote plugins$/;"	s
Null	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Null = 0,$/;"	e	enum:CharCode
O	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  O = 79,$/;"	e	enum:CharCode
O	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> O    :<C-U>exe <SID>BlameCommit("tabedit")<CR>$/;"	m
O	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> O     :<C-U>exe <SID>GF("tabedit")<CR>$/;"	m
O	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> O     :<C-U>tab .,.+1Gblame<CR>$/;"	m
Oceanic-Next.vim	.config/nvim/bundle/oceanic-next/README.md	/^# Oceanic-Next.vim$/;"	c
Once CtrlP is open:	.config/nvim/bundle/ctrlp.vim/readme.md	/^##### Once CtrlP is open:$/;"	T
OpenCurlyBrace	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  OpenCurlyBrace = 123,$/;"	e	enum:CharCode
OpenParen	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  OpenParen = 40,$/;"	e	enum:CharCode
OpenSquareBracket	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  OpenSquareBracket = 91,$/;"	e	enum:CharCode
OperatingSystem	.config/nvim/bundle/coc.nvim/src/util/platform.ts	/^export const enum OperatingSystem {$/;"	g
Options	.config/nvim/bundle/vista.vim/README.md	/^### Options$/;"	S
Other tips	.config/nvim/bundle/vista.vim/README.md	/^### Other tips$/;"	S
OutputList	.config/nvim/bundle/coc.nvim/src/list/source/output.ts	/^export default class OutputList extends BasicList {$/;"	c
P	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  P = 80,$/;"	e	enum:CharCode
P	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> P    :<C-U>exe <SID>BlameJump('^'.v:count1)<CR>$/;"	m
P	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> P     :<C-U>exe 'Gedit ' . <SID>fnameescape(<SID>ContainingCommit/;"	m
P	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> P :<C-U>execute <SID>StagePatch(line('.'),line('.')+v:count1-1)<C/;"	m
P	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    xnoremap <buffer> <silent> P :<C-U>execute <SID>StagePatch(line("'<"),line("'>"))<CR>$/;"	m
PATH	.config/nvim/bundle/defx.nvim/Makefile	/^PATH := .\/vim-themis\/bin:$(PATH)$/;"	m
PAUSE_BEFORE_EXIT	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
PLUGIN_DIR	.config/ranger/plugins/ranger_devicons/Makefile	/^PLUGIN_DIR=$(RANGER_DIR)\/plugins$/;"	m
POST_PROCESS_CMD	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PROJECT_ROOT	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
Package management	.config/nvim/bundle/vista.vim/README.md	/^### Package management$/;"	S
PaperColor light	.config/nvim/bundle/lightline.vim/README.md	/^### PaperColor light$/;"	S
ParseArgs	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
Parser	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, placeholder transforms', function() {$/;"	C	function:assertText
PercentSign	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  PercentSign = 37,$/;"	e	enum:CharCode
Period	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Period = 46,$/;"	e	enum:CharCode
Pipe	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  Pipe,$/;"	e	enum:TokenType
Pipe	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Pipe = 124,$/;"	e	enum:CharCode
Platform	.config/nvim/bundle/coc.nvim/src/util/platform.ts	/^export enum Platform {$/;"	g
Plugin Manager	.config/nvim/bundle/vista.vim/README.md	/^### Plugin Manager$/;"	S
Plus	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  Plus,$/;"	e	enum:TokenType
Plus	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Plus = 43,$/;"	e	enum:CharCode
Prerequisites	.config/ranger/plugins/ranger_devicons/README.md	/^## Prerequisites$/;"	s
Problems summary	.config/nvim/bundle/defx.nvim/.github/ISSUE_TEMPLATE.md	/^# Problems summary$/;"	c
Problems summary	.config/nvim/bundle/oceanic-next/.github/ISSUE_TEMPLATE.md	/^# Problems summary$/;"	c
Project Setup	.config/nvim/bundle/coc.nvim/CONTRIBUTING.md	/^## Project Setup$/;"	s
Provide Support on Issues	.config/nvim/bundle/coc.nvim/CONTRIBUTING.md	/^## Provide Support on Issues$/;"	s
Provide a minimal init.vim/vimrc with less than 50 lines (Required!)	.config/nvim/bundle/defx.nvim/.github/ISSUE_TEMPLATE.md	/^## Provide a minimal init.vim\/vimrc with less than 50 lines (Required!)$/;"	s
Provide a minimal vim rc with less than 50 lines (Required!)	.config/nvim/bundle/oceanic-next/.github/ISSUE_TEMPLATE.md	/^## Provide a minimal vim rc with less than 50 lines (Required!)$/;"	s
ProvideDeclarationSignature	.config/nvim/bundle/coc.nvim/src/language-client/declaration.ts	/^export interface ProvideDeclarationSignature {$/;"	i
ProvideDocumentColorsSignature	.config/nvim/bundle/coc.nvim/src/language-client/colorProvider.ts	/^export type ProvideDocumentColorsSignature = (document: TextDocument, token: CancellationToken) /;"	a
ProvideFoldingRangeSignature	.config/nvim/bundle/coc.nvim/src/language-client/foldingRange.ts	/^export type ProvideFoldingRangeSignature = ($/;"	a
ProvideImplementationSignature	.config/nvim/bundle/coc.nvim/src/language-client/implementation.ts	/^export interface ProvideImplementationSignature {$/;"	i
ProvideTypeDefinitionSignature	.config/nvim/bundle/coc.nvim/src/language-client/typeDefinition.ts	/^export interface ProvideTypeDefinitionSignature {$/;"	i
ProviderResult	.config/nvim/bundle/coc.nvim/src/provider/index.ts	/^export type ProviderResult<T> =$/;"	a
Pushing	.config/nvim/bundle/vim-gutentags/CONTRIBUTING.md	/^## Pushing$/;"	s
Q	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Q = 81,$/;"	e	enum:CharCode
QuestionMark	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  QuestionMark,$/;"	e	enum:TokenType
QuestionMark	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  QuestionMark = 63,$/;"	e	enum:CharCode
R	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  R = 82,$/;"	e	enum:CharCode
R	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> R :<C-U>exe <SID>ReloadStatus()<CR>$/;"	m
RANGER_DIR	.config/ranger/plugins/ranger_devicons/Makefile	/^RANGER_DIR=$(if $(XDG_CONFIG_HOME),$(XDG_CONFIG_HOME),$(HOME)\/.config)\/ranger$/;"	m
RC_FILE	.config/ranger/plugins/ranger_devicons/Makefile	/^RC_FILE=$(RANGER_DIR)\/rc.conf$/;"	m
REDRAW	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/action.py	/^    REDRAW = auto()$/;"	v	class:ActionAttr
ReferenceManager	.config/nvim/bundle/coc.nvim/src/provider/referenceManager.ts	/^export default class ReferenceManager extends Manager<ReferenceProvider> implements Disposable {$/;"	c
Related Projects	.config/nvim/bundle/vim-gutentags/README.md	/^# Related Projects$/;"	c
RenameManager	.config/nvim/bundle/coc.nvim/src/provider/renameManager.ts	/^export default class RenameManager extends Manager<RenameProvider> implements Disposable {$/;"	c
Reproduce the bug	.config/nvim/bundle/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Reproduce the bug$/;"	s
Requirement	.config/nvim/bundle/vista.vim/README.md	/^## Requirement$/;"	s
Requirements	.config/nvim/bundle/defx.nvim/README.md	/^## Requirements$/;"	s
Restart	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Restart = 2$/;"	e	enum:CloseAction
Result from CocInfo	.config/nvim/bundle/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Result from CocInfo$/;"	s
RevealOutputChannelOn	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^export enum RevealOutputChannelOn {$/;"	g
Review Pull Requests	.config/nvim/bundle/coc.nvim/CONTRIBUTING.md	/^## Review Pull Requests$/;"	s
Rplugin	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/rplugin.py	/^class Rplugin:$/;"	c
Running	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Running = 2,$/;"	e	enum:State
Running	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Running,$/;"	e	enum:ClientState
S	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  S = 83,$/;"	e	enum:CharCode
S	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> S     :<C-U>echoerr 'Use gO'<CR>$/;"	m
SCORE_MIN	.config/nvim/bundle/coc.nvim/src/util/fzy.ts	/^let SCORE_MIN = -Infinity$/;"	v
SORT_METHODS	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/sort.py	/^SORT_METHODS = {$/;"	v
Screen shot (if possible)	.config/nvim/bundle/defx.nvim/.github/ISSUE_TEMPLATE.md	/^## Screen shot (if possible)$/;"	s
Screen shot (if possible)	.config/nvim/bundle/oceanic-next/.github/ISSUE_TEMPLATE.md	/^## Screen shot (if possible)$/;"	s
Screencasts	.config/nvim/bundle/vim-fugitive/README.markdown	/^## Screencasts$/;"	s
Screenshot	.config/nvim/bundle/oceanic-next/README.md	/^## Screenshot$/;"	s
Screenshots	.config/nvim/bundle/defx.nvim/README.md	/^## Screenshots$/;"	s
Screenshots (optional)	.config/nvim/bundle/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Screenshots (optional)$/;"	s
SelectionRangeManager	.config/nvim/bundle/coc.nvim/src/provider/rangeManager.ts	/^export default class SelectionRangeManager extends Manager<SelectionRangeProvider> implements Di/;"	c
SelectionRangeProviderMiddleware	.config/nvim/bundle/coc.nvim/src/language-client/selectionRange.ts	/^export interface SelectionRangeProviderMiddleware {$/;"	i
Self-Promotion	.config/nvim/bundle/vim-fugitive/README.markdown	/^## Self-Promotion$/;"	s
Semicolon	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Semicolon = 59,$/;"	e	enum:CharCode
ServicesList	.config/nvim/bundle/coc.nvim/src/list/source/services.ts	/^export default class ServicesList extends BasicList {$/;"	c
Show the nearest method/function in the statusline	.config/nvim/bundle/vista.vim/README.md	/^### Show the nearest method\/function in the statusline$/;"	S
ShowUsage	.config/nvim/bundle/vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	.config/nvim/bundle/vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Shutdown	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Shutdown = 2$/;"	e	enum:ErrorAction
SignatureManager	.config/nvim/bundle/coc.nvim/src/provider/signatureManager.ts	/^export default class SignatureManager extends Manager<SignatureHelpProvider> implements Disposab/;"	c
SingleQuote	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  SingleQuote = 39,$/;"	e	enum:CharCode
Slash	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Slash = 47,$/;"	e	enum:CharCode
SoundCloudAudio	.config/nvim/bundle/oceanic-next/test/test.js	/^class SoundCloudAudio extends SoundCloudAudio {$/;"	c
Source	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/source/file.py	/^class Source(Base):$/;"	c
Source	.config/nvim/bundle/defx.nvim/rplugin/python3/denite/source/defx/history.py	/^class Source(Base):$/;"	c
SourceAllIn	.config/nvim/init.vim	/^function! SourceAllIn(path)$/;"	f
SourcesList	.config/nvim/bundle/coc.nvim/src/list/source/sources.ts	/^export default class SourcesList extends BasicList {$/;"	c
Space	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Space = 32,$/;"	e	enum:CharCode
Spirit of this plugin	.config/nvim/bundle/lightline.vim/README.md	/^## Spirit of this plugin$/;"	s
Stable method:	.config/ranger/plugins/ranger_devicons/README.md	/^### Stable method:$/;"	S
StartFailed	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  StartFailed,$/;"	e	enum:ClientState
Starting	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Starting = 3,$/;"	e	enum:State
Starting	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Starting,$/;"	e	enum:ClientState
State	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^export enum State {$/;"	g
Stopped	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Stopped = 1,$/;"	e	enum:State
Stopped	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Stopped$/;"	e	enum:ClientState
Stopping	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Stopping,$/;"	e	enum:ClientState
SyncTree	.vimrc	/^function! SyncTree()$/;"	f
T	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  T = 84,$/;"	e	enum:CharCode
TAGS_FILE	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
THEMIS_ARGS	.config/nvim/bundle/defx.nvim/Makefile	/^export THEMIS_ARGS := -e -s --headless$/;"	m
THEMIS_HOME	.config/nvim/bundle/defx.nvim/Makefile	/^export THEMIS_HOME := .\/vim-themis$/;"	m
THEMIS_VIM	.config/nvim/bundle/defx.nvim/Makefile	/^export THEMIS_VIM  := nvim$/;"	m
TODO:	README.md	/^## TODO:$/;"	s
TREE	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/action.py	/^    TREE = auto()$/;"	v	class:ActionAttr
Tab	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Tab = 9,$/;"	e	enum:CharCode
Table Of Contents	.config/nvim/bundle/vista.vim/README.md	/^## Table Of Contents$/;"	s
Table of contents	.config/nvim/bundle/coc.nvim/Readme.md	/^## Table of contents$/;"	s
Task	.config/nvim/bundle/coc.nvim/src/language-client/utils/async.ts	/^export interface Task<T> {$/;"	i
Task	.config/nvim/bundle/coc.nvim/src/model/task.ts	/^export default class Task implements Disposable {$/;"	c
TaskList	.config/nvim/bundle/coc.nvim/src/__tests__/list/worker.test.ts	/^class TaskList extends BasicList {$/;"	c
TestList	.config/nvim/bundle/coc.nvim/src/__tests__/list/mappings.test.ts	/^class TestList extends BasicList {$/;"	c
Testing	.config/nvim/bundle/vim-gutentags/CONTRIBUTING.md	/^## Testing$/;"	s
Thanks to	.config/nvim/bundle/defx-icons/README.md	/^## Thanks to$/;"	s
The reproduce ways from neovim starting	.config/nvim/bundle/oceanic-next/.github/ISSUE_TEMPLATE.md	/^## The reproduce ways from neovim starting$/;"	s
The reproduce ways from neovim/Vim starting (Required!)	.config/nvim/bundle/defx.nvim/.github/ISSUE_TEMPLATE.md	/^## The reproduce ways from neovim\/Vim starting (Required!)$/;"	s
Tilde	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Tilde = 126,$/;"	e	enum:CharCode
TokenType	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^export const enum TokenType {$/;"	g
TransportKind	.config/nvim/bundle/coc.nvim/src/language-client/index.ts	/^export enum TransportKind {$/;"	g
Trouble shooting	.config/nvim/bundle/coc.nvim/Readme.md	/^## Trouble shooting$/;"	s
TypeDefinitionManager	.config/nvim/bundle/coc.nvim/src/provider/typeDefinitionManager.ts	/^export default class TypeDefinitionManager extends Manager<TypeDefinitionProvider> implements Di/;"	c
U	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U = 85,$/;"	e	enum:CharCode
U	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> U :<C-U>echoerr 'Changed to X'<CR>$/;"	m
UPDATED_SOURCE	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
UTF8_BOM	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  UTF8_BOM = 65279$/;"	e	enum:CharCode
U_ACUTE_ACCENT	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_ACUTE_ACCENT = 0x00B4,        \/\/ U+00B4 ACUTE ACCENT$/;"	e	enum:CharCode
U_BREVE	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_BREVE = 0x02D8,          \/\/ U+02D8 BREVE$/;"	e	enum:CharCode
U_CEDILLA	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_CEDILLA = 0x00B8,          \/\/ U+00B8 CEDILLA$/;"	e	enum:CharCode
U_CIRCUMFLEX	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_CIRCUMFLEX = 0x005E,         \/\/ U+005E CIRCUMFLEX$/;"	e	enum:CharCode
U_Combining_Acute_Accent	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Acute_Accent = 0x0301,        \/\/ U+0301 Combining Acute Accent$/;"	e	enum:CharCode
U_Combining_Acute_Accent_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Acute_Accent_Below = 0x0317,      \/\/ U+0317 Combining Acute Accent Below$/;"	e	enum:CharCode
U_Combining_Acute_Tone_Mark	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Acute_Tone_Mark = 0x0341,       \/\/  U+0341 Combining Acute Tone Mark$/;"	e	enum:CharCode
U_Combining_Almost_Equal_To_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Almost_Equal_To_Above = 0x034C,      \/\/  U+034C Combining Almost Equal To Above$/;"	e	enum:CharCode
U_Combining_Asterisk_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Asterisk_Below = 0x0359,       \/\/  U+0359 Combining Asterisk Below$/;"	e	enum:CharCode
U_Combining_Breve	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Breve = 0x0306,          \/\/ U+0306 Combining Breve$/;"	e	enum:CharCode
U_Combining_Breve_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Breve_Below = 0x032E,        \/\/ U+032E Combining Breve Below$/;"	e	enum:CharCode
U_Combining_Bridge_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Bridge_Above = 0x0346,        \/\/  U+0346 Combining Bridge Above$/;"	e	enum:CharCode
U_Combining_Bridge_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Bridge_Below = 0x032A,        \/\/ U+032A Combining Bridge Below$/;"	e	enum:CharCode
U_Combining_Candrabindu	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Candrabindu = 0x0310,        \/\/ U+0310 Combining Candrabindu$/;"	e	enum:CharCode
U_Combining_Caron	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Caron = 0x030C,          \/\/ U+030C Combining Caron$/;"	e	enum:CharCode
U_Combining_Caron_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Caron_Below = 0x032C,        \/\/ U+032C Combining Caron Below$/;"	e	enum:CharCode
U_Combining_Cedilla	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Cedilla = 0x0327,         \/\/ U+0327 Combining Cedilla$/;"	e	enum:CharCode
U_Combining_Circumflex_Accent	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Circumflex_Accent = 0x0302,       \/\/ U+0302 Combining Circumflex Accent$/;"	e	enum:CharCode
U_Combining_Circumflex_Accent_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Circumflex_Accent_Below = 0x032D,     \/\/ U+032D Combining Circumflex Accent Belo/;"	e	enum:CharCode
U_Combining_Comma_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Comma_Above = 0x0313,        \/\/ U+0313 Combining Comma Above$/;"	e	enum:CharCode
U_Combining_Comma_Above_Right	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Comma_Above_Right = 0x0315,       \/\/ U+0315 Combining Comma Above Right$/;"	e	enum:CharCode
U_Combining_Comma_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Comma_Below = 0x0326,        \/\/ U+0326 Combining Comma Below$/;"	e	enum:CharCode
U_Combining_Diaeresis	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Diaeresis = 0x0308,         \/\/ U+0308 Combining Diaeresis$/;"	e	enum:CharCode
U_Combining_Diaeresis_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Diaeresis_Below = 0x0324,       \/\/ U+0324 Combining Diaeresis Below$/;"	e	enum:CharCode
U_Combining_Dot_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Dot_Above = 0x0307,         \/\/ U+0307 Combining Dot Above$/;"	e	enum:CharCode
U_Combining_Dot_Above_Right	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Dot_Above_Right = 0x0358,       \/\/  U+0358 Combining Dot Above Right$/;"	e	enum:CharCode
U_Combining_Dot_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Dot_Below = 0x0323,         \/\/ U+0323 Combining Dot Below$/;"	e	enum:CharCode
U_Combining_Double_Acute_Accent	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Acute_Accent = 0x030B,      \/\/ U+030B Combining Double Acute Accent$/;"	e	enum:CharCode
U_Combining_Double_Breve	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Breve = 0x035D,        \/\/  U+035D Combining Double Breve$/;"	e	enum:CharCode
U_Combining_Double_Breve_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Breve_Below = 0x035C,      \/\/  U+035C Combining Double Breve Below$/;"	e	enum:CharCode
U_Combining_Double_Grave_Accent	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Grave_Accent = 0x030F,      \/\/ U+030F Combining Double Grave Accent$/;"	e	enum:CharCode
U_Combining_Double_Inverted_Breve	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Inverted_Breve = 0x0361,      \/\/  U+0361 Combining Double Inverted Breve$/;"	e	enum:CharCode
U_Combining_Double_Low_Line	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Low_Line = 0x0333,       \/\/ U+0333 Combining Double Low Line$/;"	e	enum:CharCode
U_Combining_Double_Macron	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Macron = 0x035E,        \/\/  U+035E Combining Double Macron$/;"	e	enum:CharCode
U_Combining_Double_Macron_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Macron_Below = 0x035F,      \/\/  U+035F Combining Double Macron Below$/;"	e	enum:CharCode
U_Combining_Double_Overline	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Overline = 0x033F,       \/\/  U+033F Combining Double Overline$/;"	e	enum:CharCode
U_Combining_Double_Rightwards_Arrow_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Rightwards_Arrow_Below = 0x0362,    \/\/  U+0362 Combining Double Rightward/;"	e	enum:CharCode
U_Combining_Double_Ring_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Ring_Below = 0x035A,       \/\/  U+035A Combining Double Ring Below$/;"	e	enum:CharCode
U_Combining_Double_Tilde	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Tilde = 0x0360,        \/\/  U+0360 Combining Double Tilde$/;"	e	enum:CharCode
U_Combining_Double_Vertical_Line_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Vertical_Line_Above = 0x030E,    \/\/ U+030E Combining Double Vertical Line/;"	e	enum:CharCode
U_Combining_Double_Vertical_Line_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Double_Vertical_Line_Below = 0x0348,    \/\/  U+0348 Combining Double Vertical Lin/;"	e	enum:CharCode
U_Combining_Down_Tack_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Down_Tack_Below = 0x031E,       \/\/ U+031E Combining Down Tack Below$/;"	e	enum:CharCode
U_Combining_Equals_Sign_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Equals_Sign_Below = 0x0347,       \/\/  U+0347 Combining Equals Sign Below$/;"	e	enum:CharCode
U_Combining_Fermata	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Fermata = 0x0352,         \/\/  U+0352 Combining Fermata$/;"	e	enum:CharCode
U_Combining_Grapheme_Joiner	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Grapheme_Joiner = 0x034F,       \/\/  U+034F Combining Grapheme Joiner$/;"	e	enum:CharCode
U_Combining_Grave_Accent	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Grave_Accent = 0x0300,        \/\/ U+0300 Combining Grave Accent$/;"	e	enum:CharCode
U_Combining_Grave_Accent_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Grave_Accent_Below = 0x0316,      \/\/ U+0316 Combining Grave Accent Below$/;"	e	enum:CharCode
U_Combining_Grave_Tone_Mark	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Grave_Tone_Mark = 0x0340,       \/\/  U+0340 Combining Grave Tone Mark$/;"	e	enum:CharCode
U_Combining_Greek_Dialytika_Tonos	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Greek_Dialytika_Tonos = 0x0344,      \/\/  U+0344 Combining Greek Dialytika Tonos$/;"	e	enum:CharCode
U_Combining_Greek_Koronis	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Greek_Koronis = 0x0343,        \/\/  U+0343 Combining Greek Koronis$/;"	e	enum:CharCode
U_Combining_Greek_Perispomeni	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Greek_Perispomeni = 0x0342,       \/\/  U+0342 Combining Greek Perispomeni$/;"	e	enum:CharCode
U_Combining_Greek_Ypogegrammeni	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Greek_Ypogegrammeni = 0x0345,      \/\/  U+0345 Combining Greek Ypogegrammeni$/;"	e	enum:CharCode
U_Combining_Homothetic_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Homothetic_Above = 0x034B,       \/\/  U+034B Combining Homothetic Above$/;"	e	enum:CharCode
U_Combining_Hook_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Hook_Above = 0x0309,        \/\/ U+0309 Combining Hook Above$/;"	e	enum:CharCode
U_Combining_Horn	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Horn = 0x031B,          \/\/ U+031B Combining Horn$/;"	e	enum:CharCode
U_Combining_Inverted_Breve	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Inverted_Breve = 0x0311,       \/\/ U+0311 Combining Inverted Breve$/;"	e	enum:CharCode
U_Combining_Inverted_Breve_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Inverted_Breve_Below = 0x032F,      \/\/ U+032F Combining Inverted Breve Below$/;"	e	enum:CharCode
U_Combining_Inverted_Bridge_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Inverted_Bridge_Below = 0x033A,      \/\/  U+033A Combining Inverted Bridge Below$/;"	e	enum:CharCode
U_Combining_Inverted_Double_Arch_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Inverted_Double_Arch_Below = 0x032B,    \/\/ U+032B Combining Inverted Double Arch/;"	e	enum:CharCode
U_Combining_Latin_Small_Letter_A	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Latin_Small_Letter_A = 0x0363,       \/\/  U+0363 Combining Latin Small Letter A$/;"	e	enum:CharCode
U_Combining_Latin_Small_Letter_C	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Latin_Small_Letter_C = 0x0368,       \/\/  U+0368 Combining Latin Small Letter C$/;"	e	enum:CharCode
U_Combining_Latin_Small_Letter_D	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Latin_Small_Letter_D = 0x0369,       \/\/  U+0369 Combining Latin Small Letter D$/;"	e	enum:CharCode
U_Combining_Latin_Small_Letter_E	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Latin_Small_Letter_E = 0x0364,       \/\/  U+0364 Combining Latin Small Letter E$/;"	e	enum:CharCode
U_Combining_Latin_Small_Letter_H	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Latin_Small_Letter_H = 0x036A,       \/\/  U+036A Combining Latin Small Letter H$/;"	e	enum:CharCode
U_Combining_Latin_Small_Letter_I	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Latin_Small_Letter_I = 0x0365,       \/\/  U+0365 Combining Latin Small Letter I$/;"	e	enum:CharCode
U_Combining_Latin_Small_Letter_M	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Latin_Small_Letter_M = 0x036B,       \/\/  U+036B Combining Latin Small Letter M$/;"	e	enum:CharCode
U_Combining_Latin_Small_Letter_O	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Latin_Small_Letter_O = 0x0366,       \/\/  U+0366 Combining Latin Small Letter O$/;"	e	enum:CharCode
U_Combining_Latin_Small_Letter_R	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Latin_Small_Letter_R = 0x036C,       \/\/  U+036C Combining Latin Small Letter R$/;"	e	enum:CharCode
U_Combining_Latin_Small_Letter_T	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Latin_Small_Letter_T = 0x036D,       \/\/  U+036D Combining Latin Small Letter T$/;"	e	enum:CharCode
U_Combining_Latin_Small_Letter_U	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Latin_Small_Letter_U = 0x0367,       \/\/  U+0367 Combining Latin Small Letter U$/;"	e	enum:CharCode
U_Combining_Latin_Small_Letter_V	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Latin_Small_Letter_V = 0x036E,       \/\/  U+036E Combining Latin Small Letter V$/;"	e	enum:CharCode
U_Combining_Latin_Small_Letter_X	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Latin_Small_Letter_X = 0x036F,       \/\/  U+036F Combining Latin Small Letter X$/;"	e	enum:CharCode
U_Combining_Left_Angle_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Left_Angle_Above = 0x031A,       \/\/ U+031A Combining Left Angle Above$/;"	e	enum:CharCode
U_Combining_Left_Angle_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Left_Angle_Below = 0x0349,       \/\/  U+0349 Combining Left Angle Below$/;"	e	enum:CharCode
U_Combining_Left_Arrowhead_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Left_Arrowhead_Below = 0x0354,      \/\/  U+0354 Combining Left Arrowhead Below$/;"	e	enum:CharCode
U_Combining_Left_Half_Ring_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Left_Half_Ring_Above = 0x0351,      \/\/  U+0351 Combining Left Half Ring Above$/;"	e	enum:CharCode
U_Combining_Left_Half_Ring_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Left_Half_Ring_Below = 0x031C,      \/\/ U+031C Combining Left Half Ring Below$/;"	e	enum:CharCode
U_Combining_Left_Right_Arrow_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Left_Right_Arrow_Below = 0x034D,     \/\/  U+034D Combining Left Right Arrow Below$/;"	e	enum:CharCode
U_Combining_Left_Tack_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Left_Tack_Below = 0x0318,       \/\/ U+0318 Combining Left Tack Below$/;"	e	enum:CharCode
U_Combining_Long_Solidus_Overlay	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Long_Solidus_Overlay = 0x0338,      \/\/  U+0338 Combining Long Solidus Overlay$/;"	e	enum:CharCode
U_Combining_Long_Stroke_Overlay	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Long_Stroke_Overlay = 0x0336,      \/\/ U+0336 Combining Long Stroke Overlay$/;"	e	enum:CharCode
U_Combining_Low_Line	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Low_Line = 0x0332,         \/\/ U+0332 Combining Low Line$/;"	e	enum:CharCode
U_Combining_Macron	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Macron = 0x0304,         \/\/ U+0304 Combining Macron$/;"	e	enum:CharCode
U_Combining_Macron_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Macron_Below = 0x0331,        \/\/ U+0331 Combining Macron Below$/;"	e	enum:CharCode
U_Combining_Minus_Sign_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Minus_Sign_Below = 0x0320,       \/\/ U+0320 Combining Minus Sign Below$/;"	e	enum:CharCode
U_Combining_Not_Tilde_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Not_Tilde_Above = 0x034A,       \/\/  U+034A Combining Not Tilde Above$/;"	e	enum:CharCode
U_Combining_Ogonek	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Ogonek = 0x0328,         \/\/ U+0328 Combining Ogonek$/;"	e	enum:CharCode
U_Combining_Overline	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Overline = 0x0305,         \/\/ U+0305 Combining Overline$/;"	e	enum:CharCode
U_Combining_Palatalized_Hook_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Palatalized_Hook_Below = 0x0321,     \/\/ U+0321 Combining Palatalized Hook Below$/;"	e	enum:CharCode
U_Combining_Plus_Sign_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Plus_Sign_Below = 0x031F,       \/\/ U+031F Combining Plus Sign Below$/;"	e	enum:CharCode
U_Combining_Retroflex_Hook_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Retroflex_Hook_Below = 0x0322,      \/\/ U+0322 Combining Retroflex Hook Below$/;"	e	enum:CharCode
U_Combining_Reversed_Comma_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Reversed_Comma_Above = 0x0314,      \/\/ U+0314 Combining Reversed Comma Above$/;"	e	enum:CharCode
U_Combining_Right_Arrowhead_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Right_Arrowhead_Above = 0x0350,      \/\/  U+0350 Combining Right Arrowhead Above$/;"	e	enum:CharCode
U_Combining_Right_Arrowhead_And_Up_Arrowhead_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Right_Arrowhead_And_Up_Arrowhead_Below = 0x0356, \/\/  U+0356 Combining Right Arro/;"	e	enum:CharCode
U_Combining_Right_Arrowhead_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Right_Arrowhead_Below = 0x0355,      \/\/  U+0355 Combining Right Arrowhead Below$/;"	e	enum:CharCode
U_Combining_Right_Half_Ring_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Right_Half_Ring_Above = 0x0357,      \/\/  U+0357 Combining Right Half Ring Above$/;"	e	enum:CharCode
U_Combining_Right_Half_Ring_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Right_Half_Ring_Below = 0x0339,      \/\/  U+0339 Combining Right Half Ring Below$/;"	e	enum:CharCode
U_Combining_Right_Tack_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Right_Tack_Below = 0x0319,       \/\/ U+0319 Combining Right Tack Below$/;"	e	enum:CharCode
U_Combining_Ring_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Ring_Above = 0x030A,        \/\/ U+030A Combining Ring Above$/;"	e	enum:CharCode
U_Combining_Ring_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Ring_Below = 0x0325,        \/\/ U+0325 Combining Ring Below$/;"	e	enum:CharCode
U_Combining_Seagull_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Seagull_Below = 0x033C,        \/\/  U+033C Combining Seagull Below$/;"	e	enum:CharCode
U_Combining_Short_Solidus_Overlay	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Short_Solidus_Overlay = 0x0337,      \/\/ U+0337 Combining Short Solidus Overlay$/;"	e	enum:CharCode
U_Combining_Short_Stroke_Overlay	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Short_Stroke_Overlay = 0x0335,      \/\/ U+0335 Combining Short Stroke Overlay$/;"	e	enum:CharCode
U_Combining_Square_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Square_Below = 0x033B,        \/\/  U+033B Combining Square Below$/;"	e	enum:CharCode
U_Combining_Tilde	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Tilde = 0x0303,          \/\/ U+0303 Combining Tilde$/;"	e	enum:CharCode
U_Combining_Tilde_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Tilde_Below = 0x0330,        \/\/ U+0330 Combining Tilde Below$/;"	e	enum:CharCode
U_Combining_Tilde_Overlay	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Tilde_Overlay = 0x0334,        \/\/ U+0334 Combining Tilde Overlay$/;"	e	enum:CharCode
U_Combining_Turned_Comma_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Turned_Comma_Above = 0x0312,      \/\/ U+0312 Combining Turned Comma Above$/;"	e	enum:CharCode
U_Combining_Up_Tack_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Up_Tack_Below = 0x031D,        \/\/ U+031D Combining Up Tack Below$/;"	e	enum:CharCode
U_Combining_Upwards_Arrow_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Upwards_Arrow_Below = 0x034E,      \/\/  U+034E Combining Upwards Arrow Below$/;"	e	enum:CharCode
U_Combining_Vertical_Line_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Vertical_Line_Above = 0x030D,      \/\/ U+030D Combining Vertical Line Above$/;"	e	enum:CharCode
U_Combining_Vertical_Line_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Vertical_Line_Below = 0x0329,      \/\/ U+0329 Combining Vertical Line Below$/;"	e	enum:CharCode
U_Combining_Vertical_Tilde	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Vertical_Tilde = 0x033E,       \/\/  U+033E Combining Vertical Tilde$/;"	e	enum:CharCode
U_Combining_X_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_X_Above = 0x033D,         \/\/  U+033D Combining X Above$/;"	e	enum:CharCode
U_Combining_X_Below	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_X_Below = 0x0353,         \/\/  U+0353 Combining X Below$/;"	e	enum:CharCode
U_Combining_Zigzag_Above	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_Combining_Zigzag_Above = 0x035B,        \/\/  U+035B Combining Zigzag Above$/;"	e	enum:CharCode
U_DIAERESIS	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_DIAERESIS = 0x00A8,         \/\/ U+00A8 DIAERESIS$/;"	e	enum:CharCode
U_DOT_ABOVE	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_DOT_ABOVE = 0x02D9,         \/\/ U+02D9 DOT ABOVE$/;"	e	enum:CharCode
U_DOUBLE_ACUTE_ACCENT	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_DOUBLE_ACUTE_ACCENT = 0x02DD,       \/\/ U+02DD DOUBLE ACUTE ACCENT$/;"	e	enum:CharCode
U_GRAVE_ACCENT	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GRAVE_ACCENT = 0x0060,        \/\/ U+0060 GRAVE ACCENT$/;"	e	enum:CharCode
U_GREEK_DASIA	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_DASIA = 0x1FFE,         \/\/ U+1FFE GREEK DASIA$/;"	e	enum:CharCode
U_GREEK_DASIA_AND_OXIA	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_DASIA_AND_OXIA = 0x1FDE,      \/\/ U+1FDE GREEK DASIA AND OXIA$/;"	e	enum:CharCode
U_GREEK_DASIA_AND_PERISPOMENI	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_DASIA_AND_PERISPOMENI = 0x1FDF,     \/\/ U+1FDF GREEK DASIA AND PERISPOMENI$/;"	e	enum:CharCode
U_GREEK_DASIA_AND_VARIA	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_DASIA_AND_VARIA = 0x1FDD,      \/\/ U+1FDD GREEK DASIA AND VARIA$/;"	e	enum:CharCode
U_GREEK_DIALYTIKA_AND_OXIA	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_DIALYTIKA_AND_OXIA = 0x1FEE,     \/\/ U+1FEE GREEK DIALYTIKA AND OXIA$/;"	e	enum:CharCode
U_GREEK_DIALYTIKA_AND_PERISPOMENI	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_DIALYTIKA_AND_PERISPOMENI = 0x1FC1,    \/\/ U+1FC1 GREEK DIALYTIKA AND PERISPOMENI$/;"	e	enum:CharCode
U_GREEK_DIALYTIKA_AND_VARIA	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_DIALYTIKA_AND_VARIA = 0x1FED,     \/\/ U+1FED GREEK DIALYTIKA AND VARIA$/;"	e	enum:CharCode
U_GREEK_DIALYTIKA_TONOS	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_DIALYTIKA_TONOS = 0x0385,      \/\/ U+0385 GREEK DIALYTIKA TONOS$/;"	e	enum:CharCode
U_GREEK_KORONIS	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_KORONIS = 0x1FBD,        \/\/ U+1FBD GREEK KORONIS$/;"	e	enum:CharCode
U_GREEK_LOWER_NUMERAL_SIGN	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_LOWER_NUMERAL_SIGN = 0x0375,     \/\/ U+0375 GREEK LOWER NUMERAL SIGN$/;"	e	enum:CharCode
U_GREEK_OXIA	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_OXIA = 0x1FFD,         \/\/ U+1FFD GREEK OXIA$/;"	e	enum:CharCode
U_GREEK_PERISPOMENI	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_PERISPOMENI = 0x1FC0,       \/\/ U+1FC0 GREEK PERISPOMENI$/;"	e	enum:CharCode
U_GREEK_PSILI	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_PSILI = 0x1FBF,         \/\/ U+1FBF GREEK PSILI$/;"	e	enum:CharCode
U_GREEK_PSILI_AND_OXIA	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_PSILI_AND_OXIA = 0x1FCE,      \/\/ U+1FCE GREEK PSILI AND OXIA$/;"	e	enum:CharCode
U_GREEK_PSILI_AND_PERISPOMENI	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_PSILI_AND_PERISPOMENI = 0x1FCF,     \/\/ U+1FCF GREEK PSILI AND PERISPOMENI$/;"	e	enum:CharCode
U_GREEK_PSILI_AND_VARIA	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_PSILI_AND_VARIA = 0x1FCD,      \/\/ U+1FCD GREEK PSILI AND VARIA$/;"	e	enum:CharCode
U_GREEK_TONOS	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_TONOS = 0x0384,         \/\/ U+0384 GREEK TONOS$/;"	e	enum:CharCode
U_GREEK_VARIA	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_GREEK_VARIA = 0x1FEF,         \/\/ U+1FEF GREEK VARIA$/;"	e	enum:CharCode
U_MACRON	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MACRON = 0x00AF,          \/\/ U+00AF MACRON$/;"	e	enum:CharCode
U_MODIFIER_LETTER_BEGIN_HIGH_TONE	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_BEGIN_HIGH_TONE = 0x02F9,    \/\/ U+02F9 MODIFIER LETTER BEGIN HIGH TONE$/;"	e	enum:CharCode
U_MODIFIER_LETTER_BEGIN_LOW_TONE	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_BEGIN_LOW_TONE = 0x02FB,    \/\/ U+02FB MODIFIER LETTER BEGIN LOW TONE$/;"	e	enum:CharCode
U_MODIFIER_LETTER_CENTRED_LEFT_HALF_RING	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_CENTRED_LEFT_HALF_RING = 0x02D3,  \/\/ U+02D3 MODIFIER LETTER CENTRED LEFT H/;"	e	enum:CharCode
U_MODIFIER_LETTER_CENTRED_RIGHT_HALF_RING	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_CENTRED_RIGHT_HALF_RING = 0x02D2,  \/\/ U+02D2 MODIFIER LETTER CENTRED RIGHT/;"	e	enum:CharCode
U_MODIFIER_LETTER_CROSS_ACCENT	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_CROSS_ACCENT = 0x02DF,    \/\/ U+02DF MODIFIER LETTER CROSS ACCENT$/;"	e	enum:CharCode
U_MODIFIER_LETTER_DOWN_ARROWHEAD	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_DOWN_ARROWHEAD = 0x02C5,    \/\/ U+02C5 MODIFIER LETTER DOWN ARROWHEAD$/;"	e	enum:CharCode
U_MODIFIER_LETTER_DOWN_TACK	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_DOWN_TACK = 0x02D5,     \/\/ U+02D5 MODIFIER LETTER DOWN TACK$/;"	e	enum:CharCode
U_MODIFIER_LETTER_END_HIGH_TONE	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_END_HIGH_TONE = 0x02FA,    \/\/ U+02FA MODIFIER LETTER END HIGH TONE$/;"	e	enum:CharCode
U_MODIFIER_LETTER_END_LOW_TONE	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_END_LOW_TONE = 0x02FC,    \/\/ U+02FC MODIFIER LETTER END LOW TONE$/;"	e	enum:CharCode
U_MODIFIER_LETTER_EXTRA_HIGH_TONE_BAR	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_EXTRA_HIGH_TONE_BAR = 0x02E5,   \/\/ U+02E5 MODIFIER LETTER EXTRA-HIGH TONE /;"	e	enum:CharCode
U_MODIFIER_LETTER_EXTRA_LOW_TONE_BAR	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_EXTRA_LOW_TONE_BAR = 0x02E9,   \/\/ U+02E9 MODIFIER LETTER EXTRA-LOW TONE BA/;"	e	enum:CharCode
U_MODIFIER_LETTER_HIGH_TONE_BAR	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_HIGH_TONE_BAR = 0x02E6,    \/\/ U+02E6 MODIFIER LETTER HIGH TONE BAR$/;"	e	enum:CharCode
U_MODIFIER_LETTER_LEFT_ARROWHEAD	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_LEFT_ARROWHEAD = 0x02C2,    \/\/ U+02C2 MODIFIER LETTER LEFT ARROWHEAD$/;"	e	enum:CharCode
U_MODIFIER_LETTER_LOW_DOWN_ARROWHEAD	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_LOW_DOWN_ARROWHEAD = 0x02EF,   \/\/ U+02EF MODIFIER LETTER LOW DOWN ARROWHEA/;"	e	enum:CharCode
U_MODIFIER_LETTER_LOW_LEFT_ARROW	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_LOW_LEFT_ARROW = 0x02FF,    \/\/ U+02FF MODIFIER LETTER LOW LEFT ARROW$/;"	e	enum:CharCode
U_MODIFIER_LETTER_LOW_LEFT_ARROWHEAD	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_LOW_LEFT_ARROWHEAD = 0x02F1,   \/\/ U+02F1 MODIFIER LETTER LOW LEFT ARROWHEA/;"	e	enum:CharCode
U_MODIFIER_LETTER_LOW_RIGHT_ARROWHEAD	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_LOW_RIGHT_ARROWHEAD = 0x02F2,   \/\/ U+02F2 MODIFIER LETTER LOW RIGHT ARROWH/;"	e	enum:CharCode
U_MODIFIER_LETTER_LOW_RING	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_LOW_RING = 0x02F3,     \/\/ U+02F3 MODIFIER LETTER LOW RING$/;"	e	enum:CharCode
U_MODIFIER_LETTER_LOW_TILDE	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_LOW_TILDE = 0x02F7,     \/\/ U+02F7 MODIFIER LETTER LOW TILDE$/;"	e	enum:CharCode
U_MODIFIER_LETTER_LOW_TONE_BAR	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_LOW_TONE_BAR = 0x02E8,    \/\/ U+02E8 MODIFIER LETTER LOW TONE BAR$/;"	e	enum:CharCode
U_MODIFIER_LETTER_LOW_UP_ARROWHEAD	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_LOW_UP_ARROWHEAD = 0x02F0,   \/\/ U+02F0 MODIFIER LETTER LOW UP ARROWHEAD$/;"	e	enum:CharCode
U_MODIFIER_LETTER_MIDDLE_DOUBLE_ACUTE_ACCENT	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_MIDDLE_DOUBLE_ACUTE_ACCENT = 0x02F6, \/\/ U+02F6 MODIFIER LETTER MIDDLE DOUB/;"	e	enum:CharCode
U_MODIFIER_LETTER_MIDDLE_DOUBLE_GRAVE_ACCENT	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_MIDDLE_DOUBLE_GRAVE_ACCENT = 0x02F5, \/\/ U+02F5 MODIFIER LETTER MIDDLE DOUB/;"	e	enum:CharCode
U_MODIFIER_LETTER_MIDDLE_GRAVE_ACCENT	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_MIDDLE_GRAVE_ACCENT = 0x02F4,   \/\/ U+02F4 MODIFIER LETTER MIDDLE GRAVE ACC/;"	e	enum:CharCode
U_MODIFIER_LETTER_MID_TONE_BAR	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_MID_TONE_BAR = 0x02E7,    \/\/ U+02E7 MODIFIER LETTER MID TONE BAR$/;"	e	enum:CharCode
U_MODIFIER_LETTER_MINUS_SIGN	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_MINUS_SIGN = 0x02D7,     \/\/ U+02D7 MODIFIER LETTER MINUS SIGN$/;"	e	enum:CharCode
U_MODIFIER_LETTER_OPEN_SHELF	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_OPEN_SHELF = 0x02FE,     \/\/ U+02FE MODIFIER LETTER OPEN SHELF$/;"	e	enum:CharCode
U_MODIFIER_LETTER_PLUS_SIGN	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_PLUS_SIGN = 0x02D6,     \/\/ U+02D6 MODIFIER LETTER PLUS SIGN$/;"	e	enum:CharCode
U_MODIFIER_LETTER_RAISED_COLON	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_RAISED_COLON = 0x02F8,    \/\/ U+02F8 MODIFIER LETTER RAISED COLON$/;"	e	enum:CharCode
U_MODIFIER_LETTER_RHOTIC_HOOK	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_RHOTIC_HOOK = 0x02DE,     \/\/ U+02DE MODIFIER LETTER RHOTIC HOOK$/;"	e	enum:CharCode
U_MODIFIER_LETTER_RIGHT_ARROWHEAD	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_RIGHT_ARROWHEAD = 0x02C3,    \/\/ U+02C3 MODIFIER LETTER RIGHT ARROWHEAD$/;"	e	enum:CharCode
U_MODIFIER_LETTER_SHELF	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_SHELF = 0x02FD,      \/\/ U+02FD MODIFIER LETTER SHELF$/;"	e	enum:CharCode
U_MODIFIER_LETTER_UNASPIRATED	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_UNASPIRATED = 0x02ED,     \/\/ U+02ED MODIFIER LETTER UNASPIRATED$/;"	e	enum:CharCode
U_MODIFIER_LETTER_UP_ARROWHEAD	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_UP_ARROWHEAD = 0x02C4,    \/\/ U+02C4 MODIFIER LETTER UP ARROWHEAD$/;"	e	enum:CharCode
U_MODIFIER_LETTER_UP_TACK	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_UP_TACK = 0x02D4,      \/\/ U+02D4 MODIFIER LETTER UP TACK$/;"	e	enum:CharCode
U_MODIFIER_LETTER_YANG_DEPARTING_TONE_MARK	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_YANG_DEPARTING_TONE_MARK = 0x02EB, \/\/ U+02EB MODIFIER LETTER YANG DEPARTIN/;"	e	enum:CharCode
U_MODIFIER_LETTER_YIN_DEPARTING_TONE_MARK	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_MODIFIER_LETTER_YIN_DEPARTING_TONE_MARK = 0x02EA,  \/\/ U+02EA MODIFIER LETTER YIN DEPARTING/;"	e	enum:CharCode
U_OGONEK	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_OGONEK = 0x02DB,          \/\/ U+02DB OGONEK$/;"	e	enum:CharCode
U_OVERLINE	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_OVERLINE = 0x203E, \/\/ Unicode Character 'OVERLINE'$/;"	e	enum:CharCode
U_RING_ABOVE	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_RING_ABOVE = 0x02DA,         \/\/ U+02DA RING ABOVE$/;"	e	enum:CharCode
U_SMALL_TILDE	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  U_SMALL_TILDE = 0x02DC,         \/\/ U+02DC SMALL TILDE$/;"	e	enum:CharCode
Underline	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Underline = 95,$/;"	e	enum:CharCode
Unlock	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
Upload the log file	.config/nvim/bundle/defx.nvim/.github/ISSUE_TEMPLATE.md	/^## Upload the log file$/;"	s
Usage	.config/nvim/bundle/defx-icons/README.md	/^## Usage$/;"	s
Usage	.config/nvim/bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
Usage	.config/nvim/bundle/vista.vim/README.md	/^## Usage$/;"	s
V	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  V = 86,$/;"	e	enum:CharCode
VariableName	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^  VariableName,$/;"	e	enum:TokenType
View	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^class View(object):$/;"	c
Vim 8	.config/nvim/bundle/vista.vim/README.md	/^#### Vim 8$/;"	t
Vista	.config/nvim/bundle/vista.vim/plugin/vista.vim	/^command! -bang -nargs=* -bar -complete=custom,vista#util#Complete Vista call vista#(<bang>0, <f-/;"	c
Vista.vim	.config/nvim/bundle/vista.vim/README.md	/^# Vista.vim$/;"	c
VistaBlink	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^    augroup VistaBlink$/;"	a
VistaCursor	.config/nvim/bundle/vista.vim/ftplugin/vista.vim	/^augroup VistaCursor$/;"	a
VistaCursor	.config/nvim/bundle/vista.vim/ftplugin/vista_kind.vim	/^augroup VistaCursor$/;"	a
VistaFloatingWin	.config/nvim/bundle/vista.vim/autoload/vista/floating.vim	/^  augroup VistaFloatingWin$/;"	a
VistaMOF	.config/nvim/bundle/vista.vim/autoload/vista/autocmd.vim	/^  augroup VistaMOF$/;"	a
VistaPopup	.config/nvim/bundle/vista.vim/autoload/vista/popup.vim	/^  augroup VistaPopup$/;"	a
W	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  W = 87,$/;"	e	enum:CharCode
Warn	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^  Warn = 2,$/;"	e	enum:RevealOutputChannelOn
Ways to Join	.config/nvim/bundle/coc.nvim/CONTRIBUTING.md	/^### Ways to Join$/;"	S
Web	.config/nvim/bundle/coc.nvim/src/util/platform.ts	/^  Web,$/;"	e	enum:Platform
What?	.config/nvim/bundle/vim-gutentags/README.md	/^## What?$/;"	s
Why yet another clone of powerline?	.config/nvim/bundle/lightline.vim/README.md	/^## Why yet another clone of powerline?$/;"	s
Why?	.config/nvim/bundle/coc.nvim/Readme.md	/^## Why?$/;"	s
Why?	.config/nvim/bundle/vim-gutentags/README.md	/^## Why?$/;"	s
Windows	.config/nvim/bundle/coc.nvim/src/util/platform.ts	/^  Windows = 1,$/;"	e	enum:OperatingSystem
Windows	.config/nvim/bundle/coc.nvim/src/util/platform.ts	/^  Windows$/;"	e	enum:Platform
WorkspaceSymbolManager	.config/nvim/bundle/coc.nvim/src/provider/workspaceSymbolsManager.ts	/^export default class WorkspaceSymbolManager extends Manager<WorkspaceSymbolProvider> implements /;"	c
Writing	.config/nvim/bundle/vim-gutentags/CONTRIBUTING.md	/^## Writing$/;"	s
X	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  X = 88,$/;"	e	enum:CharCode
X	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> X :<C-U>execute <SID>StageDelete(line('.'),v:count)<CR>$/;"	m
X	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    xnoremap <buffer> <silent> X :<C-U>execute <SID>StageDelete(line("'<"),line("'>")-line("'<")/;"	m
Y	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Y = 89,$/;"	e	enum:CharCode
Z	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/([A-Z][a-z]\/format\/}', '${foo\/([A-Z][a-z]\/format\/}', Text)$/;"	C	function:assertText
Z	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  Z = 90,$/;"	e	enum:CharCode
[NeoBundle](https://github.com/Shougo/neobundle.vim)	.config/nvim/bundle/lightline.vim/README.md	/^### [NeoBundle](https:\/\/github.com\/Shougo\/neobundle.vim)$/;"	S
[Pathogen](https://github.com/tpope/vim-pathogen)	.config/nvim/bundle/lightline.vim/README.md	/^### [Pathogen](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	S
[Vundle](https://github.com/VundleVim/Vundle.vim)	.config/nvim/bundle/lightline.vim/README.md	/^### [Vundle](https:\/\/github.com\/VundleVim\/Vundle.vim)$/;"	S
[lightline.vim](https://github.com/itchyny/lightline.vim)	.config/nvim/bundle/vista.vim/README.md	/^#### [lightline.vim](https:\/\/github.com\/itchyny\/lightline.vim)$/;"	t
[vim-plug](https://github.com/junegunn/vim-plug)	.config/nvim/bundle/lightline.vim/README.md	/^### [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S
^.+\\\\.tsx?$	.config/nvim/bundle/coc.nvim/package.json	/^      "^.+\\\\.tsx?$": "ts-jest"$/;"	s	object:jest.transform
^[_a-zA-Z]+$	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "^[_a-zA-Z]+$": {$/;"	o	object:properties.languageserver.patternProperties
__TEST__	.config/nvim/bundle/coc.nvim/package.json	/^      "__TEST__": true$/;"	b	object:jest.globals
__dirname	.config/nvim/bundle/coc.nvim/webpack.config.js	/^    __dirname: false$/;"	p	class:module.exports.node
__filename	.config/nvim/bundle/coc.nvim/webpack.config.js	/^    __filename: false,$/;"	p	class:module.exports.node
__init__	.config/nvim/bundle/defx-icons/rplugin/python3/defx/column/icons.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Column
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^        def __init__(self, vim: vim.Nvim) -> None:$/;"	m	class:DefxHandlers
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/column.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Base
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Base
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/source.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Base
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/clipboard.py	/^    def __init__(self,$/;"	m	class:Clipboard
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/filename.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Column
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/icon.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Column
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/indent.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Column
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/mark.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Column
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/size.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Column
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/time.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Column
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/type.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Column
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/defx.py	/^    def __init__(self, vim: Nvim, context: Context,$/;"	m	class:Defx
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Kind
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/rplugin.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Rplugin
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/source/file.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Source
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def __init__(self, vim: Nvim, index: int) -> None:$/;"	m	class:View
__init__	.config/nvim/bundle/defx.nvim/rplugin/python3/denite/source/defx/history.py	/^    def __init__(self, vim: Nvim):$/;"	m	class:Source
__webpack_require__	.config/nvim/bundle/coc.nvim/build/index.js	/^\/******\/ 	function __webpack_require__(moduleId) {$/;"	f
__webpack_require__	.config/nvim/bundle/coc.nvim/src/util/processes.ts	/^declare var __webpack_require__: any$/;"	v
__webpack_require__	.config/nvim/bundle/coc.nvim/src/workspace.ts	/^declare var __webpack_require__: any$/;"	v
_action_table	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^_action_table: typing.Dict[str, ActionTable] = {}$/;"	v
_action_table	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^_action_table: typing.Dict[str, ActionTable] = {}$/;"	v
_call	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _call(view: View, defx: Defx, context: Context) -> None:$/;"	f
_cd	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _cd(view: View, defx: Defx, context: Context) -> None:$/;"	f
_change_vim_cwd	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _change_vim_cwd(view: View, defx: Defx, context: Context) -> None:$/;"	f
_check_redraw	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _check_redraw(view: View, defx: Defx, context: Context) -> None:$/;"	f
_clear_select_all	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _clear_select_all(view: View, defx: Defx, context: Context) -> None:$/;"	f
_close_tree	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _close_tree(view: View, defx: Defx, context: Context) -> None:$/;"	f
_consolidateConfiguration	.config/nvim/bundle/coc.nvim/src/configuration/configuration.ts	/^  private _consolidateConfiguration: ConfigurationModel$/;"	p	class:Configuration
_contents	.config/nvim/bundle/coc.nvim/src/configuration/model.ts	/^  constructor(private _contents: any = {}) { }$/;"	p	class:ConfigurationModel
_copy	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _copy(view: View, defx: Defx, context: Context) -> None:$/;"	f
_defx_async_action	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^    def _defx_async_action(args: typing.List[typing.Any]) -> None:$/;"	f
_defx_do_action	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^    def _defx_do_action(args: typing.List[typing.Any]) -> None:$/;"	f
_defx_get_candidate	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^    def _defx_get_candidate(args: typing.List[$/;"	f
_defx_init	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^    def _defx_init() -> None:$/;"	f
_defx_start	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^    def _defx_start(args: typing.List[typing.Any]) -> None:$/;"	f
_drop	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _drop(view: View, defx: Defx, context: Context) -> None:$/;"	f
_execute_command	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _execute_command(view: View, defx: Defx, context: Context) -> None:$/;"	f
_execute_commands	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _execute_commands(self, commands: typing.List[str]) -> None:$/;"	m	class:View
_execute_system	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _execute_system(view: View, defx: Defx, context: Context) -> None:$/;"	f
_extension	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/sort.py	/^def _extension($/;"	f
_filename	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/sort.py	/^def _filename($/;"	f
_gather_candidates	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/defx.py	/^    def _gather_candidates($/;"	m	class:Defx
_get_columns_text	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _get_columns_text(self, context: Context,$/;"	m	class:View
_get_size	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/size.py	/^    def _get_size(self, size: float) -> typing.Tuple[str, str]:$/;"	m	class:Column
_get_wininfo	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _get_wininfo(self) -> typing.List[str]:$/;"	m	class:View
_init_all_columns	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _init_all_columns(self) -> None:$/;"	m	class:View
_init_candidates	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _init_candidates(self) -> None:$/;"	m	class:View
_init_column_length	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _init_column_length(self) -> None:$/;"	m	class:View
_init_column_syntax	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _init_column_syntax(self) -> None:$/;"	m	class:View
_init_columns	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _init_columns(self, columns: typing.List[str]) -> None:$/;"	m	class:View
_init_context	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _init_context($/;"	m	class:View
_init_cursor	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _init_cursor(self, defx: Defx) -> None:$/;"	m	class:View
_init_defx	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _init_defx(self,$/;"	m	class:View
_init_source	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/defx.py	/^    def _init_source(self) -> None:$/;"	m	class:Defx
_isWindows	.config/nvim/bundle/coc.nvim/src/util/platform.ts	/^let _isWindows = false$/;"	v
_load_custom_columns	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _load_custom_columns(self) -> typing.List[Path]:$/;"	m	class:View
_move	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _move(view: View, defx: Defx, context: Context) -> None:$/;"	f
_multi	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _multi(view: View, defx: Defx, context: Context) -> None:$/;"	f
_new_directory	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _new_directory(view: View, defx: Defx, context: Context) -> None:$/;"	f
_new_file	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _new_file(view: View, defx: Defx, context: Context) -> None:$/;"	f
_new_multiple_files	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _new_multiple_files(view: View, defx: Defx, context: Context) -> None:$/;"	f
_nop	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _nop(view: View, defx: Defx, context: Context) -> None:$/;"	f
_open	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _open(view: View, defx: Defx, context: Context) -> None:$/;"	f
_open_directory	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _open_directory(view: View, defx: Defx, context: Context) -> None:$/;"	f
_open_or_close_tree	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _open_or_close_tree(view: View, defx: Defx, context: Context) -> None:$/;"	f
_open_tree	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _open_tree(view: View, defx: Defx, context: Context) -> None:$/;"	f
_open_tree_recursive	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _open_tree_recursive(view: View, defx: Defx, context: Context) -> None:$/;"	f
_paste	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _paste(view: View, defx: Defx, context: Context) -> None:$/;"	f
_print	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _print(view: View, defx: Defx, context: Context) -> None:$/;"	f
_quit	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _quit(view: View, defx: Defx, context: Context) -> None:$/;"	f
_redraw	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _redraw(view: View, defx: Defx, context: Context) -> None:$/;"	f
_redraw_other_defxs	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/rplugin.py	/^    def _redraw_other_defxs(self, view: View) -> None:$/;"	m	class:Rplugin
_remove	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _remove(view: View, defx: Defx, context: Context) -> None:$/;"	f
_remove_trash	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _remove_trash(view: View, defx: Defx, context: Context) -> None:$/;"	f
_rename	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def _rename(view: View, defx: Defx, context: Context) -> None:$/;"	f
_repeat	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _repeat(view: View, defx: Defx, context: Context) -> None:$/;"	f
_resize_window	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _resize_window(self) -> None:$/;"	m	class:View
_search	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _search(view: View, defx: Defx, context: Context) -> None:$/;"	f
_size	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/sort.py	/^def _size($/;"	f
_sort_method	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/sort.py	/^def _sort_method($/;"	f
_strwidth	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/filename.py	/^    def _strwidth(self, word: str) -> int:$/;"	m	class:Column
_switch_buffer	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _switch_buffer(self) -> bool:$/;"	m	class:View
_time	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/sort.py	/^def _time($/;"	f
_toggle_columns	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _toggle_columns(view: View, defx: Defx, context: Context) -> None:$/;"	f
_toggle_ignored_files	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _toggle_ignored_files(view: View, defx: Defx, context: Context) -> None:$/;"	f
_toggle_select	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _toggle_select(view: View, defx: Defx, context: Context) -> None:$/;"	f
_toggle_select_all	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _toggle_select_all(view: View, defx: Defx, context: Context) -> None:$/;"	f
_toggle_select_visual	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _toggle_select_visual(view: View, defx: Defx, context: Context) -> None:$/;"	f
_toggle_sort	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _toggle_sort(view: View, defx: Defx, context: Context) -> None:$/;"	f
_track	.config/nvim/bundle/oceanic-next/test/test.js	/^    this._track = {$/;"	c	class:SoundCloudAudio.preload
_truncate	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/filename.py	/^    def _truncate(self, word: str) -> str:$/;"	m	class:Column
_update_defx	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _update_defx(self, paths: typing.List[str]) -> None:$/;"	m	class:View
_update_paths	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def _update_paths(self, index: int, path: str) -> None:$/;"	m	class:View
_yank_path	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def _yank_path(view: View, defx: Defx, context: Context) -> None:$/;"	f
_z	z.sh	/^_z() {$/;"	f
_z_dirs	z.sh	/^    _z_dirs () {$/;"	f
_z_precmd	z.sh	/^            _z_precmd() {$/;"	f
_z_zsh_tab_completion	z.sh	/^    _z_zsh_tab_completion() {$/;"	f
a	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/([A-Z][a-z]\/format\/}', '${foo\/([A-Z][a-z]\/format\/}', Text)$/;"	C	function:assertText
a	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  a = 97,$/;"	e	enum:CharCode
a	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> a :<C-U>let b:fugitive_display_format += v:count1<Bar>exe fug/;"	m
a	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> a :<C-U>execute <SID>Do('Toggle',0)<CR>$/;"	m
a	awesome-theme/icons/baseline-update-24px.svg	/^<svg xmlns="http:\/\/www.w3.org\/2000\/svg" xmlns:xlink="http:\/\/www.w3.org\/1999\/xlink" width/;"	i
about: Create a report to help us improve	.config/nvim/bundle/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^about: Create a report to help us improve$/;"	s
about: Create a report to help us improve	.config/nvim/bundle/vista.vim/.github/ISSUE_TEMPLATE/bug_report.md	/^about: Create a report to help us improve$/;"	s
about: Suggest an idea for this project	.config/nvim/bundle/vista.vim/.github/ISSUE_TEMPLATE/feature_request.md	/^about: Suggest an idea for this project$/;"	s
action	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^def action(name: str, attr: ActionAttr = ActionAttr.NONE$/;"	f
action	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def action(name: str, attr: ActionAttr = ActionAttr.NONE$/;"	f
action	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^        import defx.action as action$/;"	I	member:View.do_action	file:
addPosition	.config/nvim/bundle/coc.nvim/src/__tests__/modules/position.test.ts	/^function addPosition(position: Position, line: number, character: number): Position {$/;"	f
additionalProperties	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "additionalProperties": false$/;"	b	object:properties.suggest.completionItemKindLabels
additionalProperties	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerCommand
additionalProperties	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerModule
additionalProperties	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerSocket
additionalProperties	.config/nvim/bundle/coc.nvim/data/schema.json	/^  "additionalProperties": false,$/;"	b
additionalSchemes	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "additionalSchemes": {$/;"	o	object:definitions.languageServerBase.properties
additionalSchemes	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerCommand.properties
additionalSchemes	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerModule.properties
additionalSchemes	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerSocket.properties
allOf	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	a	object:definitions.languageServerCommand
allOf	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	a	object:definitions.languageServerModule
allOf	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "allOf": [{"$ref": "#\/definitions\/languageServerBase"}],$/;"	a	object:definitions.languageServerSocket
allowUnreachableCode	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "allowUnreachableCode": false,$/;"	b	object:compilerOptions
ansicolors	arch/ansi-colours.lua	/^local function ansicolors( str )$/;"	f
applyEdits	.config/nvim/bundle/coc.nvim/src/__tests__/modules/diff.test.ts	/^  function applyEdits(oldStr: string, newStr: string): void {$/;"	f
args	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "args": {$/;"	o	object:definitions.languageServerCommand.properties
args	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "args": {$/;"	o	object:definitions.languageServerModule.properties
args	.config/nvim/bundle/coc.nvim/src/util/throttle.ts	/^  let args$/;"	v
args	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    args: typing.List[str] = []$/;"	v	class:Context
args	.config/nvim/coc-settings.json	/^      "args": ["--stdio"]$/;"	a	object:languageserver.dockerfile
args	.config/nvim/coc-settings.json	/^      "args": ["lsp"],$/;"	a	object:languageserver.flow
args	.config/nvim/coc-settings.json	/^      "args": ["start"],$/;"	a	object:languageserver.bash
asLanguageIds	.config/nvim/bundle/coc.nvim/src/language-client/utils/converter.ts	/^export function asLanguageIds(documentSelector: DocumentSelector): string[] {$/;"	f
ascii_bold	.config/neofetch/config.conf	/^ascii_bold="on"$/;"	k
ascii_colors	.config/neofetch/config.conf	/^ascii_colors=(0 1 2 3 4 5 6 7 8 9)$/;"	k
assert	.config/nvim/bundle/coc.nvim/src/__tests__/client/server/testInitializeResult.js	/^const assert = tslib_1.__importStar(require("assert"));$/;"	C
assertMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertMarker('${1\/regex\\\/format\/options}', Text)$/;"	C	function:assertText
assertMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertMarker('${TM_DIRECTORY\/src\\\\\/\/$1\/}', Variable)$/;"	C	function:assertText
assertMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertMarker('${TM_SELECTED_TEXT\/a\/\\\\\/$1\/g}', Variable)$/;"	C	function:assertText
assertMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertMarker('${TM_SELECTED_TEXT\/a\/end\\\\\/\/g}', Variable)$/;"	C	function:assertText
assertMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertMarker('${TM_SELECTED_TEXT\/a\/in\\\\\/$1ner\/g}', Variable)$/;"	C	function:assertText
assertMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertMarker('${foo\/regex\\\/format\/options}', Text)$/;"	C	function:assertText
assertText	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  function assertText(value: string, expected: string) {$/;"	f
assertTextAndMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${1\/([A-Z][a-z])\/format\/}', '', Placeholder)$/;"	C	function:assertText
assertTextAndMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${1\/\/\/', '${1\/\/\/', Text)$/;"	C	function:assertText
assertTextAndMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${1\/\/\/}', '', Placeholder)$/;"	C	function:assertText
assertTextAndMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${1\/m\\\\\/atch\/$1\/i}', '', Placeholder)$/;"	C	function:assertText
assertTextAndMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${1\/regex\/format\/gmi}', '', Placeholder)$/;"	C	function:assertText
assertTextAndMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/([A-Z][a-z])\/format\/GMI}', '${foo\/([A-Z][a-z])\/format\/GMI}'/;"	C	function:assertText
assertTextAndMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/([A-Z][a-z])\/format\/funky}', '${foo\/([A-Z][a-z])\/format\/fun/;"	C	function:assertText
assertTextAndMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/([A-Z][a-z])\/format\/}', '', Variable)$/;"	C	function:assertText
assertTextAndMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/([A-Z][a-z]\/format\/}', '${foo\/([A-Z][a-z]\/format\/}', Text)$/;"	C	function:assertText
assertTextAndMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/\/\/', '${foo\/\/\/', Text)$/;"	C	function:assertText
assertTextAndMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/\/\/}', '', Variable)$/;"	C	function:assertText
assertTextAndMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/m\\\\\/atch\/$1\/i}', '', Variable)$/;"	C	function:assertText
assertTextAndMarker	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/regex\/format\/gmi}', '', Variable)$/;"	C	function:assertText
async_action	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^        def async_action(self, args: typing.List[typing.Any]) -> None:$/;"	m	class:DefxHandlers
attr	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/action.py	/^    attr: ActionAttr = ActionAttr.NONE$/;"	v	class:ActionTable
author	.config/nvim/bundle/coc.nvim/package.json	/^  "author": "Qiming Zhao <chemzqm@gmail.com>",$/;"	s
auto_cd	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    auto_cd: bool = False$/;"	v	class:Context
auto_recursive_level	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    auto_recursive_level: int = 0$/;"	v	class:Context
b	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  b = 98,$/;"	e	enum:CharCode
b	awesome-theme/icons/baseline-update-24px.svg	/^<svg xmlns="http:\/\/www.w3.org\/2000\/svg" xmlns:xlink="http:\/\/www.w3.org\/1999\/xlink" width/;"	i
b:ale_fix_on_save	.vimrc	/^let b:ale_fix_on_save = 1$/;"	v
b:current_syntax	.config/nvim/bundle/vim-fugitive/syntax/fugitive.vim	/^let b:current_syntax = "fugitive"$/;"	v
b:current_syntax	.config/nvim/bundle/vista.vim/syntax/vista.vim	/^let b:current_syntax = 'vista'$/;"	v
b:current_syntax	.config/nvim/bundle/vista.vim/syntax/vista_kind.vim	/^let b:current_syntax = 'vista_kind'$/;"	v
b:current_syntax	.config/nvim/bundle/vista.vim/syntax/vista_markdown.vim	/^let b:current_syntax = 'vista_markdown'$/;"	v
backend	.config/compton/compton.conf	/^backend = "glx";$/;"	k
background	colors.properties	/^background=#1E282C$/;"	k
background_color	.config/neofetch/config.conf	/^background_color=$/;"	k
bar.foo	.config/nvim/bundle/coc.nvim/src/__tests__/modules/settings.json	/^  "bar.foo": 2,$/;"	n
bar_border	.config/neofetch/config.conf	/^bar_border="on"$/;"	k
bar_char_elapsed	.config/neofetch/config.conf	/^bar_char_elapsed="-"$/;"	k
bar_char_total	.config/neofetch/config.conf	/^bar_char_total="="$/;"	k
bar_color_elapsed	.config/neofetch/config.conf	/^bar_color_elapsed="distro"$/;"	k
bar_color_total	.config/neofetch/config.conf	/^bar_color_total="distro"$/;"	k
bar_length	.config/neofetch/config.conf	/^bar_length=15$/;"	k
bash	.config/nvim/coc-settings.json	/^    "bash": {$/;"	o	object:languageserver
battery_display	.config/neofetch/config.conf	/^battery_display="on"$/;"	k
bin	.config/nvim/bundle/coc.nvim/package.json	/^  "bin": ".\/bin\/server.js",$/;"	s
binary-search	.config/nvim/bundle/coc.nvim/package.json	/^    "binary-search": "1.3.5",$/;"	s	object:dependencies
block_height	.config/neofetch/config.conf	/^block_height=1$/;"	k
block_range	.config/neofetch/config.conf	/^block_range=(0 15)$/;"	k
block_width	.config/neofetch/config.conf	/^block_width=3$/;"	k
bold	.config/neofetch/config.conf	/^bold="on"$/;"	k
brightnessWidget.decBrightness	awesome-theme/widgets/brightness.lua	/^function brightnessWidget.decBrightness()$/;"	f
brightnessWidget.incBrightness	awesome-theme/widgets/brightness.lua	/^function brightnessWidget.incBrightness()$/;"	f
brightnessWidget:checkIcon	awesome-theme/widgets/brightness.lua	/^function brightnessWidget:checkIcon(widget, brightnessRaw)$/;"	f
brightnessWidget:updateIcon	awesome-theme/widgets/brightness.lua	/^function brightnessWidget:updateIcon()$/;"	f
buffer_name	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    buffer_name: str = 'default'$/;"	v	class:Context
bufnum	.config/nvim/bundle/coc.nvim/src/__tests__/helper.ts	/^  bufnum: number$/;"	p	interface:CursorPosition
bugs	.config/nvim/bundle/coc.nvim/package.json	/^  "bugs": {$/;"	o
build	.config/nvim/bundle/coc.nvim/package.json	/^    "build": "tsc -p tsconfig.json",$/;"	s	object:scripts
byteIndex	.config/nvim/bundle/coc.nvim/src/util/string.ts	/^export function byteIndex(content: string, index: number): number {$/;"	f
byteLength	.config/nvim/bundle/coc.nvim/src/util/string.ts	/^export function byteLength(str: string): number {$/;"	f
c	.config/nvim/bundle/coc.nvim/src/__tests__/modules/settings.json	/^    "c": {$/;"	o	object:servers
c	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  c = 99,$/;"	e	enum:CharCode
c	.config/nvim/bundle/coc.nvim/src/util/complete.ts	/^    let c = text[i]$/;"	v
c.shape	.config/awesome/rc.lua	/^    c.shape = function(cr,w,h)$/;"	f
cA	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer>          cA    :<C-U>Gcommit --edit --squash=<C-R>=<SID>SquashArgument()<C/;"	m
ca	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ca    :<C-U>Gcommit --amend<CR>$/;"	m
cache	.config/nvim/coc-settings.json	/^         "cache": {$/;"	o	object:languageserver.ccls.initializationOptions
callback	awesome-theme/tools/health.lua	/^      callback  = function()$/;"	f
callback	awesome-theme/widgets/updates.lua	/^  callback = function() updateWidget:getUpdates() end,$/;"	f
cc	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> cc    :<C-U>Gcommit<CR>$/;"	m
ccls	.config/nvim/coc-settings.json	/^    "ccls": {$/;"	o	object:languageserver
cd	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/defx.py	/^    def cd(self, path: str) -> None:$/;"	m	class:Defx
cd	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/util.py	/^def cd(vim: Nvim, path: str) -> None:$/;"	f
cd	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def cd(self, defx: Defx, path: str, cursor: int) -> None:$/;"	m	class:View
ce	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ce    :<C-U>Gcommit --amend --no-edit<CR>$/;"	m
cf	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer>          cf    :<C-U>Gcommit --fixup=<C-R>=<SID>SquashArgument()<CR>$/;"	m
ch	.config/nvim/bundle/coc.nvim/src/completion/match.ts	/^    const ch = codes[i]$/;"	C	function:nextWordIndex
characterIndex	.config/nvim/bundle/coc.nvim/src/util/string.ts	/^export function characterIndex(content: string, byteIndex: number): number {$/;"	f
chars	.config/nvim/bundle/coc.nvim/src/__tests__/modules/chars.test.ts	/^    let chars = new Chars('48-57')$/;"	v
chars	.config/nvim/bundle/coc.nvim/src/__tests__/modules/chars.test.ts	/^    let chars = new Chars('58')$/;"	v
chars	.config/nvim/bundle/coc.nvim/src/__tests__/modules/chars.test.ts	/^    let chars = new Chars('@')$/;"	v
chars	.config/nvim/bundle/coc.nvim/src/__tests__/modules/chars.test.ts	/^    let chars = new Chars('@-@')$/;"	v
chars	.config/nvim/bundle/coc.nvim/src/__tests__/modules/chars.test.ts	/^    let chars = new Chars('_')$/;"	v
chars	.config/nvim/bundle/coc.nvim/src/__tests__/modules/chars.test.ts	/^    let chars = new Chars('a-z')$/;"	v
chcolor	aliases.sh	/^  alias chcolor="$HOME\/.termux\/colors.sh"$/;"	a
check_overwrite	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^def check_overwrite(view: View, dest: Path, src: Path) -> Path:$/;"	f
chfont	aliases.sh	/^  alias chfont="$HOME\/.termux\/fonts.sh"$/;"	a
class	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "class": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
class	.ctags	/^--regex-js=\/([A-Z][A-Za-z0-9_$]+)[ \\t]*:[ \\t]*[A-Za-z0-9_$]*[ \\t]*[{(]\/\\1\/c,class\/$/;"	k	langdef:js:.tsx
class	.ctags	/^--regex-js=\/([A-Z][A-Za-z0-9_$]+)[ \\t]*=[ \\t]*[A-Za-z0-9_$]*[ \\t]*[{(]\/\\1\/c,class\/$/;"	k	langdef:js:.tsx
class	.ctags	/^--regex-js=\/([A-Za-z$][A-Za-z0-9_$()]+)[ \\t]*=[ \\t]*[Rr]eact.createClass[ \\t]*\\(\/\\1\/c,cl/;"	k	langdef:js:.tsx
class	.ctags	/^--regex-js=\/([A-Za-z0-9._$]+)[ \\t]*=[ \\t]*\\(function\\(\\)\/\\1\/c,class\/$/;"	k	langdef:js:.tsx
class	.ctags	/^--regex-js=\/['"]*([A-Za-z0-9_$]+)['"]*:[ \\t]*\\(function\\(\\)\/\\1\/c,class\/$/;"	k	langdef:js:.tsx
class	.ctags	/^--regex-js=\/class[ \\t]+([A-Za-z0-9._$]+)[ \\t]*\/\\1\/c,class\/$/;"	k	langdef:js:.tsx
classes	.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*class[ \\t]+([a-zA-Z0-9_]+)\/\\2\/c,classes\/$/;"	k	langdef:typescript
clean	.config/nvim/bundle/coc.nvim/package.json	/^    "clean": "rimraf lib build",$/;"	s	object:scripts
clearMocks	.config/nvim/bundle/coc.nvim/package.json	/^    "clearMocks": true,$/;"	b	object:jest
clone	.config/nvim/bundle/coc.nvim/src/configuration/model.ts	/^  public clone(): ConfigurationModel {$/;"	m	class:ConfigurationModel
close_tree	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def close_tree(self, path: Path, index: int) -> None:$/;"	m	class:View
co	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> co    :<C-U>echoerr 'Use CTRL-W C'<CR>$/;"	m
coc	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/coc-json/package.json	/^    "coc": "^0.0.46"$/;"	s	object:engines
coc	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/global/package.json	/^    "coc": "^0.0.46"$/;"	s	object:engines
coc	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/local/package.json	/^    "coc": "^0.0.46"$/;"	s	object:engines
coc	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^    "coc": "^0.0.46"$/;"	s	object:engines
coc#_cancel	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_cancel()$/;"	f
coc#_complete	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_complete() abort$/;"	f
coc#_do_complete	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_do_complete(start, items)$/;"	f
coc#_hide	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_hide() abort$/;"	f
coc#_init	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_init()$/;"	f
coc#_insert_key	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_insert_key(method, key, ...) abort$/;"	f
coc#_map	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_map()$/;"	f
coc#_reload	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_reload()$/;"	f
coc#_select	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_select() abort$/;"	f
coc#_select_confirm	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_select_confirm()$/;"	f
coc#_selected	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_selected()$/;"	f
coc#_unmap	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_unmap()$/;"	f
coc#_unwatch	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_unwatch(key)$/;"	f
coc#_watch	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#_watch(key)$/;"	f
coc#add_command	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#add_command(id, cmd, ...)$/;"	f
coc#add_extension	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#add_extension(...)$/;"	f
coc#api#call	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! coc#api#call(method, args) abort$/;"	f
coc#api#func_names	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! coc#api#func_names() abort$/;"	f
coc#api#notify	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! coc#api#notify(method, args) abort$/;"	f
coc#client#create	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! coc#client#create(name, command)$/;"	f
coc#client#is_running	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! coc#client#is_running(name) abort$/;"	f
coc#client#notify	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! coc#client#notify(name, method, args)$/;"	f
coc#client#on_response	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! coc#client#on_response(name, id, resp, isErr)$/;"	f
coc#client#open_log	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! coc#client#open_log()$/;"	f
coc#client#request	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request(name, method, args)$/;"	f
coc#client#request_async	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request_async(name, method, args, cb)$/;"	f
coc#client#restart	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart(name) abort$/;"	f
coc#client#restart_all	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart_all()$/;"	f
coc#client#stop	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! coc#client#stop(name) abort$/;"	f
coc#config	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#config(section, value)$/;"	f
coc#do_notify	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#do_notify(id, method, result)$/;"	f
coc#expandable	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#expandable() abort$/;"	f
coc#expandableOrJumpable	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#expandableOrJumpable() abort$/;"	f
coc#jumpable	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#jumpable() abort$/;"	f
coc#list#create	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#create(position, height, name)$/;"	f
coc#list#get_chars	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#get_chars()$/;"	f
coc#list#get_colors	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#get_colors()$/;"	f
coc#list#getc	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#getc() abort$/;"	f
coc#list#getchar	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#getchar() abort$/;"	f
coc#list#has_preview	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#has_preview()$/;"	f
coc#list#options	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#options(...)$/;"	f
coc#list#prompt_start	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#prompt_start() abort$/;"	f
coc#list#restore	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#restore(winid, height)$/;"	f
coc#list#setlines	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setlines(lines, append)$/;"	f
coc#list#setup	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setup(source)$/;"	f
coc#list#start_prompt	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#start_prompt()$/;"	f
coc#list#status	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#status(name)$/;"	f
coc#list#stop_prompt	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^function! coc#list#stop_prompt()$/;"	f
coc#on_enter	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#on_enter()$/;"	f
coc#on_notify	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#on_notify(id, method, Cb)$/;"	f
coc#refresh	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#refresh() abort$/;"	f
coc#rpc#async_request	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_request(id, method, args)$/;"	f
coc#rpc#async_response	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_response(id, resp, isErr) abort$/;"	f
coc#rpc#get_errors	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#get_errors()$/;"	f
coc#rpc#kill	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#kill()$/;"	f
coc#rpc#notify	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#notify(method, args) abort$/;"	f
coc#rpc#ready	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#ready()$/;"	f
coc#rpc#request	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request(method, args) abort$/;"	f
coc#rpc#request_async	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request_async(method, args, cb) abort$/;"	f
coc#rpc#restart	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#restart()$/;"	f
coc#rpc#start_server	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#start_server()$/;"	f
coc#rpc#stop	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#stop()$/;"	f
coc#snippet#_select_mappings	.config/nvim/bundle/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#_select_mappings()$/;"	f
coc#snippet#disable	.config/nvim/bundle/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#disable()$/;"	f
coc#snippet#enable	.config/nvim/bundle/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#enable()$/;"	f
coc#snippet#show_choices	.config/nvim/bundle/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#show_choices(lnum, col, len, values) abort$/;"	f
coc#start	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#start(...)$/;"	f
coc#status	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! coc#status()$/;"	f
coc#task#running	.config/nvim/bundle/coc.nvim/autoload/coc/task.vim	/^function! coc#task#running(id)$/;"	f
coc#task#start	.config/nvim/bundle/coc.nvim/autoload/coc/task.vim	/^function! coc#task#start(id, opts)$/;"	f
coc#task#stop	.config/nvim/bundle/coc.nvim/autoload/coc/task.vim	/^function! coc#task#stop(id)$/;"	f
coc#util#add_matchids	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#add_matchids(ids)$/;"	f
coc#util#build	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#build()$/;"	f
coc#util#clear_signs	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#clear_signs()$/;"	f
coc#util#clearmatches	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#clearmatches(ids)$/;"	f
coc#util#close_popup	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#close_popup()$/;"	f
coc#util#close_win	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#close_win(id)$/;"	f
coc#util#cursor	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#cursor()$/;"	f
coc#util#diff_content	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#diff_content(lines) abort$/;"	f
coc#util#do_complete	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#do_complete(name, opt, cb) abort$/;"	f
coc#util#echo_hover	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_hover(msg)$/;"	f
coc#util#echo_line	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_line()$/;"	f
coc#util#echo_lines	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_lines(lines)$/;"	f
coc#util#echo_messages	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_messages(hl, msgs)$/;"	f
coc#util#echo_signatures	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_signatures(signatures) abort$/;"	f
coc#util#execute	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#execute(cmd)$/;"	f
coc#util#extension_root	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#extension_root() abort$/;"	f
coc#util#float_hide	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#float_hide()$/;"	f
coc#util#float_jump	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#float_jump()$/;"	f
coc#util#float_scroll	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#float_scroll(forward)$/;"	f
coc#util#float_scrollable	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#float_scrollable()$/;"	f
coc#util#get_bufoptions	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_bufoptions(bufnr) abort$/;"	f
coc#util#get_changeinfo	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_changeinfo()$/;"	f
coc#util#get_complete_option	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_complete_option()$/;"	f
coc#util#get_config_home	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_config_home()$/;"	f
coc#util#get_content	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_content(bufnr)$/;"	f
coc#util#get_float	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_float()$/;"	f
coc#util#get_input	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_input()$/;"	f
coc#util#get_syntax_name	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_syntax_name(lnum, col)$/;"	f
coc#util#has_float	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#has_float()$/;"	f
coc#util#has_preview	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#has_preview()$/;"	f
coc#util#highlight_options	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#highlight_options()$/;"	f
coc#util#init_extension_root	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#init_extension_root(root) abort$/;"	f
coc#util#init_virtual_hl	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#init_virtual_hl()$/;"	f
coc#util#install	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install(...) abort$/;"	f
coc#util#install_extension	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install_extension(args) abort$/;"	f
coc#util#is_preview	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#is_preview(bufnr)$/;"	f
coc#util#iterm_open	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#iterm_open(dir)$/;"	f
coc#util#job_command	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#job_command()$/;"	f
coc#util#jump	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#jump(cmd, filepath, ...) abort$/;"	f
coc#util#move_cursor	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#move_cursor(delta)$/;"	f
coc#util#on_error	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#on_error(msg) abort$/;"	f
coc#util#open_file	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_file(cmd, file)$/;"	f
coc#util#open_terminal	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_terminal(opts) abort$/;"	f
coc#util#open_url	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_url(url)$/;"	f
coc#util#pclose	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#pclose()$/;"	f
coc#util#pick_color	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#pick_color(default_color)$/;"	f
coc#util#platform	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#platform()$/;"	f
coc#util#preview_info	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#preview_info(info, ...) abort$/;"	f
coc#util#prompt_confirm	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#prompt_confirm(title)$/;"	f
coc#util#rebuild	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#rebuild()$/;"	f
coc#util#remote_fns	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#remote_fns(name)$/;"	f
coc#util#root_patterns	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#root_patterns()$/;"	f
coc#util#run_terminal	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#run_terminal(opts, cb)$/;"	f
coc#util#setline	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#setline(lnum, line)$/;"	f
coc#util#timer	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#timer(method, args)$/;"	f
coc#util#unplace_signs	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#unplace_signs(bufnr, sign_ids)$/;"	f
coc#util#update	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#update()$/;"	f
coc#util#update_extensions	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#update_extensions(...) abort$/;"	f
coc#util#valid_state	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#valid_state()$/;"	f
coc#util#version	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#version()$/;"	f
coc#util#vim_info	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#vim_info()$/;"	f
coc#util#win_position	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#win_position()$/;"	f
coc#util#with_callback	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#with_callback(method, args, cb)$/;"	f
coc#util#yarn_cmd	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! coc#util#yarn_cmd()$/;"	f
coc-json	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/package.json	/^    "coc-json": "^1.0.0",$/;"	s	object:dependencies
coc-tsserver	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/package.json	/^    "coc-tsserver": "https:\/\/github.com\/neoclide\/coc-tsserver"$/;"	s	object:dependencies
coc.preferences.bracketEnterImprove	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.bracketEnterImprove": {$/;"	o	object:properties
coc.preferences.colorSupport	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.colorSupport": {$/;"	o	object:properties
coc.preferences.currentFunctionSymbolAutoUpdate	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.currentFunctionSymbolAutoUpdate": {$/;"	o	object:properties
coc.preferences.enableFloatHighlight	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.enableFloatHighlight": {$/;"	o	object:properties
coc.preferences.extensionUpdateCheck	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.extensionUpdateCheck": {$/;"	o	object:properties
coc.preferences.formatOnSaveFiletypes	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.formatOnSaveFiletypes": {$/;"	o	object:properties
coc.preferences.formatOnSaveFiletypes	.config/nvim/coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["go"],$/;"	a
coc.preferences.formatOnType	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.formatOnType": {$/;"	o	object:properties
coc.preferences.formatOnType	.config/nvim/coc-settings.json	/^  "coc.preferences.formatOnType": true,$/;"	b
coc.preferences.hoverTarget	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.hoverTarget": {$/;"	o	object:properties
coc.preferences.jumpCommand	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.jumpCommand": {$/;"	o	object:properties
coc.preferences.messageLevel	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.messageLevel": {$/;"	o	object:properties
coc.preferences.previewAutoClose	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.previewAutoClose": {$/;"	o	object:properties
coc.preferences.rootPath	.config/nvim/bundle/coc.nvim/src/__tests__/sample/.vim/coc-settings.json	/^  "coc.preferences.rootPath": ".\/src"$/;"	s
coc.preferences.rootPatterns	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.rootPatterns": {$/;"	o	object:properties
coc.preferences.snippetStatusText	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.snippetStatusText": {$/;"	o	object:properties
coc.preferences.snippets.enable	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.snippets.enable": {$/;"	o	object:properties
coc.preferences.useQuickfixForLocations	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.useQuickfixForLocations": {$/;"	o	object:properties
coc.preferences.watchmanPath	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.preferences.watchmanPath": {$/;"	o	object:properties
coc.source.around.disableSyntaxes	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.around.disableSyntaxes": {$/;"	o	object:properties
coc.source.around.enable	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.around.enable": {$/;"	o	object:properties
coc.source.around.priority	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.around.priority": {$/;"	o	object:properties
coc.source.around.shortcut	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.around.shortcut": {$/;"	o	object:properties
coc.source.buffer.disableSyntaxes	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.buffer.disableSyntaxes": {$/;"	o	object:properties
coc.source.buffer.enable	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.buffer.enable": {$/;"	o	object:properties
coc.source.buffer.ignoreGitignore	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.buffer.ignoreGitignore": {$/;"	o	object:properties
coc.source.buffer.priority	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.buffer.priority": {$/;"	o	object:properties
coc.source.buffer.shortcut	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.buffer.shortcut": {$/;"	o	object:properties
coc.source.file.disableSyntaxes	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.file.disableSyntaxes": {$/;"	o	object:properties
coc.source.file.enable	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.file.enable": {$/;"	o	object:properties
coc.source.file.ignoreHidden	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.file.ignoreHidden": {$/;"	o	object:properties
coc.source.file.ignorePatterns	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.file.ignorePatterns": {$/;"	o	object:properties
coc.source.file.priority	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.file.priority": {$/;"	o	object:properties
coc.source.file.shortcut	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.file.shortcut": {$/;"	o	object:properties
coc.source.file.triggerCharacters	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.file.triggerCharacters": {$/;"	o	object:properties
coc.source.file.trimSameExts	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "coc.source.file.trimSameExts": {$/;"	o	object:properties
coc_nvim	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^  augroup coc_nvim$/;"	a
codeA	.config/nvim/bundle/coc.nvim/src/util/string.ts	/^    const codeA = a.charCodeAt(i)$/;"	C	function:characterIndex
codeLens.enable	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "codeLens.enable": {$/;"	o	object:properties
codeLens.enable	.config/nvim/coc-settings.json	/^  "codeLens.enable": true,$/;"	b
codeLens.separator	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "codeLens.separator": {$/;"	o	object:properties
collection	.config/nvim/bundle/coc.nvim/src/__tests__/modules/diagnosticCollection.test.ts	/^    let collection = new DiagnosticCollection('test')$/;"	v
color	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "color": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
color0	colors.properties	/^color0=#073641$/;"	k
color1	colors.properties	/^color1=#EB606B$/;"	k
color10	colors.properties	/^color10=#C3E88D$/;"	k
color11	colors.properties	/^color11=#F7EB95$/;"	k
color12	colors.properties	/^color12=#7DC6BF$/;"	k
color13	colors.properties	/^color13=#6C71C3$/;"	k
color14	colors.properties	/^color14=#34434D$/;"	k
color15	colors.properties	/^color15=#FFFFFF$/;"	k
color2	colors.properties	/^color2=#C3E88D$/;"	k
color3	colors.properties	/^color3=#F7EB95$/;"	k
color4	colors.properties	/^color4=#80CBC3$/;"	k
color5	colors.properties	/^color5=#FF2490$/;"	k
color6	colors.properties	/^color6=#AEDDFF$/;"	k
color7	colors.properties	/^color7=#FFFFFF$/;"	k
color8	colors.properties	/^color8=#002B36$/;"	k
color9	colors.properties	/^color9=#EB606B$/;"	k
color_blocks	.config/neofetch/config.conf	/^color_blocks="on"$/;"	k
colors	.config/neofetch/config.conf	/^colors=(distro)$/;"	k
colors	.config/nvim/bundle/coc.nvim/package.json	/^    "colors": "^1.3.3",$/;"	s	object:devDependencies
columns	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    columns: str = ''$/;"	v	class:Context
command	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "command": {$/;"	o	object:definitions.languageServerCommand.properties
command	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^        "command": "test.run"$/;"	s	object:contributes.commands.0
command	.config/nvim/coc-settings.json	/^      "command": "bash-language-server",$/;"	s	object:languageserver.bash
command	.config/nvim/coc-settings.json	/^      "command": "ccls",$/;"	s	object:languageserver.ccls
command	.config/nvim/coc-settings.json	/^      "command": "docker-langserver",$/;"	s	object:languageserver.dockerfile
command	.config/nvim/coc-settings.json	/^      "command": "flow",$/;"	s	object:languageserver.flow
command	.config/nvim/coc-settings.json	/^      "command": "lua-lsp",$/;"	s	object:languageserver.lua
command_exists	.config/nvim/bundle/coc.nvim/install.sh	/^command_exists() {$/;"	f
commands	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^    "commands": [$/;"	a	object:contributes
common	z.sh	/^            function common(matches) {$/;"	f
compare	.config/nvim/bundle/coc.nvim/src/__tests__/modules/array.test.ts	/^    function compare(a: string): string {$/;"	f
compilerOptions	.config/nvim/bundle/coc.nvim/tsconfig.json	/^  "compilerOptions": {$/;"	o
config	.config/nvim/bundle/coc.nvim/src/__tests__/modules/configurations.test.ts	/^const config = fs.readFileSync(path.join(__dirname, '.\/settings.json'), 'utf8')$/;"	C
configuration	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^    "configuration": {$/;"	o	object:contributes
confirm	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/util.py	/^def confirm(vim: Nvim, question: str) -> bool:$/;"	f
confirm	arch/arch-install.lua	/^function confirm(message, confirmInput, exitStatus) $/;"	f
connection	.config/nvim/bundle/coc.nvim/src/__tests__/client/server/testFileWatcher.js	/^let connection = languageserver.createConnection()$/;"	v
connection	.config/nvim/bundle/coc.nvim/src/__tests__/client/server/testInitializeResult.js	/^let connection = vscode_languageserver_1.createConnection();$/;"	v
constant	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "constant": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
constant	.ctags	/^--regex-js=\/[ \\t.]([A-Z][A-Z0-9._$]+)[ \\t]*[=:][ \\t]*([0-9"'\\[\\{]|null)\/\\1\/n,constant\/$/;"	k	langdef:js:.tsx
constructor	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "constructor": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
constructor	.config/nvim/bundle/coc.nvim/src/commands.ts	/^  constructor($/;"	C
constructor	.config/nvim/bundle/coc.nvim/src/configuration/model.ts	/^  constructor(private _contents: any = {}) { }$/;"	m	class:ConfigurationModel
constructor	.config/nvim/bundle/coc.nvim/src/model/db.ts	/^  constructor($/;"	m	class:DB
constructor	.config/nvim/bundle/oceanic-next/test/test.js	/^  constructor(clientId) {$/;"	m	class:SoundCloudAudio
contents	.config/nvim/bundle/coc.nvim/src/configuration/model.ts	/^  public get contents(): any {$/;"	m	class:ConfigurationModel
contributes	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^  "contributes": {$/;"	o
corners	.config/compton/compton.conf	/^detect-rounded-corners = true;$/;"	k
count	.config/nvim/bundle/coc.nvim/src/__tests__/client/delayer.test.ts	/^  let count = 0$/;"	v
coverageDirectory	.config/nvim/bundle/coc.nvim/package.json	/^    "coverageDirectory": ".\/coverage\/"$/;"	s	object:jest
cp	.config/nvim/bundle/coc.nvim/webpack.config.js	/^const cp = require('child_process')$/;"	C
cp	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> cp    :<C-U>echoerr 'Use gC'<CR>$/;"	m
cpu_brand	.config/neofetch/config.conf	/^cpu_brand="on"$/;"	k
cpu_cores	.config/neofetch/config.conf	/^cpu_cores="logical"$/;"	k
cpu_display	.config/neofetch/config.conf	/^cpu_display="off"$/;"	k
cpu_speed	.config/neofetch/config.conf	/^cpu_speed="on"$/;"	k
cpu_temp	.config/neofetch/config.conf	/^cpu_temp="off"$/;"	k
createDiagnostic	.config/nvim/bundle/coc.nvim/src/__tests__/modules/diagnosticCollection.test.ts	/^function createDiagnostic(msg: string, range?: Range): Diagnostic {$/;"	f
createDocument	.config/nvim/bundle/coc.nvim/src/__tests__/client/converter.test.ts	/^  function createDocument(): TextDocument {$/;"	f
createLogger	.config/nvim/bundle/coc.nvim/src/extensions.ts	/^const createLogger = require('.\/util\/logger')$/;"	C
createLogger	.config/nvim/bundle/coc.nvim/src/util/factory.ts	/^const createLogger = require('.\/logger')$/;"	C
crop_mode	.config/neofetch/config.conf	/^crop_mode="normal"$/;"	k
crop_offset	.config/neofetch/config.conf	/^crop_offset="center"$/;"	k
cs	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer>          cs    :<C-U>Gcommit --squash=<C-R>=<SID>SquashArgument()<CR>$/;"	m
ctrlp#acceptfile	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#acceptfile(...)$/;"	f
ctrlp#addfile	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#addfile(ch, file)$/;"	f
ctrlp#autoignore#get_patterns	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#get_patterns(root_dir) abort$/;"	f
ctrlp#autoignore#ignore	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#ignore(item, type) abort$/;"	f
ctrlp#autoignore#ignore_close	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#ignore_close() abort$/;"	f
ctrlp#autoignore#ignore_init	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#ignore_init() abort$/;"	f
ctrlp#bookmarkdir#accept	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#accept(mode, str)$/;"	f
ctrlp#bookmarkdir#add	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#add(bang, dir, ...)$/;"	f
ctrlp#bookmarkdir#id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#id()$/;"	f
ctrlp#bookmarkdir#init	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#init()$/;"	f
ctrlp#bookmarkdir#remove	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#remove(entries)$/;"	f
ctrlp#buffers	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#buffers(...)$/;"	f
ctrlp#buffertag#accept	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#accept(mode, str)$/;"	f
ctrlp#buffertag#cmd	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#cmd(mode, ...)$/;"	f
ctrlp#buffertag#exit	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#exit()$/;"	f
ctrlp#buffertag#init	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#init(fname)$/;"	f
ctrlp#buffertag#opts	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#opts()$/;"	f
ctrlp#call	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#call(func, ...)$/;"	f
ctrlp#changes#accept	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#accept(mode, str)$/;"	f
ctrlp#changes#cmd	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#cmd(mode, ...)$/;"	f
ctrlp#changes#exit	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#exit()$/;"	f
ctrlp#changes#init	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#init(original_bufnr, bufnr)$/;"	f
ctrlp#clearmarkedlist	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clearmarkedlist()$/;"	f
ctrlp#clr	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clr(...)$/;"	f
ctrlp#clra	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clra()$/;"	f
ctrlp#complen	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#complen(...)$/;"	f
ctrlp#dir#accept	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#accept(mode, str)$/;"	f
ctrlp#dir#id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#id()$/;"	f
ctrlp#dir#init	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#init(...)$/;"	f
ctrlp#dirnfile	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#dirnfile(entries)$/;"	f
ctrlp#exit	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#exit()$/;"	f
ctrlp#files	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#files()$/;"	f
ctrlp#getcline	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getcline()$/;"	f
ctrlp#getmarkedlist	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getmarkedlist()$/;"	f
ctrlp#getvar	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getvar(var)$/;"	f
ctrlp#hicheck	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#hicheck(grp, defgrp)$/;"	f
ctrlp#igncwd	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#igncwd(cwd)$/;"	f
ctrlp#init	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#init(type, ...)$/;"	f
ctrlp#j2l	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#j2l(nr)$/;"	f
ctrlp#line#accept	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#accept(dict)$/;"	f
ctrlp#line#cmd	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#cmd(mode, ...)$/;"	f
ctrlp#line#init	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#init(bufnr)$/;"	f
ctrlp#mixed#id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#id()$/;"	f
ctrlp#mixed#init	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#init(clim)$/;"	f
ctrlp#modfilecond	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#modfilecond(w)$/;"	f
ctrlp#mrufiles#add	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#add(fn)$/;"	f
ctrlp#mrufiles#bufs	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#bufs()$/;"	f
ctrlp#mrufiles#cachefile	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#cachefile()$/;"	f
ctrlp#mrufiles#init	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#init()$/;"	f
ctrlp#mrufiles#list	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#list(...)$/;"	f
ctrlp#mrufiles#opts	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#opts()$/;"	f
ctrlp#mrufiles#refresh	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#refresh(...)$/;"	f
ctrlp#mrufiles#remove	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#remove(files)$/;"	f
ctrlp#mrufiles#tgrel	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#tgrel()$/;"	f
ctrlp#normcmd	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#normcmd(cmd, ...)$/;"	f
ctrlp#nosy	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#nosy()$/;"	f
ctrlp#progress	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#progress(enum, ...)$/;"	f
ctrlp#prtclear	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#prtclear()$/;"	f
ctrlp#quickfix#accept	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#accept(mode, str)$/;"	f
ctrlp#quickfix#id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#id()$/;"	f
ctrlp#quickfix#init	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#init()$/;"	f
ctrlp#recordhist	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#recordhist()$/;"	f
ctrlp#rmbasedir	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#rmbasedir(items)$/;"	f
ctrlp#rtscript#id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#id()$/;"	f
ctrlp#rtscript#init	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#init(caching)$/;"	f
ctrlp#setdir	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setdir(path, ...)$/;"	f
ctrlp#setlcdir	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlcdir()$/;"	f
ctrlp#setlines	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlines(...)$/;"	f
ctrlp#setpathmode	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setpathmode(pmode, ...)$/;"	f
ctrlp#statusline	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#statusline()$/;"	f
ctrlp#switchtype	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#switchtype(id)$/;"	f
ctrlp#syntax	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#syntax()$/;"	f
ctrlp#tabcount	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#tabcount()$/;"	f
ctrlp#tag#accept	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#accept(mode, str)$/;"	f
ctrlp#tag#enter	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#enter()$/;"	f
ctrlp#tag#id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#id()$/;"	f
ctrlp#tag#init	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#init()$/;"	f
ctrlp#undo#accept	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#accept(mode, str)$/;"	f
ctrlp#undo#enter	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#enter()$/;"	f
ctrlp#undo#exit	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#exit()$/;"	f
ctrlp#undo#id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#id()$/;"	f
ctrlp#undo#init	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#init()$/;"	f
ctrlp#utils#cachedir	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachedir()$/;"	f
ctrlp#utils#cachefile	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachefile(...)$/;"	f
ctrlp#utils#fnesc	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#fnesc(path, type, ...)$/;"	f
ctrlp#utils#glob	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#glob(...)$/;"	f
ctrlp#utils#globpath	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#globpath(...)$/;"	f
ctrlp#utils#lash	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#lash()$/;"	f
ctrlp#utils#mkdir	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#mkdir(dir)$/;"	f
ctrlp#utils#opts	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#opts()$/;"	f
ctrlp#utils#readfile	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#readfile(file)$/;"	f
ctrlp#utils#writecache	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#writecache(lines, ...)$/;"	f
ctrlp.vim	.config/nvim/bundle/ctrlp.vim/readme.md	/^# ctrlp.vim$/;"	c
cursor	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    cursor: int = 0$/;"	v	class:Context
cursor	colors.properties	/^cursor=#657B83$/;"	k
cva	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> cva   :<C-U>Gcommit -v --amend<CR>$/;"	m
cvc	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> cvc   :<C-U>Gcommit -v<CR>$/;"	m
cw	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> cw    :<C-U>Gcommit --amend --only<CR>$/;"	m
cwd	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "cwd": {$/;"	o	object:definitions.languageServerBase.properties
cwd	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "cwd": {},$/;"	o	object:definitions.languageServerCommand.properties
cwd	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "cwd": {},$/;"	o	object:definitions.languageServerModule.properties
cwd	.config/nvim/bundle/coc.nvim/src/__tests__/client/processes.test.ts	/^    let cwd = process.cwd()$/;"	v
cwd_input	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/util.py	/^def cwd_input(vim: Nvim, cwd: str, prompt: str,$/;"	f
d	.config/nvim/bundle/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.d = function(exports, name, getter) {$/;"	f	function:__webpack_require__
d	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  d = 100,$/;"	e	enum:CharCode
dD	.config/nvim/mappings/defx.vim	/^	nnoremap <silent><buffer><expr> dD$/;"	m
db	.config/nvim/bundle/coc.nvim/src/__tests__/modules/db.test.ts	/^let db: DB$/;"	v
dbe	.config/compton/compton.conf	/^dbe = false;$/;"	k
dclf	aliases.sh	/^  alias dclf='docker-compose logs -f'$/;"	a
dd	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> dd :<C-U>execute <SID>StageDiff('Gdiff')<CR>$/;"	m
dd	.config/nvim/mappings/defx.vim	/^	nnoremap <silent><buffer><expr> dd$/;"	m
debounce	.config/nvim/bundle/coc.nvim/package.json	/^    "debounce": "^1.2.0",$/;"	s	object:dependencies
debug	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/column.py	/^    def debug(self, expr: typing.Any) -> None:$/;"	m	class:Base
debug	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/source.py	/^    def debug(self, expr: typing.Any) -> None:$/;"	m	class:Base
debug	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/defx.py	/^    def debug(self, expr: typing.Any) -> None:$/;"	m	class:Defx
debug	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def debug(self, expr: typing.Any) -> None:$/;"	m	class:View
declaration	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "declaration": true,$/;"	b	object:compilerOptions
deepClone	.config/nvim/bundle/coc.nvim/src/util/object.ts	/^export function deepClone<T>(obj: T): T {$/;"	f
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerBase.properties.cwd
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerCommand.properties.command
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerModule.properties.module
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerModule.properties.runtime
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": "127.0.0.1",$/;"	s	object:definitions.languageServerSocket.properties.host
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": "ipc",$/;"	s	object:definitions.languageServerModule.properties.transport
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": "never",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": "off",$/;"	s	object:definitions.languageServerBase.properties.trace.server
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": "utf8",$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.additionalSchemes
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.filetypes
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.ignoredRootPaths
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.rootPatterns
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerCommand.properties.args
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerModule.properties.args
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerModule.properties.execArgv
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableCompletion
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableDiagnostics
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableWorkspaceFolders
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.requireRootPattern
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerCommand.properties.detached
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerCommand.properties.shell
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": null,$/;"	z	object:definitions.languageServerBase.properties.env
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": true$/;"	b	object:definitions.languageServerBase.properties.enable
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": {},$/;"	o	object:definitions.languageServerBase.properties.initializationOptions
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "default": {},$/;"	o	object:definitions.languageServerBase.properties.settings
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "default": {"type": "string"}$/;"	o	object:properties.suggest.completionItemKindLabels.properties
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": " "$/;"	s	object:properties.diagnostic.virtualTextPrefix
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": " \\\\ "$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "",$/;"	s	object:properties.http.proxy
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "*",$/;"	s	object:properties.list.selectedSignText
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "<C-j>",$/;"	s	object:properties.list.nextKeymap
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "<C-k>",$/;"	s	object:properties.list.previousKeymap
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": ">",$/;"	s	object:properties.list.indicator
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.errorSign
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.hintSign
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.infoSign
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "A"$/;"	s	object:properties.coc.source.around.shortcut
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "B"$/;"	s	object:properties.coc.source.buffer.shortcut
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "F"$/;"	s	object:properties.coc.source.file.shortcut
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "SNIP",$/;"	s	object:properties.coc.preferences.snippetStatusText
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "Search",$/;"	s	object:properties.list.previewHighlightGroup
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "always",$/;"	s	object:properties.diagnostic.enableMessage
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "always",$/;"	s	object:properties.suggest.autoTrigger
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "daily",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "edit",$/;"	s	object:properties.coc.preferences.jumpCommand
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "float",$/;"	s	object:properties.diagnostic.messageTarget
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "hint",$/;"	s	object:properties.diagnostic.level
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "menu",$/;"	s	object:properties.suggest.detailField
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "more",$/;"	s	object:properties.coc.preferences.messageLevel
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "~",$/;"	s	object:properties.suggest.snippetIndicator
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "‣"$/;"	s	object:properties.codeLens.separator
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": "⚠"$/;"	s	object:properties.diagnostic.warningSign
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 1$/;"	n	object:properties.coc.source.around.priority
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 1$/;"	n	object:properties.coc.source.buffer.priority
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 1,$/;"	n	object:properties.suggest.minTriggerInputLength
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 10$/;"	n	object:properties.coc.source.file.priority
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 10,$/;"	n	object:properties.list.maxHeight
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 100$/;"	n	object:properties.suggest.detailMaxLength
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 1000$/;"	n	object:properties.diagnostic.highlightOffset
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 1000$/;"	n	object:properties.diagnostic.signOffset
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 12,$/;"	n	object:properties.list.maxPreviewHeight
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 200$/;"	n	object:properties.suggest.labelMaxLength
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 2000,$/;"	n	object:properties.suggest.timeout
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 3$/;"	n	object:properties.diagnostic.virtualTextLines
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 30000,$/;"	n	object:properties.list.limitLines
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 50,$/;"	n	object:properties.signature.triggerSignatureWait
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 50,$/;"	n	object:properties.suggest.maxCompleteItemCount
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 60,$/;"	n	object:properties.suggest.triggerCompletionWait
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 8$/;"	n	object:properties.diagnostic.maxWindowHeight
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 8$/;"	n	object:properties.signature.maxWindowHeight
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 80,$/;"	n	object:properties.suggest.maxPreviewWidth
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 900,$/;"	n	object:properties.list.signOffset
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": 99,$/;"	n	object:properties.suggest.languageSourcePriority
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	a	object:properties.coc.source.file.trimSameExts
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [".vim", ".git", ".hg", ".projections.json"],$/;"	a	object:properties.coc.preferences.rootPatterns
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": ["\/"],$/;"	a	object:properties.coc.source.file.triggerCharacters
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	a	object:properties.workspace.ignoredFiletypes
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.preferences.formatOnSaveFiletypes
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.around.disableSyntaxes
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.buffer.disableSyntaxes
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.file.disableSyntaxes
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.file.ignorePatterns
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.list.source.outline.ctagsFilestypes
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.formatOnType
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.useQuickfixForLocations
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.codeLens.enable
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.checkCurrentLine
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.displayByAle
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.joinMessageLines
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.refreshAfterSave
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.refreshOnInsertMode
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.virtualText
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.signature.hideOnTextChange
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableKind
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableMenu
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableMenuShortcut
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.enablePreview
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.keepCompleteopt
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.numberSelect
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.preferCompleteThanJumpPlaceholder
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.triggerAfterInsertEnter
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.list.previewSplitRight
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.suggest.acceptSuggestionOnCommitCharacter
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.suggest.echodocSupport
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": null$/;"	z	object:properties.coc.preferences.watchmanPath
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.bracketEnterImprove
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.colorSupport
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.enableFloatHighlight
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.previewAutoClose
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.snippets.enable
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.around.enable
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.buffer.enable
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.file.enable
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.enable
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.locationlist
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.http.proxyStrictSSL
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.signature.enable
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.signature.preferShownAbove
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.fixInsertedWord
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.floatEnable
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.localityBonus
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.noselect
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.coc.source.buffer.ignoreGitignore
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.coc.source.file.ignoreHidden
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.enableSign
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.list.autoResize
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.list.extendedSearchMode
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.languageserver
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.list.insertMappings
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.list.normalMappings
default	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.suggest.completionItemKindLabels
default	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^          "default": true,$/;"	b	object:contributes.configuration.properties.test.enable
defaultAction	.config/nvim/bundle/coc.nvim/src/list/source/commands.ts	/^  public defaultAction = 'run'$/;"	p	class:CommandsList
defaultAction	.config/nvim/bundle/coc.nvim/src/list/source/folders.ts	/^  public defaultAction = 'edit'$/;"	p	class:FoldList
defaultAction	.config/nvim/bundle/coc.nvim/src/list/source/links.ts	/^  public defaultAction = 'open'$/;"	p	class:LinksList
defaultAction	.config/nvim/bundle/coc.nvim/src/list/source/output.ts	/^  public defaultAction = 'open'$/;"	p	class:OutputList
defaultAction	.config/nvim/bundle/coc.nvim/src/list/source/services.ts	/^  public defaultAction = 'toggle'$/;"	p	class:ServicesList
defaultAction	.config/nvim/bundle/coc.nvim/src/list/source/sources.ts	/^  public readonly defaultAction = 'toggle'$/;"	p	class:SourcesList
defaultProps	.config/nvim/bundle/oceanic-next/test/style-components.js	/^Button.defaultProps = {$/;"	c	class:Button
definitions	.config/nvim/bundle/coc.nvim/data/schema.json	/^  "definitions": {$/;"	o
defx	.config/nvim/bundle/defx.nvim/autoload/defx/exrename.vim	/^  augroup defx-exrename$/;"	a
defx	.config/nvim/bundle/defx.nvim/autoload/defx/init.vim	/^  augroup defx$/;"	a
defx#async_action	.config/nvim/bundle/defx.nvim/autoload/defx.vim	/^function! defx#async_action(action, ...) abort$/;"	f
defx#call_action	.config/nvim/bundle/defx.nvim/autoload/defx.vim	/^function! defx#call_action(action, ...) abort$/;"	f
defx#call_async_action	.config/nvim/bundle/defx.nvim/autoload/defx.vim	/^function! defx#call_async_action(action, ...) abort$/;"	f
defx#custom#_get	.config/nvim/bundle/defx.nvim/autoload/defx/custom.vim	/^function! defx#custom#_get() abort$/;"	f
defx#custom#_init	.config/nvim/bundle/defx.nvim/autoload/defx/custom.vim	/^function! defx#custom#_init() abort$/;"	f
defx#custom#column	.config/nvim/bundle/defx.nvim/autoload/defx/custom.vim	/^function! defx#custom#column(column_name, name_or_dict, ...) abort$/;"	f
defx#custom#option	.config/nvim/bundle/defx.nvim/autoload/defx/custom.vim	/^function! defx#custom#option(buffer_name, name_or_dict, ...) abort$/;"	f
defx#custom#source	.config/nvim/bundle/defx.nvim/autoload/defx/custom.vim	/^function! defx#custom#source(source_name, name_or_dict, ...) abort$/;"	f
defx#do_action	.config/nvim/bundle/defx.nvim/autoload/defx.vim	/^function! defx#do_action(action, ...) abort$/;"	f
defx#exrename#create_buffer	.config/nvim/bundle/defx.nvim/autoload/defx/exrename.vim	/^function! defx#exrename#create_buffer(candidates, ...) abort$/;"	f
defx#get_candidate	.config/nvim/bundle/defx.nvim/autoload/defx.vim	/^function! defx#get_candidate() abort$/;"	f
defx#init#_channel	.config/nvim/bundle/defx.nvim/autoload/defx/init.vim	/^function! defx#init#_channel() abort$/;"	f
defx#init#_check_channel	.config/nvim/bundle/defx.nvim/autoload/defx/init.vim	/^function! defx#init#_check_channel() abort$/;"	f
defx#init#_context	.config/nvim/bundle/defx.nvim/autoload/defx/init.vim	/^function! defx#init#_context(user_context) abort$/;"	f
defx#init#_initialize	.config/nvim/bundle/defx.nvim/autoload/defx/init.vim	/^function! defx#init#_initialize() abort$/;"	f
defx#init#_python_version_check	.config/nvim/bundle/defx.nvim/autoload/defx/init.vim	/^function! defx#init#_python_version_check() abort$/;"	f
defx#init#_user_options	.config/nvim/bundle/defx.nvim/autoload/defx/init.vim	/^function! defx#init#_user_options() abort$/;"	f
defx#initialize	.config/nvim/bundle/defx.nvim/autoload/defx.vim	/^function! defx#initialize() abort$/;"	f
defx#is_directory	.config/nvim/bundle/defx.nvim/autoload/defx.vim	/^function! defx#is_directory() abort$/;"	f
defx#is_opened_tree	.config/nvim/bundle/defx.nvim/autoload/defx.vim	/^function! defx#is_opened_tree() abort$/;"	f
defx#start	.config/nvim/bundle/defx.nvim/autoload/defx.vim	/^function! defx#start(paths, user_context) abort$/;"	f
defx#util#_parse_options_args	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#_parse_options_args(cmdline) abort$/;"	f
defx#util#call_defx	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#call_defx(command, args) abort$/;"	f
defx#util#cd	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#cd(path) abort$/;"	f
defx#util#complete	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#complete(arglead, cmdline, cursorpos) abort$/;"	f
defx#util#convert2list	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#convert2list(expr) abort$/;"	f
defx#util#execute_path	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#execute_path(command, path) abort$/;"	f
defx#util#has_yarp	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#has_yarp() abort$/;"	f
defx#util#is_windows	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#is_windows() abort$/;"	f
defx#util#open	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#open(filename) abort$/;"	f
defx#util#print_debug	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#print_debug(string) abort$/;"	f
defx#util#print_error	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#print_error(string) abort$/;"	f
defx#util#print_message	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#print_message(string) abort$/;"	f
defx#util#print_warning	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#print_warning(string) abort$/;"	f
defx#util#rpcrequest	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#rpcrequest(method, args, is_async) abort$/;"	f
defx#util#split	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#split(string) abort$/;"	f
defx#util#string	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#string(expr) abort$/;"	f
defx#util#truncate_skipping	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! defx#util#truncate_skipping(str, max, footer_width, separator) abort$/;"	f
defx_icons#get	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^function! defx_icons#get() abort$/;"	f
delta	.config/compton/compton.conf	/^fade-delta = 4;$/;"	k
dependencies	.config/nvim/bundle/coc.nvim/package.json	/^  "dependencies": {$/;"	o
dependencies	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/package.json	/^  "dependencies": {$/;"	o
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Absolute path of javascript file, should works in IPC mode"$/;"	s	object:definitions.languageServerModule.properties.module
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Absolute path of node runtime."$/;"	s	object:definitions.languageServerModule.properties.runtime
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Absolute root paths that language server should not use as rootPath, h/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Additional uri schemes, default schemes including file & untitled.",$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Arguments of command",$/;"	s	object:definitions.languageServerCommand.properties.args
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Argv passed to node when using module, normally used for debugging, ex/;"	s	object:definitions.languageServerModule.properties.execArgv
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Configure message level to show the output channel buffer",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Detach the languageserver process"$/;"	s	object:definitions.languageServerCommand.properties.detached
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Disable completion feature for this languageserver."$/;"	s	object:definitions.languageServerBase.properties.disableCompletion
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Disable handle diagnostics for this languageserver."$/;"	s	object:definitions.languageServerBase.properties.disableDiagnostics
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Disable workspaceFolders feature for this languageserver."$/;"	s	object:definitions.languageServerBase.properties.disableWorkspaceFolders
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Encoding used for stdio of child process."$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Environment variables for child process."$/;"	s	object:definitions.languageServerBase.properties.env
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Executable in $PATH to start languageserver, should not used with modu/;"	s	object:definitions.languageServerCommand.properties.command
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Extra arguments of module",$/;"	s	object:definitions.languageServerModule.properties.args
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Host of server"$/;"	s	object:definitions.languageServerSocket.properties.host
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "If true, doesn't start server when root pattern not found."$/;"	s	object:definitions.languageServerBase.properties.requireRootPattern
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Port number of socket server"$/;"	s	object:definitions.languageServerSocket.properties.port
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Port number used when transport is 'socket'"$/;"	s	object:definitions.languageServerModule.properties.transportPort
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Root patterns used for reoslve rootPath from current file, default to /;"	s	object:definitions.languageServerBase.properties.rootPatterns
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Settings of languageserver"$/;"	s	object:definitions.languageServerBase.properties.settings
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Supported filetypes, use empty array for all filetypes.",$/;"	s	object:definitions.languageServerBase.properties.filetypes
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Trace level of communication between server and client"$/;"	s	object:definitions.languageServerBase.properties.trace.server
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Transport kind used by server, could be 'ipc', 'stdio', 'socket' and '/;"	s	object:definitions.languageServerModule.properties.transport
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Use shell for process"$/;"	s	object:definitions.languageServerCommand.properties.shell
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "Working directory of languageserver, absolute path or relative to work/;"	s	object:definitions.languageServerBase.properties.cwd
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "description": "initializationOptions passed to languageserver"$/;"	s	object:definitions.languageServerBase.properties.initializationOptions
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Add preview option to completeopt, default: false.",$/;"	s	object:properties.suggest.enablePreview
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Auto close preview window on cursor move.",$/;"	s	object:properties.coc.preferences.previewAutoClose
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Automatically update the value of b:coc_current_function on CursorHold eve/;"	s	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Boost suggestions that appear closer to the cursor position.",$/;"	s	object:properties.suggest.localityBonus
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Command used for location jump, like goto definition, goto references etc./;"	s	object:properties.coc.preferences.jumpCommand
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Confirm completion instead of jump to next placeholder when completion is /;"	s	object:properties.suggest.preferCompleteThanJumpPlaceholder
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Controls whether suggestions should be accepted on commit characters. For /;"	s	object:properties.suggest.acceptSuggestionOnCommitCharacter
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Create location list for error & warning",$/;"	s	object:properties.diagnostic.locationlist
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Custom keymappings on insert mode."$/;"	s	object:properties.list.insertMappings
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Custom keymappings on normal mode."$/;"	s	object:properties.list.normalMappings
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Diagnostic message target.",$/;"	s	object:properties.diagnostic.messageTarget
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Dictionary of languageservers, key is used as id of languageserver.",$/;"	s	object:properties.languageserver
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Disable shortcut of completion source in menu.",$/;"	s	object:properties.suggest.disableMenuShortcut
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Enable auto resize feature."$/;"	s	object:properties.list.autoResize
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Enable codeLens feature, require neovim with set virtual text feature.",$/;"	s	object:properties.codeLens.enable
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Enable color highlight if language server support it.",$/;"	s	object:properties.coc.preferences.colorSupport
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Enable diagnostic refresh on insert mode, default false.",$/;"	s	object:properties.diagnostic.refreshOnInsertMode
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Enable extended search mode which allows multiple search patterns delimite/;"	s	object:properties.list.extendedSearchMode
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Enable floating window for documentation when possible.",$/;"	s	object:properties.suggest.floatEnable
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Enable highlight for floating window.",$/;"	s	object:properties.coc.preferences.enableFloatHighlight
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Enable signature help when trigger character typed, require restart servic/;"	s	object:properties.signature.enable
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Enable signs for diagnostics."$/;"	s	object:properties.diagnostic.enableSign
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Filetypes that should be ignored for resolve workspace folder.",$/;"	s	object:properties.workspace.ignoredFiletypes
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Filetypes that should run format on save.",$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Filetypes that should use ctags for outline instead of language server.",$/;"	s	object:properties.list.source.outline.ctagsFilestypes
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Hide signature float window when text changed, require restart service on /;"	s	object:properties.signature.hideOnTextChange
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Highlight group used for highlight the range in preview window."$/;"	s	object:properties.list.previewHighlightGroup
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "How should completion be triggered",$/;"	s	object:properties.suggest.autoTrigger
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Ignore completion for hidden files"$/;"	s	object:properties.coc.source.file.ignoreHidden
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Ignore git ignored files for buffer words"$/;"	s	object:properties.coc.source.buffer.ignoreGitignore
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Ignore patterns of matcher",$/;"	s	object:properties.coc.source.file.ignorePatterns
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Improve enter inside bracket `<> {} [] ()` by add new empty line below and/;"	s	object:properties.coc.preferences.bracketEnterImprove
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Input number to select complete item, it could wrong when using <up> and </;"	s	object:properties.suggest.numberSelect
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Interval for check extension update, could be daily, weekly, never",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Join lines messages to reduce lines of floating window.",$/;"	s	object:properties.diagnostic.joinMessageLines
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Key used for select next line on insert mode."$/;"	s	object:properties.list.nextKeymap
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Key used for select previous line on insert mode."$/;"	s	object:properties.list.previousKeymap
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Limit lines for list buffer."$/;"	s	object:properties.list.limitLines
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Make inserted word replace word characters after cursor position.",$/;"	s	object:properties.suggest.fixInsertedWord
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Max height for preview window of list."$/;"	s	object:properties.list.maxPreviewHeight
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Max items count for source priority bigger than or equal to 90."$/;"	s	object:properties.suggest.highPrioritySourceLimit
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Max items count for source priority lower than 90."$/;"	s	object:properties.suggest.lowPrioritySourceLimit
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Max length of abbr that shown as label of complete item.",$/;"	s	object:properties.suggest.labelMaxLength
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Max length of detail that should be shown in popup menu.",$/;"	s	object:properties.suggest.detailMaxLength
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Maximum height of diagnostics floating window.",$/;"	s	object:properties.diagnostic.maxWindowHeight
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Maximum height of floating signature help window.",$/;"	s	object:properties.signature.maxWindowHeight
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Maximum height of list window."$/;"	s	object:properties.list.maxHeight
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Maximum number of complete items shown in vim"$/;"	s	object:properties.suggest.maxCompleteItemCount
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Maximum width of floating preview window."$/;"	s	object:properties.suggest.maxPreviewWidth
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Message level for filter echoed messages, could be 'more', 'warning' and '/;"	s	object:properties.coc.preferences.messageLevel
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Mininal input length for trigger completion, default 1"$/;"	s	object:properties.suggest.minTriggerInputLength
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Not make vim select first item on completion start",$/;"	s	object:properties.suggest.noselect
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Offset number of buffer.addHighlight, neovim only.",$/;"	s	object:properties.diagnostic.highlightOffset
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Offset number of sign",$/;"	s	object:properties.diagnostic.signOffset
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Only refresh diagnostics after save, default false.",$/;"	s	object:properties.diagnostic.refreshAfterSave
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Priority of language sources."$/;"	s	object:properties.suggest.languageSourcePriority
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Remove kind field from vim complete item.",$/;"	s	object:properties.suggest.disableKind
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Remove menu field from vim complete item.",$/;"	s	object:properties.suggest.disableMenu
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Root patterns to resolve workspaceFolder from parent folders of opened fil/;"	s	object:properties.coc.preferences.rootPatterns
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Separator text for codeLens in virtual text",$/;"	s	object:properties.codeLens.separator
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Set custom labels to completion items' kinds.",$/;"	s	object:properties.suggest.completionItemKindLabels
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Set to false to disable diagnostic display",$/;"	s	object:properties.diagnostic.enable
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Set to false to disable snippets support.",$/;"	s	object:properties.coc.preferences.snippets.enable
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Set to true to enable format on type",$/;"	s	object:properties.coc.preferences.formatOnType
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Show signature help float window above cursor when possible, require resta/;"	s	object:properties.signature.preferShownAbove
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Sign offset of list, should be different from other plugins."$/;"	s	object:properties.list.signOffset
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Sign text for selected lines."$/;"	s	object:properties.list.selectedSignText
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Target of signature help, use float when possible by default.",$/;"	s	object:properties.signature.target
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Target to show hover information, default is floating window when possible/;"	s	object:properties.coc.preferences.hoverTarget
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Text of error sign",$/;"	s	object:properties.diagnostic.errorSign
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Text of hint sign",$/;"	s	object:properties.diagnostic.hintSign
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Text of info sign",$/;"	s	object:properties.diagnostic.infoSign
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Text of warning sign",$/;"	s	object:properties.diagnostic.warningSign
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Text shown in statusline to indicate snippet session is activated."$/;"	s	object:properties.coc.preferences.snippetStatusText
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "The characer used as first characer in prompt line"$/;"	s	object:properties.list.indicator
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "The character used in abbr of complete item to indicate the item could be /;"	s	object:properties.suggest.snippetIndicator
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "The number of non empty lines from a diagnostic to display",$/;"	s	object:properties.diagnostic.virtualTextLines
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "The prefix added virtual text diagnostics",$/;"	s	object:properties.diagnostic.virtualTextPrefix
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "The text that will mark a line end from the diagnostic message",$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Timeout for completion, in miliseconds."$/;"	s	object:properties.suggest.timeout
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Timeout for trigger signature help, in miliseconds."$/;"	s	object:properties.signature.triggerSignatureWait
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Trigger completion after InsertEnter, auto trigger should be 'always' to e/;"	s	object:properties.suggest.triggerAfterInsertEnter
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Trim same extension on file completion",$/;"	s	object:properties.coc.source.file.trimSameExts
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Use Ale for display diagnostics in vim, will disable coc for display diagn/;"	s	object:properties.diagnostic.displayByAle
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Use NeoVim virtual text to display diagnostics",$/;"	s	object:properties.diagnostic.virtualText
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Use vim's quickfix list for jump locations,\\n need restart on change.",$/;"	s	object:properties.coc.preferences.useQuickfixForLocations
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Use vsplit for preview window."$/;"	s	object:properties.list.previewSplitRight
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Used for filter diagnostics by diagnostic severity.",$/;"	s	object:properties.diagnostic.level
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Wait time between trigger character type and completion start, for wait se/;"	s	object:properties.suggest.triggerCompletionWait
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "When enabled, add function signature to user_data.signature to support ech/;"	s	object:properties.suggest.echodocSupport
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "When enabled, completeopt is not overriden, auto completion will be disabl/;"	s	object:properties.suggest.keepCompleteopt
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "When enabled, show all diagnostics of current line instead of current posi/;"	s	object:properties.diagnostic.checkCurrentLine
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "When to enable echo messages of diagnostics.",$/;"	s	object:properties.diagnostic.enableMessage
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "Where to add the detail in complete item when it's less than max length.",$/;"	s	object:properties.suggest.detailField
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "executable path for https:\/\/facebook.github.io\/watchman\/, detected fro/;"	s	object:properties.coc.preferences.watchmanPath
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "description": "http proxy uri, used for extensions that send request"$/;"	s	object:properties.http.proxy
description	.config/nvim/bundle/coc.nvim/data/schema.json	/^  "description": "Configuration file for coc.nvim",$/;"	s
description	.config/nvim/bundle/coc.nvim/package.json	/^  "description": "LSP based intellisense engine for neovim & vim8.",$/;"	s
description	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^          "description": "Enable test"$/;"	s	object:contributes.configuration.properties.test.enable
detached	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "detached": {$/;"	o	object:definitions.languageServerCommand.properties
devDependencies	.config/nvim/bundle/coc.nvim/package.json	/^  "devDependencies": {$/;"	o
devicon	.config/ranger/plugins/devicons.py	/^def devicon(file):$/;"	f
devicon	.config/ranger/plugins/ranger_devicons/devicons.py	/^def devicon(file):$/;"	f
dh	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> dh :<C-U>execute <SID>StageDiff('Gsdiff')<CR>$/;"	m
diagnostic.checkCurrentLine	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.checkCurrentLine": {$/;"	o	object:properties
diagnostic.checkCurrentLine	.config/nvim/coc-settings.json	/^  "diagnostic.checkCurrentLine": true,$/;"	b
diagnostic.displayByAle	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.displayByAle": {$/;"	o	object:properties
diagnostic.enable	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.enable": {$/;"	o	object:properties
diagnostic.enableMessage	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.enableMessage": {$/;"	o	object:properties
diagnostic.enableSign	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.enableSign": {$/;"	o	object:properties
diagnostic.errorSign	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.errorSign": {$/;"	o	object:properties
diagnostic.highlightOffset	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.highlightOffset": {$/;"	o	object:properties
diagnostic.hintSign	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.hintSign": {$/;"	o	object:properties
diagnostic.infoSign	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.infoSign": {$/;"	o	object:properties
diagnostic.joinMessageLines	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.joinMessageLines": {$/;"	o	object:properties
diagnostic.level	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.level": {$/;"	o	object:properties
diagnostic.locationlist	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.locationlist": {$/;"	o	object:properties
diagnostic.maxWindowHeight	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.maxWindowHeight": {$/;"	o	object:properties
diagnostic.messageTarget	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.messageTarget": {$/;"	o	object:properties
diagnostic.refreshAfterSave	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.refreshAfterSave": {$/;"	o	object:properties
diagnostic.refreshOnInsertMode	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.refreshOnInsertMode": {$/;"	o	object:properties
diagnostic.signOffset	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.signOffset": {$/;"	o	object:properties
diagnostic.virtualText	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.virtualText": {$/;"	o	object:properties
diagnostic.virtualText	.config/nvim/coc-settings.json	/^  "diagnostic.virtualText": true,$/;"	b
diagnostic.virtualTextLineSeparator	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextLineSeparator": {$/;"	o	object:properties
diagnostic.virtualTextLines	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextLines": {$/;"	o	object:properties
diagnostic.virtualTextPrefix	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextPrefix": {$/;"	o	object:properties
diagnostic.warningSign	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "diagnostic.warningSign": {$/;"	o	object:properties
dir	.config/nvim/bundle/coc.nvim/src/util/clean.ts	/^    let dir = tmpdir()$/;"	v
dir_node_exact_matches	.config/ranger/plugins/devicons.py	/^dir_node_exact_matches = {$/;"	v
dir_node_exact_matches	.config/ranger/plugins/ranger_devicons/devicons.py	/^dir_node_exact_matches = {$/;"	v
direction	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    direction: str = ''$/;"	v	class:Context
directory	.config/nvim/coc-settings.json	/^           "directory": "\/tmp\/ccls"$/;"	s	object:languageserver.ccls.initializationOptions.cache
disableCompletion	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "disableCompletion": {$/;"	o	object:definitions.languageServerBase.properties
disableCompletion	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "disableCompletion": {},$/;"	o	object:definitions.languageServerCommand.properties
disableCompletion	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "disableCompletion": {},$/;"	o	object:definitions.languageServerModule.properties
disableCompletion	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "disableCompletion": {},$/;"	o	object:definitions.languageServerSocket.properties
disableDiagnostics	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "disableDiagnostics": {$/;"	o	object:definitions.languageServerBase.properties
disableDiagnostics	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "disableDiagnostics": {},$/;"	o	object:definitions.languageServerCommand.properties
disableDiagnostics	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "disableDiagnostics": {},$/;"	o	object:definitions.languageServerModule.properties
disableDiagnostics	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "disableDiagnostics": {},$/;"	o	object:definitions.languageServerSocket.properties
disableWorkspaceFolders	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {$/;"	o	object:definitions.languageServerBase.properties
disableWorkspaceFolders	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerCommand.properties
disableWorkspaceFolders	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerModule.properties
disableWorkspaceFolders	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerSocket.properties
disk_display	.config/neofetch/config.conf	/^disk_display="on"$/;"	k
disk_show	.config/neofetch/config.conf	/^disk_show=('\/')$/;"	k
disk_subtitle	.config/neofetch/config.conf	/^disk_subtitle="mount"$/;"	k
display	.config/nvim/bundle/oceanic-next/test/test.jsx	/^        display: isEditMode ? 'block' : 'none'$/;"	p	class:EmailField.editStyle
display	.config/nvim/bundle/oceanic-next/test/test.jsx	/^        display: isEditMode ? 'none' : 'block'$/;"	p	class:EmailField.displayStyle
displayStyle	.config/nvim/bundle/oceanic-next/test/test.jsx	/^      const displayStyle = {$/;"	c	class:EmailField
disposables	.config/nvim/bundle/coc.nvim/src/model/task.ts	/^  private disposables: Disposable[] = []$/;"	p	class:Task
distinct	.config/nvim/bundle/coc.nvim/src/util/array.ts	/^export function distinct<T>(array: T[], keyFn?: (t: T) => string): T[] {$/;"	f
distro_shorthand	.config/neofetch/config.conf	/^distro_shorthand="off"$/;"	k
do_action	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^        def do_action(self, args: typing.List[typing.Any]) -> None:$/;"	m	class:DefxHandlers
do_action	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/action.py	/^def do_action(view: View, defx: Defx,$/;"	f
do_action	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/rplugin.py	/^    def do_action(self, args: typing.List[typing.Any]) -> None:$/;"	m	class:Rplugin
do_action	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def do_action(self, action_name: str,$/;"	m	class:View
doc	.config/nvim/bundle/coc.nvim/src/__tests__/client/converter.test.ts	/^    let doc = createDocument()$/;"	v
doc	.config/nvim/bundle/coc.nvim/src/__tests__/client/converter.test.ts	/^    let doc = cv.asCodeLensParams(createDocument())$/;"	v
doc	.config/nvim/bundle/coc.nvim/src/__tests__/client/converter.test.ts	/^    let doc = cv.asDocumentSymbolParams(createDocument())$/;"	v
doc	.config/nvim/bundle/coc.nvim/src/__tests__/client/converter.test.ts	/^    let doc = cv.asTextDocumentIdentifier(createDocument())$/;"	v
dockerfile	.config/nvim/coc-settings.json	/^    "dockerfile": {$/;"	o	object:languageserver
documents	.config/nvim/bundle/coc.nvim/src/__tests__/client/server/testFileWatcher.js	/^let documents = new languageserver.TextDocuments()$/;"	v
documents	.config/nvim/bundle/coc.nvim/src/__tests__/client/server/testInitializeResult.js	/^let documents = new vscode_languageserver_1.TextDocuments();$/;"	v
download	.config/nvim/bundle/coc.nvim/install.sh	/^download() {$/;"	f
dp	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> dp :<C-U>execute <SID>StageDiffEdit()<CR>$/;"	m
ds	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ds :<C-U>execute <SID>StageDiff('Gsdiff')<CR>$/;"	m
dv	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> dv :<C-U>execute <SID>StageDiff('Gvdiff')<CR>$/;"	m
e	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  e = 101,$/;"	e	enum:CharCode
editRange	.config/nvim/bundle/coc.nvim/src/util/position.ts	/^export function editRange(range: Range, text: string, edit: TextEdit): string {$/;"	f
editStyle	.config/nvim/bundle/oceanic-next/test/test.jsx	/^      const editStyle = {$/;"	c	class:EmailField
elm	.config/nvim/bundle/oceanic-next/test/test.css	/^elm {$/;"	s
elm	.config/nvim/bundle/oceanic-next/test/test.css	/^elm{$/;"	s
enable	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "enable": {$/;"	o	object:definitions.languageServerBase.properties
enable	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerCommand.properties
enable	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerModule.properties
enable	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerSocket.properties
engines	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/coc-json/package.json	/^  "engines": {$/;"	o
engines	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/global/package.json	/^  "engines": {$/;"	o
engines	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/local/package.json	/^  "engines": {$/;"	o
engines	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^  "engines": {$/;"	o
ensure	.config/nvim/bundle/coc.nvim/src/language-client/colorProvider.ts	/^function ensure<T, K extends keyof T>(target: T, key: K): T[K] {$/;"	f
ensure	.config/nvim/bundle/coc.nvim/src/language-client/declaration.ts	/^function ensure<T, K extends keyof T>(target: T, key: K): T[K] {$/;"	f
ensure	.config/nvim/bundle/coc.nvim/src/language-client/foldingRange.ts	/^function ensure<T, K extends keyof T>(target: T, key: K): T[K] {$/;"	f
ensure	.config/nvim/bundle/coc.nvim/src/language-client/implementation.ts	/^function ensure<T, K extends keyof T>(target: T, key: K): T[K] {$/;"	f
ensure	.config/nvim/bundle/coc.nvim/src/language-client/selectionRange.ts	/^function ensure<T, K extends keyof T>(target: T, key: K): T[K] {$/;"	f
ensure	.config/nvim/bundle/coc.nvim/src/language-client/typeDefinition.ts	/^function ensure<T, K extends keyof T>(target: T, key: K): T[K] {$/;"	f
entry	.config/nvim/bundle/coc.nvim/webpack.config.js	/^  entry: '.\/bin\/server',$/;"	p	class:module.exports
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	a	object:definitions.languageServerBase.properties.revealOutputChannelOn
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	a	object:definitions.languageServerModule.properties.transport
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	a	object:definitions.languageServerBase.properties.trace.server
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "enum": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	a	object:properties.suggest.detailField
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	a	object:properties.diagnostic.enableMessage
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	a	object:properties.suggest.autoTrigger
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	a	object:properties.coc.preferences.extensionUpdateCheck
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	a	object:properties.diagnostic.messageTarget
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop"]$/;"	a	object:properties.coc.preferences.jumpCommand
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	a	object:properties.signature.target
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	a	object:properties.diagnostic.level
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	a	object:properties.coc.preferences.messageLevel
enum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	a	object:properties.coc.preferences.hoverTarget
enumMember	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "enumMember": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
enums	.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*enum[ \\t]+([a-zA-Z0-9_]+)\/\\2\/e,enums\/$/;"	k	langdef:typescript
env	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "env": {$/;"	o	object:definitions.languageServerBase.properties
env	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "env": {},$/;"	o	object:definitions.languageServerCommand.properties
env	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "env": {},$/;"	o	object:definitions.languageServerModule.properties
error	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/util.py	/^def error(vim: Nvim, expr: typing.Any) -> None:$/;"	f
esModuleInterop	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "esModuleInterop": true,$/;"	b	object:compilerOptions
escape	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet format section #37562', function() {$/;"	C	function:assertText
escape	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet regex #36715', function() {$/;"	C	function:assertText
escapeKeys	arch/ansi-colours.lua	/^local function escapeKeys(str)$/;"	f
escapeNumber	arch/ansi-colours.lua	/^local function escapeNumber(number)$/;"	f
event	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "event": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
exclude	.config/compton/compton.conf	/^blur-background-exclude = [$/;"	k
exclude	.config/compton/compton.conf	/^fade-exclude = [ ];$/;"	k
exclude	.config/compton/compton.conf	/^focus-exclude = [ ];$/;"	k
exclude	.config/compton/compton.conf	/^shadow-exclude = [$/;"	k
exclude	.config/nvim/bundle/coc.nvim/tsconfig.json	/^  "exclude": []$/;"	a
exclude	.config/nvim/bundle/coc.nvim/tslint.json	/^    "exclude": []$/;"	a	object:linterOptions
exec	arch/arch-install.lua	/^function exec(command, args)$/;"	f
execArgv	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "execArgv": {$/;"	o	object:definitions.languageServerModule.properties
execute	.config/nvim/bundle/coc.nvim/src/commands.ts	/^  public execute(...args: any[]): void | Promise<any> {$/;"	C
experimentalDecorators	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "experimentalDecorators": true,$/;"	b	object:compilerOptions
exports	.config/nvim/bundle/coc.nvim/webpack.config.js	/^module.exports = {$/;"	c	class:module
extends	.config/nvim/bundle/coc.nvim/tslint.json	/^  "extends": ".\/node_modules\/@chemzqm\/tslint-config\/tslint.json",$/;"	s
f	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  f = 102,$/;"	e	enum:CharCode
factoryFactory	.config/nvim/bundle/coc.nvim/src/__tests__/client/delayer.test.ts	/^  let factoryFactory = (n: number) => () => {$/;"	v
fading	.config/compton/compton.conf	/^fading = true;$/;"	k
fast-diff	.config/nvim/bundle/coc.nvim/package.json	/^    "fast-diff": "^1.2.0",$/;"	s	object:dependencies
fb-watchman	.config/nvim/bundle/coc.nvim/package.json	/^    "fb-watchman": "^2.0.0",$/;"	s	object:dependencies
fetch	.config/nvim/bundle/coc.nvim/install.sh	/^fetch() {$/;"	f
fetch	.config/nvim/bundle/coc.nvim/src/model/db.ts	/^  public async fetch(key: string): Promise<any> {$/;"	m	class:DB
field	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "field": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
file	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "file": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
file_node_exact_matches	.config/ranger/plugins/devicons.py	/^file_node_exact_matches = {$/;"	v
file_node_exact_matches	.config/ranger/plugins/ranger_devicons/devicons.py	/^file_node_exact_matches = {$/;"	v
file_node_extensions	.config/ranger/plugins/devicons.py	/^file_node_extensions = {$/;"	v
file_node_extensions	.config/ranger/plugins/ranger_devicons/devicons.py	/^file_node_extensions = {$/;"	v
filename	.config/nvim/bundle/coc.nvim/webpack.config.js	/^    filename: 'index.js'$/;"	p	class:module.exports.output
filepath	.config/nvim/bundle/coc.nvim/src/__tests__/modules/memos.test.ts	/^let filepath = path.join(os.tmpdir(), 'test')$/;"	v
filepath	.config/nvim/bundle/coc.nvim/src/model/db.ts	/^    public readonly filepath: string$/;"	p	class:DB
filetitle	.config/ranger/plugins/devicons_linemode.py	/^  def filetitle(self, file, metadata):$/;"	m	class:DevIconsLinemode
filetitle	.config/ranger/plugins/devicons_linemode.py	/^  def filetitle(self, file, metadata):$/;"	m	class:DevIconsLinemodeFile
filetitle	.config/ranger/plugins/ranger_devicons/__init__.py	/^  def filetitle(self, file, metadata):$/;"	m	class:DevIconsLinemode
filetitle	.config/ranger/plugins/ranger_devicons/__init__.py	/^  def filetitle(self, file, metadata):$/;"	m	class:DevIconsLinemodeFile
filetype	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^        "filetype": "javascript",$/;"	s	object:contributes.rootPatterns.0
filetypes	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "filetypes": {$/;"	o	object:definitions.languageServerBase.properties
filetypes	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerCommand.properties
filetypes	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerModule.properties
filetypes	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerSocket.properties
filetypes	.config/nvim/coc-settings.json	/^      "filetypes": ["c", "cpp", "objc", "objcpp"],$/;"	a	object:languageserver.ccls
filetypes	.config/nvim/coc-settings.json	/^      "filetypes": ["dockerfile"],$/;"	a	object:languageserver.dockerfile
filetypes	.config/nvim/coc-settings.json	/^      "filetypes": ["javascript", "javascriptreact"],$/;"	a	object:languageserver.flow
filetypes	.config/nvim/coc-settings.json	/^      "filetypes": ["lua"]$/;"	a	object:languageserver.lua
filetypes	.config/nvim/coc-settings.json	/^      "filetypes": ["sh"],$/;"	a	object:languageserver.bash
find-up	.config/nvim/bundle/coc.nvim/package.json	/^    "find-up": "^4.0.0",$/;"	s	object:dependencies
fixed	.config/compton/compton.conf	/^blur-background-fixed = false;$/;"	k
flow	.config/nvim/coc-settings.json	/^    "flow": {$/;"	o	object:languageserver
focused	.config/compton/compton.conf	/^mark-ovredir-focused = true;$/;"	k
focused	.config/compton/compton.conf	/^mark-wmwin-focused = true;$/;"	k
folder	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "folder": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
foo	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/([A-Z][a-z]\/format\/}', '${foo\/([A-Z][a-z]\/format\/}', Text)$/;"	C	function:assertText
foo	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/\/\/}', '', Variable)$/;"	C	function:assertText
foo.bar	.config/nvim/bundle/coc.nvim/src/__tests__/modules/settings.json	/^  "foo.bar": 1,$/;"	n
forceConsistentCasingInFileNames	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "forceConsistentCasingInFileNames": true,$/;"	b	object:compilerOptions
foreground	colors.properties	/^foreground=#C3C7D1$/;"	k
foregroundColors	.config/nvim/bundle/coc.nvim/src/util/ansiparse.ts	/^const foregroundColors = {$/;"	C
format	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/([A-Z][a-z]\/format\/}', '${foo\/([A-Z][a-z]\/format\/}', Text)$/;"	C	function:assertText
forward	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet format section #37562', function() {$/;"	C	function:assertText
forward	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet regex #36715', function() {$/;"	C	function:assertText
frames	.config/nvim/bundle/coc.nvim/src/list/worker.ts	/^const frames = ['⠋', '⠙', '⠹', '⠸', '⠼', '⠴', '⠦', '⠧', '⠇', '⠏']$/;"	C
frecent	z.sh	/^            function frecent(rank, time) {$/;"	f
front	.config/compton/compton.conf	/^glx-copy-from-front = false;$/;"	k
fs	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^let fs = require('fs');$/;"	v
fsWriteSyncBuffer	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^    let fsWriteSyncBuffer = function (\/\/ tslint:disable-line$/;"	f
fsWriteSyncString	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^    let fsWriteSyncString = function (\/\/ tslint:disable-line$/;"	f
fugitive	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#BufReadCmd	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadCmd(...) abort$/;"	f
fugitive#BufReadStatus	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadStatus() abort$/;"	f
fugitive#BufWriteCmd	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufWriteCmd(...) abort$/;"	f
fugitive#CanDiffoff	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CanDiffoff(buf) abort$/;"	f
fugitive#Cfile	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cfile() abort$/;"	f
fugitive#CommonDir	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommonDir(dir) abort$/;"	f
fugitive#Complete	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Complete(...) abort$/;"	f
fugitive#CompleteGit	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteGit(lead, ...) abort$/;"	f
fugitive#CompleteObject	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteObject(base, ...) abort$/;"	f
fugitive#CompletePath	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompletePath(base, ...) abort$/;"	f
fugitive#Config	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Config(...) abort$/;"	f
fugitive#Cwindow	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cwindow() abort$/;"	f
fugitive#Expand	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Expand(object) abort$/;"	f
fugitive#FileReadCmd	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileReadCmd(...) abort$/;"	f
fugitive#FileWriteCmd	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileWriteCmd(...) abort$/;"	f
fugitive#Find	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Find(object, ...) abort$/;"	f
fugitive#Foldtext	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Foldtext() abort$/;"	f
fugitive#GitVersion	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GitVersion(...) abort$/;"	f
fugitive#Head	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Head(...) abort$/;"	f
fugitive#Init	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Init() abort$/;"	f
fugitive#MapCfile	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapCfile(...) abort$/;"	f
fugitive#MapJumps	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapJumps(...) abort$/;"	f
fugitive#MessageCfile	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MessageCfile() abort$/;"	f
fugitive#Object	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Object(...) abort$/;"	f
fugitive#Path	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Path(url, ...) abort$/;"	f
fugitive#PathComplete	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PathComplete(...) abort$/;"	f
fugitive#Prepare	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Prepare(...) abort$/;"	f
fugitive#Real	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Real(url) abort$/;"	f
fugitive#ReloadStatus	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReloadStatus(...) abort$/;"	f
fugitive#RemoteUrl	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoteUrl(...) abort$/;"	f
fugitive#RevParse	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevParse(rev, ...) abort$/;"	f
fugitive#SourceCmd	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SourceCmd(...) abort$/;"	f
fugitive#StatusCfile	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#StatusCfile() abort$/;"	f
fugitive#Statusline	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Statusline(...) abort$/;"	f
fugitive#buffer	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#delete	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#delete(url, ...) abort$/;"	f
fugitive#detect	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#filereadable	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filereadable(url) abort$/;"	f
fugitive#filewritable	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filewritable(url) abort$/;"	f
fugitive#foldtext	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#getfperm	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfperm(url) abort$/;"	f
fugitive#getfsize	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfsize(url) abort$/;"	f
fugitive#getftime	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftime(url) abort$/;"	f
fugitive#getftype	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftype(url) abort$/;"	f
fugitive#glob	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#glob(url, ...) abort$/;"	f
fugitive#head	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#isdirectory	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#isdirectory(url) abort$/;"	f
fugitive#readfile	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#readfile(url, ...) abort$/;"	f
fugitive#repo	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#resolve	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#resolve(url) abort$/;"	f
fugitive#setfperm	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#setfperm(url, perm) abort$/;"	f
fugitive#simplify	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#simplify(url) abort$/;"	f
fugitive#statusline	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive#writefile	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#writefile(lines, url, ...) abort$/;"	f
fugitive.vim	.config/nvim/bundle/vim-fugitive/README.markdown	/^# fugitive.vim$/;"	c
fugitive_blame	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_folding	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_folding$/;"	a
fugitive_merge	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_merge$/;"	a
fugitive_remove	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_temp$/;"	a
funcs	.config/nvim/bundle/coc.nvim/src/util/callSequence.ts	/^  private funcs: Set<Function> = new Set()$/;"	p	class:CallSequence
function	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "function": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
function	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet format section #37562', function() {$/;"	C	function:assertText
function	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet regex #36715', function() {$/;"	C	function:assertText
function	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, placeholder transforms', function() {$/;"	C	function:assertText
function	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, variable transforms', function() {$/;"	C	function:assertText
function	.ctags	/^--regex-js=\/([A-Za-z$][A-Za-z0-9_$]+)[ \\t]*=[ \\t]*function[ \\t]*\\(\/\\1\/f,function\/$/;"	k	langdef:js:.tsx
function	.ctags	/^--regex-js=\/(function)*[ \\t]*([A-Za-z$_][A-Za-z0-9_$]+)[ \\t]*\\([^)]*\\)[ \\t]*\\{\/\\2\/f,fu/;"	k	langdef:js:.tsx
functions	.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*function[ \\t]+([a-zA-Z0-9_]+)\/\\2\/f,functions\/$/;"	k	langdef:typescript
g	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  g = 103,$/;"	e	enum:CharCode
g:	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:[newname] = g:[key]$/;"	v
g:NERDTreeDirArrowCollapsible	.vimrc	/^let g:NERDTreeDirArrowCollapsible = '▾'$/;"	v
g:NERDTreeDirArrowExpandable	.vimrc	/^let g:NERDTreeDirArrowExpandable = '▸'$/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette = {}$/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:c/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.inactive = airline#themes#generate_color_map(s:inactive/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.inactive.airline_error = s:error$/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.inactive.airline_warning = s:warning$/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.insert = airline#themes#generate_color_map(s:insert1, s/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.insert.airline_error = s:error$/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.insert.airline_warning = s:warning$/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.normal = airline#themes#generate_color_map(s:normal1, s/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.normal.airline_error = s:error$/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.normal.airline_warning = s:warning$/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.replace = airline#themes#generate_color_map(s:replace1,/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.replace.airline_error = s:error$/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.replace.airline_warning = s:warning$/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.visual = airline#themes#generate_color_map(s:visual1, s/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.visual.airline_error = s:error$/;"	v
g:airline#themes#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let g:airline#themes#oceanicnext#palette.visual.airline_warning = s:warning$/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette = {}$/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.ctrlp = airline#extensions#ctrlp#generate_color_ma/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.inactive = airline#themes#generate_color_map(s:ina/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.inactive.airline_error = s:error$/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.inactive.airline_warning = s:warning$/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.insert = airline#themes#generate_color_map(s:inser/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.insert.airline_error = s:error$/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.insert.airline_warning = s:warning$/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.normal = airline#themes#generate_color_map(s:norma/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.normal.airline_error = s:error$/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.normal.airline_warning = s:warning$/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.replace = airline#themes#generate_color_map(s:repl/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.replace.airline_error = s:error$/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.replace.airline_warning = s:warning$/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.visual = airline#themes#generate_color_map(s:visua/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.visual.airline_error = s:error$/;"	v
g:airline#themes#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let g:airline#themes#oceanicnextlight#palette.visual.airline_warning = s:warning$/;"	v
g:airline_powerline_fonts	.vimrc	/^let g:airline_powerline_fonts = 1$/;"	v
g:ale_echo_msg_format	.vimrc	/^let g:ale_echo_msg_format = '%linter% says %s'$/;"	v
g:ale_fixers	.vimrc	/^let g:ale_fixers = {$/;"	v
g:ale_linters	.vimrc	/^let g:ale_linters = {$/;"	v
g:ale_sign_error	.vimrc	/^let g:ale_sign_error = 'X' " could use emoji$/;"	v
g:ale_sign_warning	.vimrc	/^let g:ale_sign_warning = '?' " could use emoji$/;"	v
g:ale_statusline_format	.vimrc	/^let g:ale_statusline_format = ['X %d', '? %d', '']$/;"	v
g:autoloaded_fugitive	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let g:autoloaded_fugitive = 1$/;"	v
g:coc#_context	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^    let g:coc#_context['candidates'] = []$/;"	v
g:coc#_context	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^  let g:coc#_context = {$/;"	v
g:coc#_context	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^let g:coc#_context = {'start': 0, 'candidates': []}$/;"	v
g:coc_enabled	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^  let g:coc_enabled = 0$/;"	v
g:coc_enabled	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^  let g:coc_enabled = 1$/;"	v
g:coc_global_extensions	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^let g:coc_global_extensions = get(g:, 'coc_global_extensions', [])$/;"	v
g:coc_last_hover_message	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^  let g:coc_last_hover_message = a:msg$/;"	v
g:coc_selected_text	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^let g:coc_selected_text = ''$/;"	v
g:coc_service_initialized	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^let g:coc_service_initialized = 0$/;"	v
g:coc_user_config	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^  let g:coc_user_config[a:section] = a:value$/;"	v
g:coc_user_config	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^let g:coc_user_config = get(g:, 'coc_user_config', {})$/;"	v
g:coc_vim_commands	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^let g:coc_vim_commands = []$/;"	v
g:coc_watch_extensions	.config/nvim/bundle/coc.nvim/src/__tests__/vimrc	/^let g:coc_watch_extensions = ['test']$/;"	v
g:colors_name	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let g:colors_name="OceanicNext"$/;"	v
g:colors_name	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let g:colors_name="OceanicNextLight"$/;"	v
g:ctrlp_alldirs	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^			let g:ctrlp_alldirs = ctrlp#utils#readfile(cafile)$/;"	v
g:ctrlp_allfiles	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^			let g:ctrlp_allfiles = ctrlp#dirnfile(g:ctrlp_allfiles)[1]$/;"	v
g:ctrlp_allfiles	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^			let g:ctrlp_allfiles = ctrlp#utils#readfile(cafile)$/;"	v
g:ctrlp_allfiles	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_allfiles = []$/;"	v
g:ctrlp_allfiles	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_allfiles = split(system(s:safe_printf(lscmd, path)), "\\n")$/;"	v
g:ctrlp_allfiles	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_allfiles = systemlist(s:safe_printf(lscmd, path))$/;"	v
g:ctrlp_allmixes	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^	let g:ctrlp_allmixes = { 'filtime': getftime(ctrlp#utils#cachefile()),$/;"	v
g:ctrlp_alltags	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^	let g:ctrlp_alltags = []$/;"	v
g:ctrlp_autoignore_debug	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_autoignore_debug = 0$/;"	v
g:ctrlp_autoignore_loaded	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_autoignore_loaded = 1$/;"	v
g:ctrlp_autoignore_trace	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_autoignore_trace = 0$/;"	v
g:ctrlp_builtins	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let g:ctrlp_builtins = len(g:ctrlp_types)-1$/;"	v
g:ctrlp_custom_ignore	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_custom_ignore = {}$/;"	v
g:ctrlp_custom_ignore	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_custom_ignore['func'] = 'ctrlp#autoignore#ignore'$/;"	v
g:ctrlp_custom_ignore	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_custom_ignore['func-close'] = 'ctrlp#autoignore#ignore_close'$/;"	v
g:ctrlp_custom_ignore	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_custom_ignore['func-init'] = 'ctrlp#autoignore#ignore_init'$/;"	v
g:ctrlp_custom_ignore	.vimrc	/^let g:ctrlp_custom_ignore = {$/;"	v
g:ctrlp_lines	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_lines = ctrlp#mrufiles#refresh()$/;"	v
g:ctrlp_lines	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^	let g:ctrlp_lines = []$/;"	v
g:ctrlp_lines	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^	let g:ctrlp_lines = call(a:rfunc, [tbrem])$/;"	v
g:ctrlp_lines	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^	let g:ctrlp_lines = eval(types[s:itemtype])$/;"	v
g:ctrlp_lines	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^		let g:ctrlp_lines = g:ctrlp_allmixes['data']$/;"	v
g:ctrlp_lines	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^	let g:ctrlp_lines = copy(ctrlp#files())$/;"	v
g:ctrlp_lines	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^	let g:ctrlp_lines = len(mrufs) > len(g:ctrlp_lines)$/;"	v
g:ctrlp_newcache	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_newcache = 0$/;"	v
g:ctrlp_newcache	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^		let g:ctrlp_newcache = 1$/;"	v
g:ctrlp_newdir	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^		let g:ctrlp_newdir = 0$/;"	v
g:ctrlp_newmix	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^	let g:ctrlp_newmix = 0$/;"	v
g:ctrlp_root_markers	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_root_markers = []$/;"	v
g:ctrlp_types	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^	let g:ctrlp_types = s:types$/;"	v
g:defx#_channel_id	.config/nvim/bundle/defx.nvim/autoload/defx/init.vim	/^      let g:defx#_channel_id = 1$/;"	v
g:defx#_histories	.config/nvim/bundle/defx.nvim/autoload/defx/init.vim	/^  let g:defx#_histories = []$/;"	v
g:defx#_yarp	.config/nvim/bundle/defx.nvim/autoload/defx/init.vim	/^      let g:defx#_yarp = yarp#py3('defx')$/;"	v
g:deoplete#auto_completion_start_length	.vimrc	/^let g:deoplete#auto_completion_start_length = 1$/;"	v
g:deoplete#enable_at_startup	.vimrc	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#ignore_sources	.vimrc	/^let g:deoplete#ignore_sources = get(g:, 'deoplete#ignore_sources', {})$/;"	v
g:deoplete#ignore_sources	.vimrc	/^let g:deoplete#ignore_sources.js = ['omni']$/;"	v
g:deoplete#ignore_sources	.vimrc	/^let g:deoplete#ignore_sources.ts = ['omni']$/;"	v
g:did_coc_loaded	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^let g:did_coc_loaded = 1$/;"	v
g:fugitive_git_executable	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:fzf_action	.vimrc	/^let g:fzf_action = {$/;"	v
g:fzf_colors	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^      let g:fzf_colors = old_fzf_colors$/;"	v
g:gutentags_add_ctrlp_root_markers	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_ctrlp_root_markers = get(g:, 'gutentags_add_ctrlp_root_markers', 1)$/;"	v
g:gutentags_add_default_project_roots	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	.config/nvim/bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	.config/nvim/bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_build_inverted_index	.config/nvim/bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_build_inverted_index = 0$/;"	v
g:gutentags_cscope_executable	.config/nvim/bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_extra_args	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:gutentags_enabled = 0$/;"	v
g:gutentags_enabled	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_filetypes	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_filetypes = get(g:, 'gutentags_exclude_filetypes', [])$/;"	v
g:gutentags_exclude_project_root	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'/;"	v
g:gutentags_fake	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_fake = a:1$/;"	v
g:gutentags_fake	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_fake = !g:gutentags_fake$/;"	v
g:gutentags_fake	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	.config/nvim/bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	.config/nvim/bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	.config/nvim/bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	.config/nvim/bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslc/;"	v
g:gutentags_project_root	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	.config/nvim/bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^            let g:gutentags_trace = l:prev_trace$/;"	v
g:gutentags_trace	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = 1$/;"	v
g:gutentags_trace	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = a:1$/;"	v
g:gutentags_trace	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = l:trace_backup$/;"	v
g:gutentags_trace	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_trace = !g:gutentags_trace$/;"	v
g:gutentags_trace	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:gutentags_use_jobs	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_use_jobs = get(g:, 'gutentags_use_jobs', has('job'))$/;"	v
g:javascript_plugin_flow	.vimrc	/^let g:javascript_plugin_flow = 1$/;"	v
g:javascript_plugin_jsdoc	.vimrc	/^let g:javascript_plugin_jsdoc = 1$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^  let g:lightline = { 'subseparator': { 'left': '>', 'right': '<' } }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' } }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': /;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom', 'modified': 'Modified' } }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'NotFound' } }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'NotFound' }, 'component_type': { 'custom'/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'g:lightline.Custom' } }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/expand.vim	/^  let g:lightline = {}$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^  let g:lightline = { 'component_type': { 'error': 'error', 'warning': 'warning' } }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^  let g:lightline = {$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^  let g:lightline = {}$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/link.vim	/^  let g:lightline = { 'component_type': { 'error': 'error', 'warning': 'warning' } }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/link.vim	/^  let g:lightline = {$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/link.vim	/^  let g:lightline = {}$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/mode.vim	/^  let g:lightline = { 'mode_map': { 'n': 'N' } }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/mode.vim	/^  let g:lightline = {}$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom' ] }, 'tab_component': { 'custom': 'custom' }/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom' ] }, 'tab_component_function': { 'custom': '/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom', 'filename' ], 'inactive': [ 'custom', 'cust/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'custom' ], 'inactive': [ 'tabnum', 'custom/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'custom', 'filename' ], 'inactive': [ 'tabn/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'filename' ], 'inactive': [ 'filename' ] } /;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^  let g:lightline = {}$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component': { 'custom1': 'custom1', 'custom2': 'custom2', 'custom3': 'cus/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1' }, 'component_function': { 'cus/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'compo/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1' } }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' } }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'com/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custo/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom2': 'Custom2' } }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^  let g:lightline = { 'enable': { 'tabline': 0 } }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^  let g:lightline = { 'enable': { 'tabline': 1 } }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^  let g:lightline = {}$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^  let g:lightline = { 'winwidth': 180 }$/;"	v
g:lightline	.config/nvim/bundle/lightline.vim/test/toggle.vim	/^  let g:lightline = {}$/;"	v
g:lightline	.config/nvim/configs/lightline.vim	/^let g:lightline = {$/;"	v
g:lightline#colorscheme#16color#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let g:lightline#colorscheme#16color#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#OldHope#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let g:lightline#colorscheme#OldHope#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#PaperColor#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_dark#palet/;"	v
g:lightline#colorscheme#PaperColor#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_light#pale/;"	v
g:lightline#colorscheme#PaperColor_dark#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let g:lightline#colorscheme#PaperColor_dark#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#PaperColor_light#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let g:lightline#colorscheme#PaperColor_light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let g:lightline#colorscheme#Tomorrow#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let g:lightline#colorscheme#Tomorrow_Night#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Blue#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Blue#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Bright#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Bright#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Eighties#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Eighties#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#darcula#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let g:lightline#colorscheme#darcula#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#default#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/default.vim	/^let g:lightline#colorscheme#default#palette = g:lightline#colorscheme#powerline#palette$/;"	v
g:lightline#colorscheme#deus#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let g:lightline#colorscheme#deus#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#jellybeans#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let g:lightline#colorscheme#jellybeans#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#landscape#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let g:lightline#colorscheme#landscape#palette = s:p$/;"	v
g:lightline#colorscheme#materia#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let g:lightline#colorscheme#materia#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#material#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let g:lightline#colorscheme#material#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#molokai#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let g:lightline#colorscheme#molokai#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#nord#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let g:lightline#colorscheme#nord#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#oceanicnext#palette	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let g:lightline#colorscheme#oceanicnext#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#oceanicnextlight#palette	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let g:lightline#colorscheme#oceanicnextlight#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#one#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let g:lightline#colorscheme#one#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#powerline#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let g:lightline#colorscheme#powerline#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#seoul256#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let g:lightline#colorscheme#seoul256#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#solarized#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let g:lightline#colorscheme#solarized#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#srcery_drk#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let g:lightline#colorscheme#srcery_drk#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#wombat#palette	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let g:lightline#colorscheme#wombat#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:loaded_ctrlp	.config/nvim/bundle/ctrlp.vim/plugin/ctrlp.vim	/^let g:loaded_ctrlp = 1$/;"	v
g:loaded_ctrlp_bookmarkdir	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let g:loaded_ctrlp_bookmarkdir = 1$/;"	v
g:loaded_ctrlp_buftag	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let g:loaded_ctrlp_buftag = 1$/;"	v
g:loaded_ctrlp_changes	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^let g:loaded_ctrlp_changes = 1$/;"	v
g:loaded_ctrlp_line	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^let g:loaded_ctrlp_line = 1$/;"	v
g:loaded_ctrlp_quickfix	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let g:loaded_ctrlp_quickfix = 1$/;"	v
g:loaded_ctrlp_tag	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^let g:loaded_ctrlp_tag = 1$/;"	v
g:loaded_ctrlp_undo	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let g:loaded_ctrlp_undo = 1$/;"	v
g:loaded_defx	.config/nvim/bundle/defx.nvim/plugin/defx.vim	/^let g:loaded_defx = 1$/;"	v
g:loaded_defx_icons	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let g:loaded_defx_icons = 1$/;"	v
g:loaded_fugitive	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gutentags	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_lightline	.config/nvim/bundle/lightline.vim/plugin/lightline.vim	/^let g:loaded_lightline = 1$/;"	v
g:oceanic_next_terminal_bold	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let g:oceanic_next_terminal_bold = get(g:, 'oceanic_next_terminal_bold', 0)$/;"	v
g:oceanic_next_terminal_bold	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let g:oceanic_next_terminal_bold = get(g:, 'oceanic_next_terminal_bold', 0)$/;"	v
g:oceanic_next_terminal_italic	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let g:oceanic_next_terminal_italic = get(g:, 'oceanic_next_terminal_italic', 0)$/;"	v
g:oceanic_next_terminal_italic	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let g:oceanic_next_terminal_italic = get(g:, 'oceanic_next_terminal_italic', 0)$/;"	v
g:rainbow_active	.vimrc	/^let g:rainbow_active = 1$/;"	v
g:syntastic_always_populate_loc_list	.vimrc	/^let g:syntastic_always_populate_loc_list = 1$/;"	v
g:syntastic_auto_loc_list	.vimrc	/^let g:syntastic_auto_loc_list = 1$/;"	v
g:syntastic_check_on_open	.vimrc	/^let g:syntastic_check_on_open = 1$/;"	v
g:syntastic_check_on_wq	.vimrc	/^let g:syntastic_check_on_wq = 0$/;"	v
g:terminal_color_0	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_0=s:base00[0]$/;"	v
g:terminal_color_0	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_0=s:base00[0]$/;"	v
g:terminal_color_1	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_1=s:base08[0]$/;"	v
g:terminal_color_1	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_1=s:base08[0]$/;"	v
g:terminal_color_10	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_10=s:base0B[0]$/;"	v
g:terminal_color_10	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_10=s:base0B[0]$/;"	v
g:terminal_color_11	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_11=s:base0A[0]$/;"	v
g:terminal_color_11	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_11=s:base0A[0]$/;"	v
g:terminal_color_12	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_12=s:base0D[0]$/;"	v
g:terminal_color_12	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_12=s:base0D[0]$/;"	v
g:terminal_color_13	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_13=s:base0E[0]$/;"	v
g:terminal_color_13	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_13=s:base0E[0]$/;"	v
g:terminal_color_14	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_14=s:base0C[0]$/;"	v
g:terminal_color_14	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_14=s:base0C[0]$/;"	v
g:terminal_color_15	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_15=s:base05[0]$/;"	v
g:terminal_color_15	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_15=s:base05[0]$/;"	v
g:terminal_color_2	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_2=s:base0B[0]$/;"	v
g:terminal_color_2	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_2=s:base0B[0]$/;"	v
g:terminal_color_3	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_3=s:base0A[0]$/;"	v
g:terminal_color_3	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_3=s:base0A[0]$/;"	v
g:terminal_color_4	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_4=s:base0D[0]$/;"	v
g:terminal_color_4	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_4=s:base0D[0]$/;"	v
g:terminal_color_5	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_5=s:base0E[0]$/;"	v
g:terminal_color_5	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_5=s:base0E[0]$/;"	v
g:terminal_color_6	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_6=s:base0C[0]$/;"	v
g:terminal_color_6	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_6=s:base0C[0]$/;"	v
g:terminal_color_7	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_7=s:base05[0]$/;"	v
g:terminal_color_7	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_7=s:base05[0]$/;"	v
g:terminal_color_8	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_8=s:base00[0]$/;"	v
g:terminal_color_8	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_8=s:base00[0]$/;"	v
g:terminal_color_9	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_9=s:base08[0]$/;"	v
g:terminal_color_9	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_9=s:base08[0]$/;"	v
g:terminal_color_background	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_background=s:base00[0]$/;"	v
g:terminal_color_background	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_background=s:base00[0]$/;"	v
g:terminal_color_foreground	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^let g:terminal_color_foreground=s:base10[0]$/;"	v
g:terminal_color_foreground	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^let g:terminal_color_foreground=s:base10[0]$/;"	v
g:virtual_scriptnames	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    let g:virtual_scriptnames = {}$/;"	v
g:virtual_scriptnames	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^  let g:virtual_scriptnames[temp] = amatch$/;"	v
g:vista#executive#ctags#support_json_format	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^let g:vista#executive#ctags#support_json_format = s:support_json_format$/;"	v
g:vista#executives	.config/nvim/bundle/vista.vim/autoload/vista.vim	/^let g:vista#executives = map($/;"	v
g:vista#renderer#ctags	.config/nvim/bundle/vista.vim/autoload/vista/renderer.vim	/^let g:vista#renderer#ctags = get(g:, 'vista#renderer#ctags', 'default')$/;"	v
g:vista#renderer#default#vlnum_offset	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^let g:vista#renderer#default#vlnum_offset = 3$/;"	v
g:vista#renderer#enable_icon	.config/nvim/bundle/vista.vim/autoload/vista/renderer.vim	/^let g:vista#renderer#enable_icon = get(g:, 'vista#renderer#enable_icon',$/;"	v
g:vista#renderer#icons	.config/nvim/bundle/vista.vim/autoload/vista/renderer.vim	/^let g:vista#renderer#icons = map(extend(s:icons, get(g:, 'vista#renderer#icons', {})), 'tolower(/;"	v
g:vista#types#uctags#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/lua.vim	/^let g:vista#types#uctags# = s:types$/;"	v
g:vista#types#uctags#ada#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ada.vim	/^let g:vista#types#uctags#ada# = s:types$/;"	v
g:vista#types#uctags#ant#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ant.vim	/^let g:vista#types#uctags#ant# = s:types$/;"	v
g:vista#types#uctags#asm#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/asm.vim	/^let g:vista#types#uctags#asm# = s:types$/;"	v
g:vista#types#uctags#aspvbs#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/aspvbs.vim	/^let g:vista#types#uctags#aspvbs# = s:types$/;"	v
g:vista#types#uctags#asy#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/asy.vim	/^let g:vista#types#uctags#asy# = s:types$/;"	v
g:vista#types#uctags#automake#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/automake.vim	/^let g:vista#types#uctags#automake# = s:types$/;"	v
g:vista#types#uctags#awk#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/awk.vim	/^let g:vista#types#uctags#awk# = s:types$/;"	v
g:vista#types#uctags#basic#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/basic.vim	/^let g:vista#types#uctags#basic# = s:types$/;"	v
g:vista#types#uctags#beta#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/beta.vim	/^let g:vista#types#uctags#beta# = s:types$/;"	v
g:vista#types#uctags#c#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/c.vim	/^let g:vista#types#uctags#c# = s:types$/;"	v
g:vista#types#uctags#clojure#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let g:vista#types#uctags#clojure# = s:types$/;"	v
g:vista#types#uctags#cobol#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cobol.vim	/^let g:vista#types#uctags#cobol# = s:types$/;"	v
g:vista#types#uctags#config#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/config.vim	/^let g:vista#types#uctags#config# = s:types$/;"	v
g:vista#types#uctags#cpp#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let g:vista#types#uctags#cpp# = s:types$/;"	v
g:vista#types#uctags#cs#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cs.vim	/^let g:vista#types#uctags#cs# = s:types$/;"	v
g:vista#types#uctags#css#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/css.vim	/^let g:vista#types#uctags#css# = s:types$/;"	v
g:vista#types#uctags#ctags#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let g:vista#types#uctags#ctags# = s:types$/;"	v
g:vista#types#uctags#d#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/d.vim	/^let g:vista#types#uctags#d# = s:types$/;"	v
g:vista#types#uctags#dosbatch#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/dosbatch.vim	/^let g:vista#types#uctags#dosbatch# = s:types$/;"	v
g:vista#types#uctags#eiffel#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let g:vista#types#uctags#eiffel# = s:types$/;"	v
g:vista#types#uctags#elm#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/elm.vim	/^let g:vista#types#uctags#elm# = s:types$/;"	v
g:vista#types#uctags#erlang#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let g:vista#types#uctags#erlang# = s:types$/;"	v
g:vista#types#uctags#fortran#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let g:vista#types#uctags#fortran# = s:types$/;"	v
g:vista#types#uctags#go#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/go.vim	/^let g:vista#types#uctags#go# = type_go$/;"	v
g:vista#types#uctags#html#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/html.vim	/^let g:vista#types#uctags#html# = s:types$/;"	v
g:vista#types#uctags#java#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/java.vim	/^let g:vista#types#uctags#java# = s:types$/;"	v
g:vista#types#uctags#javascript#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let g:vista#types#uctags#javascript# = s:types$/;"	v
g:vista#types#uctags#lisp#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/lisp.vim	/^let g:vista#types#uctags#lisp# = s:types$/;"	v
g:vista#types#uctags#make#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/make.vim	/^let g:vista#types#uctags#make# = s:types$/;"	v
g:vista#types#uctags#matlab#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/matlab.vim	/^let g:vista#types#uctags#matlab# = s:types$/;"	v
g:vista#types#uctags#mxml#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let g:vista#types#uctags#mxml# = s:types$/;"	v
g:vista#types#uctags#objc#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/objc.vim	/^let g:vista#types#uctags#objc# = s:types$/;"	v
g:vista#types#uctags#ocaml#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let g:vista#types#uctags#ocaml# = s:types$/;"	v
g:vista#types#uctags#pascal#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/pascal.vim	/^let g:vista#types#uctags#pascal# = s:types$/;"	v
g:vista#types#uctags#perl#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/perl.vim	/^let g:vista#types#uctags#perl# = s:types$/;"	v
g:vista#types#uctags#perl6#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/perl6.vim	/^let g:vista#types#uctags#perl6# = s:types6$/;"	v
g:vista#types#uctags#php#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/php.vim	/^let g:vista#types#uctags#php# = s:types$/;"	v
g:vista#types#uctags#proto#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/proto.vim	/^let g:vista#types#uctags#proto# = s:types$/;"	v
g:vista#types#uctags#python#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/python.vim	/^let g:vista#types#uctags#python# = s:types$/;"	v
g:vista#types#uctags#r#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/r.vim	/^let g:vista#types#uctags#r# = s:types$/;"	v
g:vista#types#uctags#rexx#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/rexx.vim	/^let g:vista#types#uctags#rexx# = s:types$/;"	v
g:vista#types#uctags#ruby#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let g:vista#types#uctags#ruby# = s:types$/;"	v
g:vista#types#uctags#rust#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/rust.vim	/^let g:vista#types#uctags#rust# = s:types$/;"	v
g:vista#types#uctags#scheme#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/scheme.vim	/^let g:vista#types#uctags#scheme# = s:types$/;"	v
g:vista#types#uctags#sh#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/sh.vim	/^let g:vista#types#uctags#sh# = s:types$/;"	v
g:vista#types#uctags#slang#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/slang.vim	/^let g:vista#types#uctags#slang# = s:types$/;"	v
g:vista#types#uctags#sml#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/sml.vim	/^let g:vista#types#uctags#sml# = s:types$/;"	v
g:vista#types#uctags#sql#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/sql.vim	/^let g:vista#types#uctags#sql# = s:types$/;"	v
g:vista#types#uctags#tcl#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/tcl.vim	/^let g:vista#types#uctags#tcl# = s:types$/;"	v
g:vista#types#uctags#tex#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/tex.vim	/^let g:vista#types#uctags#tex# = s:types$/;"	v
g:vista#types#uctags#vala#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vala.vim	/^  let g:vista#types#uctags#vala#.ctagsbin = 'anjuta-tags'$/;"	v
g:vista#types#uctags#vala#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vala.vim	/^let g:vista#types#uctags#vala# = s:types$/;"	v
g:vista#types#uctags#vera#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vera.vim	/^let g:vista#types#uctags#vera# = s:types$/;"	v
g:vista#types#uctags#verilog#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/verilog.vim	/^let g:vista#types#uctags#verilog# = s:types$/;"	v
g:vista#types#uctags#vhdl#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vhdl.vim	/^let g:vista#types#uctags#vhdl# = s:types$/;"	v
g:vista#types#uctags#vim#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vim.vim	/^let g:vista#types#uctags#vim# = s:types$/;"	v
g:vista#types#uctags#yacc#	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/yacc.vim	/^let g:vista#types#uctags#yacc# = s:types$/;"	v
g<Bar>	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> g<Bar> :<C-U>execute <SID>StageDelete(line('.'),v:count)<CR>$/;"	m
g<Bar>	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    xnoremap <buffer> <silent> g<Bar> :<C-U>execute <SID>StageDelete(line("'<"),line("'>")-line(/;"	m
g?	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> g?   :help fugitive-:Gblame<CR>$/;"	m
g?	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> g?   :help fugitive-mappings<CR>$/;"	m
gC	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> gC    :<C-U>exe 'Gpedit ' . <SID>fnameescape(<SID>ContainingCommi/;"	m
gO	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> gO    :<C-U>exe <SID>GF("vsplit")<CR>$/;"	m
gO	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> gO    :<C-U>vertical .,.+1Gblame<CR>$/;"	m
ga	aliases.sh	/^alias ga='git add'$/;"	a
gaa	aliases.sh	/^alias gaa='git add -A'$/;"	a
gap	.config/neofetch/config.conf	/^gap=3$/;"	k
gather_candidates	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/source.py	/^    def gather_candidates($/;"	m	class:Base
gather_candidates	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/source/file.py	/^    def gather_candidates($/;"	m	class:Source
gather_candidates	.config/nvim/bundle/defx.nvim/rplugin/python3/denite/source/defx/history.py	/^    def gather_candidates(self, context: dict):$/;"	m	class:Source
gather_candidates_recursive	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/defx.py	/^    def gather_candidates_recursive($/;"	m	class:Defx
gc	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> gc    :<C-U>exe 'Gpedit ' . <SID>fnameescape(<SID>ContainingCommi/;"	m
gc	aliases.sh	/^alias gc='git commit -m'$/;"	a
gca	aliases.sh	/^alias gca='git commit -a -v'$/;"	a
generateUuid	.config/nvim/bundle/coc.nvim/src/language-client/utils/uuid.ts	/^export function generateUuid(): string {$/;"	f
get	.config/nvim/bundle/defx-icons/rplugin/python3/defx/column/icons.py	/^    def get(self, context: Context, candidate: dict) -> str:$/;"	m	class:Column
get	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/column.py	/^    def get(self, context: Context,$/;"	m	class:Base
get	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/icon.py	/^    def get(self, context: Context,$/;"	m	class:Column
get	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/indent.py	/^    def get(self, context: Context,$/;"	m	class:Column
get	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/mark.py	/^    def get(self, context: Context,$/;"	m	class:Column
get	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/size.py	/^    def get(self, context: Context,$/;"	m	class:Column
get	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/time.py	/^    def get(self, context: Context,$/;"	m	class:Column
get	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/type.py	/^    def get(self, context: Context,$/;"	m	class:Column
getChangedPosition	.config/nvim/bundle/coc.nvim/src/util/position.ts	/^export function getChangedPosition(start: Position, edit: TextEdit): { line: number, character: /;"	f
getCharCodes	.config/nvim/bundle/coc.nvim/src/util/fuzzy.ts	/^export function getCharCodes(str: string): number[] {$/;"	f
getLocationListItem	.config/nvim/bundle/coc.nvim/src/diagnostic/util.ts	/^export function getLocationListItem(owner: string, bufnr: number, diagnostic: Diagnostic): Locat/;"	f
getLogFile	.config/nvim/bundle/coc.nvim/src/util/logger.ts	/^function getLogFile(): string {$/;"	f
getNameFromSeverity	.config/nvim/bundle/coc.nvim/src/diagnostic/util.ts	/^export function getNameFromSeverity(severity: DiagnosticSeverity): string {$/;"	f
getSeverityName	.config/nvim/bundle/coc.nvim/src/diagnostic/util.ts	/^export function getSeverityName(severity: DiagnosticSeverity): string {$/;"	f
getSeverityType	.config/nvim/bundle/coc.nvim/src/diagnostic/util.ts	/^export function getSeverityType(severity: DiagnosticSeverity): string {$/;"	f
getSymbolKind	.config/nvim/bundle/coc.nvim/src/util/convert.ts	/^export function getSymbolKind(kind: SymbolKind): string {$/;"	f
getValue	.config/nvim/bundle/coc.nvim/src/configuration/model.ts	/^  public getValue<V>(section: string): V {$/;"	m	class:ConfigurationModel
get_actions	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^    def get_actions(self) -> typing.Dict[str, ActionTable]:$/;"	m	class:Base
get_actions	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^    def get_actions(self) -> typing.Dict[str, ActionTable]:$/;"	m	class:Kind
get_candidate	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^        def get_candidate(self, args: typing.List[$/;"	m	class:DefxHandlers
get_candidate	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/rplugin.py	/^    def get_candidate(self) -> typing.Dict[str, typing.Union[str, bool]]:$/;"	m	class:Rplugin
get_candidate_pos	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def get_candidate_pos(self, path: Path, index: int) -> int:$/;"	m	class:View
get_cursor_candidate	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def get_cursor_candidate($/;"	m	class:View
get_latest_release	.config/nvim/bundle/coc.nvim/install.sh	/^get_latest_release() {$/;"	f
get_root_candidate	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/source.py	/^    def get_root_candidate($/;"	m	class:Base
get_root_candidate	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/defx.py	/^    def get_root_candidate(self) -> Candidate:$/;"	m	class:Defx
get_root_candidate	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/source/file.py	/^    def get_root_candidate($/;"	m	class:Source
get_selected_candidates	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def get_selected_candidates($/;"	m	class:View
get_with_variable_text	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/column.py	/^    def get_with_variable_text($/;"	m	class:Base
get_with_variable_text	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/filename.py	/^    def get_with_variable_text($/;"	m	class:Column
glob	.config/nvim/bundle/coc.nvim/package.json	/^    "glob": "^7.1.4",$/;"	s	object:dependencies
globalSetup	.config/nvim/bundle/coc.nvim/package.json	/^    "globalSetup": ".\/jest.js",$/;"	s	object:jest
global_defx	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^    global_defx = Rplugin(vim)$/;"	v
globals	.config/nvim/bundle/coc.nvim/package.json	/^    "globals": {$/;"	o	object:jest
gp	aliases.sh	/^alias gp='git push'$/;"	a
gpu_brand	.config/neofetch/config.conf	/^gpu_brand="on"$/;"	k
gpu_type	.config/neofetch/config.conf	/^gpu_type="all"$/;"	k
group	.config/nvim/bundle/coc.nvim/src/util/array.ts	/^export function group<T>(array: T[], size: number): T[][] {$/;"	f
gs	aliases.sh	/^alias gs='git status'$/;"	a
gtk2	.config/neofetch/config.conf	/^gtk2="on"$/;"	k
gtk3	.config/neofetch/config.conf	/^gtk3="on"$/;"	k
gtk_shorthand	.config/neofetch/config.conf	/^gtk_shorthand="off"$/;"	k
gutentags#add_job	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_job(module, tags_file, data) abort$/;"	f
gutentags#build_default_job_options	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#build_default_job_options(module) abort$/;"	f
gutentags#chdir	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#generate	.config/nvim/bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#cscope#init	.config/nvim/bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#cscope#on_job_exit	.config/nvim/bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#ctags#generate	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#ctags#init	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#ctags#on_job_exit	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#on_job_exit(job, exit_val) abort$/;"	f
gutentags#default_get_project_root	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_get_project_root(path) abort$/;"	f
gutentags#default_io_cb	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_io_cb(chan, msg) abort$/;"	f
gutentags#error	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#error(message)$/;"	f
gutentags#fake	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#find_job_index_by_data	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_data(module, data) abort$/;"	f
gutentags#find_job_index_by_tags_file	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_tags_file(module, tags_file) abort$/;"	f
gutentags#get_cachefile	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_job_data	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_data(module, job_idx) abort$/;"	f
gutentags#get_job_tags_file	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_tags_file(module, job_idx) abort$/;"	f
gutentags#get_plat_file	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	.config/nvim/bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#gtags_cscope#init	.config/nvim/bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	.config/nvim/bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#inprogress	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#make_args	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#make_args(cmd) abort$/;"	f
gutentags#normalizepath	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#remove_job	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job(module, job_idx) abort$/;"	f
gutentags#remove_job_by_data	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job_by_data(module, data) abort$/;"	f
gutentags#rescan	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#start_job	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#start_job(cmd, opts) abort$/;"	f
gutentags#statusline	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#statusline_cb	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline_cb(fmt_cb, ...) abort$/;"	f
gutentags#stripslash	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#toggletrace	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags#warning	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#warning(message)$/;"	f
gutentags_detect	.config/nvim/bundle/vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
h	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  h = 104,$/;"	e	enum:CharCode
handle_extension	.config/ranger/scope.sh	/^handle_extension() {$/;"	f
handle_fallback	.config/ranger/scope.sh	/^handle_fallback() {$/;"	f
handle_image	.config/ranger/scope.sh	/^handle_image() {$/;"	f
handle_mime	.config/ranger/scope.sh	/^handle_mime() {$/;"	f
hasOwnProperty	.config/nvim/bundle/coc.nvim/src/util/is.ts	/^const hasOwnProperty = Object.prototype.hasOwnProperty$/;"	C
health#coc#check	.config/nvim/bundle/coc.nvim/autoload/health/coc.vim	/^function! health#coc#check() abort$/;"	f
health#defx#check	.config/nvim/bundle/defx.nvim/autoload/health/defx.vim	/^function! health#defx#check() abort$/;"	f
hi	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^function! <sid>hi(group, fg, bg, attr, attrsp)$/;"	f
hi	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^function! <sid>hi(group, fg, bg, attr, attrsp)$/;"	f
highlight_commands	.config/nvim/bundle/defx-icons/rplugin/python3/defx/column/icons.py	/^    def highlight_commands(self) -> typing.List[str]:$/;"	m	class:Column
highlight_commands	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/column.py	/^    def highlight_commands(self) -> typing.List[str]:$/;"	m	class:Base
highlight_commands	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/filename.py	/^    def highlight_commands(self) -> typing.List[str]:$/;"	m	class:Column
highlight_commands	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/icon.py	/^    def highlight_commands(self) -> typing.List[str]:$/;"	m	class:Column
highlight_commands	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/mark.py	/^    def highlight_commands(self) -> typing.List[str]:$/;"	m	class:Column
highlight_commands	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/size.py	/^    def highlight_commands(self) -> typing.List[str]:$/;"	m	class:Column
highlight_commands	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/time.py	/^    def highlight_commands(self) -> typing.List[str]:$/;"	m	class:Column
highlight_commands	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/type.py	/^    def highlight_commands(self) -> typing.List[str]:$/;"	m	class:Column
homepage	.config/nvim/bundle/coc.nvim/package.json	/^  "homepage": "https:\/\/github.com\/neoclide\/coc.nvim#readme",$/;"	s
host	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "host": {$/;"	o	object:definitions.languageServerSocket.properties
http.proxy	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "http.proxy": {$/;"	o	object:properties
http.proxyStrictSSL	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "http.proxyStrictSSL": {$/;"	o	object:properties
https://example.com	.config/nvim/bundle/coc.nvim/src/__tests__/modules/settings.json	/^    "https:\/\/example.com": "*.yaml"$/;"	s	object:schema
i	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  i = 105,$/;"	e	enum:CharCode
i	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> i    :<C-U>exe <SID>BlameCommit("exe 'norm q'<Bar>edit")<CR>$/;"	m
i	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> i :<C-U>let b:fugitive_display_format -= v:count1<Bar>exe fug/;"	m
i	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> i :<C-U>execute <SID>StageIntend(v:count1)<CR>$/;"	m
icon	.config/nvim/bundle/defx-icons/rplugin/python3/defx/column/icons.py	/^    def icon(self, icon: str) -> str:$/;"	m	class:Column
iconMargin	awesome-theme/utils.lua	/^local function iconMargin(imageWidget)$/;"	f
icons	.config/nvim/bundle/vista.vim/syntax/vista.vim	/^let icons = join(values(g:vista#renderer#icons), '\\|')$/;"	v
icons	.config/nvim/bundle/vista.vim/syntax/vista_kind.vim	/^let icons = join(values(g:vista#renderer#icons), '\\|')$/;"	v
ignoredRootPaths	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {$/;"	o	object:definitions.languageServerBase.properties
ignoredRootPaths	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerCommand.properties
ignoredRootPaths	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerModule.properties
ignoredRootPaths	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerSocket.properties
ignoredRootPaths	.config/nvim/coc-settings.json	/^      "ignoredRootPaths": ["~"]$/;"	a	object:languageserver.bash
ignored_files	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    ignored_files: str = ''$/;"	v	class:Context
image_backend	.config/neofetch/config.conf	/^image_backend="ascii"$/;"	k
image_loop	.config/neofetch/config.conf	/^image_loop="off"$/;"	k
image_size	.config/neofetch/config.conf	/^image_size="auto"$/;"	k
image_source	.config/neofetch/config.conf	/^image_source="\/home\/dave\/.config\/neofetch\/nwc"$/;"	k
importHelpers	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "importHelpers": true,$/;"	b	object:compilerOptions
import_plugin	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/util.py	/^def import_plugin(path: Path, source: str,$/;"	f
imports	.ctags	/^--regex-typescript=\/^[ \\t]*import[ \\t]+([a-zA-Z0-9_]+)\/\\1\/I,imports\/$/;"	k	langdef:typescript
include	.config/nvim/bundle/coc.nvim/tsconfig.json	/^  "include": ["src"],$/;"	a
init	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def init(self, paths: typing.List[str],$/;"	m	class:View
init_channel	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^        def init_channel(self, args: typing.List[typing.Any]) -> None:$/;"	m	class:DefxHandlers
init_channel	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/rplugin.py	/^    def init_channel(self) -> None:$/;"	m	class:Rplugin
initializationOptions	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "initializationOptions": {$/;"	o	object:definitions.languageServerBase.properties
initializationOptions	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerCommand.properties
initializationOptions	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerModule.properties
initializationOptions	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerSocket.properties
initializationOptions	.config/nvim/coc-settings.json	/^      "initializationOptions": {$/;"	o	object:languageserver.ccls
initializationOptions	.config/nvim/coc-settings.json	/^      "initializationOptions": {},$/;"	o	object:languageserver.flow
inner_wrapper	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^        def inner_wrapper(view: View, defx: Defx, context: Context) -> None:$/;"	f	function:action.wrapper	file:
inner_wrapper	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^        def inner_wrapper(view: View, defx: Defx, context: Context) -> None:$/;"	f	function:action.wrapper	file:
inspect	arch/arch-install.lua	/^function inspect(table, prefix, depth)$/;"	f
install	.config/nvim/bundle/defx.nvim/Makefile	/^install: vim-themis$/;"	t
install	.config/ranger/plugins/ranger_devicons/Makefile	/^install:$/;"	t
installedModules	.config/nvim/bundle/coc.nvim/build/index.js	/^\/******\/ 	var installedModules = {};$/;"	v
interface	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "interface": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
interfaces	.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*interface[ \\t]+([a-zA-Z0-9_]+)\/\\2\/i,interfaces\/$/;"	k	langdef:typescript
intersect	.config/nvim/bundle/coc.nvim/src/util/array.ts	/^export function intersect<T>(array: T[], other: T[]): boolean {$/;"	f
ipc	.config/nvim/bundle/coc.nvim/src/language-client/index.ts	/^  ipc,$/;"	e	enum:TransportKind
isSingleLine	.config/nvim/bundle/coc.nvim/src/util/position.ts	/^export function isSingleLine(range: Range): boolean {$/;"	f
isVim	.config/nvim/bundle/coc.nvim/src/model/terminal.ts	/^const isVim = process.env.VIM_NODE_RPC == '1'$/;"	C
isWindows	.config/nvim/bundle/coc.nvim/src/model/mru.ts	/^const isWindows = process.platform == 'win32'$/;"	C
isWindows	arch/ansi-colours.lua	/^local function isWindows()$/;"	f
isuri	.config/nvim/bundle/coc.nvim/package.json	/^    "isuri": "^2.0.3",$/;"	s	object:dependencies
item	.config/nvim/bundle/coc.nvim/src/provider/hoverManager.ts	/^      const item = items[i]$/;"	C	method:HoverManager.register
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.additionalSchemes
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.filetypes
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.ignoredRootPaths
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.rootPatterns
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerCommand.properties.args
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerModule.properties.args
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerModule.properties.execArgv
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.preferences.formatOnSaveFiletypes
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.preferences.rootPatterns
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.around.disableSyntaxes
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.buffer.disableSyntaxes
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.disableSyntaxes
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.ignorePatterns
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.triggerCharacters
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.trimSameExts
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.list.source.outline.ctagsFilestypes
items	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.workspace.ignoredFiletypes
j	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  j = 106,$/;"	e	enum:CharCode
javascript.validate.enable	.config/nvim/coc-settings.json	/^  "javascript.validate.enable": false,$/;"	b
jellybeans	.config/nvim/bundle/lightline.vim/README.md	/^### jellybeans$/;"	S
jest	.config/nvim/bundle/coc.nvim/package.json	/^    "jest": "24.8.0",$/;"	s	object:devDependencies
jest	.config/nvim/bundle/coc.nvim/package.json	/^  "jest": {$/;"	o
js	.ctags	/^--langdef=js$/;"	l
js:.ts	.ctags	/^--langdef=js:.ts$/;"	l
js:.tsx	.ctags	/^--langdef=js:.tsx$/;"	l
jsonc-parser	.config/nvim/bundle/coc.nvim/package.json	/^    "jsonc-parser": "^2.1.0",$/;"	s	object:dependencies
k	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  k = 107,$/;"	e	enum:CharCode
kernel_shorthand	.config/neofetch/config.conf	/^kernel_shorthand="on"$/;"	k
keyword	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "keyword": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
keywords	.config/nvim/bundle/coc.nvim/package.json	/^  "keywords": [$/;"	a
l	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  l = 108,$/;"	e	enum:CharCode
landscape	.config/nvim/bundle/lightline.vim/README.md	/^### landscape$/;"	S
languageServerBase	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "languageServerBase": {$/;"	o	object:definitions
languageServerCommand	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "languageServerCommand": {$/;"	o	object:definitions
languageServerModule	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "languageServerModule": {$/;"	o	object:definitions
languageServerSocket	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "languageServerSocket": {$/;"	o	object:definitions
languageserver	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "languageserver": {$/;"	o	object:properties
languageserver	.config/nvim/bundle/coc.nvim/src/__tests__/client/server/testFileWatcher.js	/^const languageserver = require('vscode-languageserver')$/;"	C
languageserver	.config/nvim/coc-settings.json	/^  "languageserver": {$/;"	o
last	.config/nvim/bundle/coc.nvim/src/util/throttle.ts	/^  let last = 0$/;"	v
leader	.config/compton/compton.conf	/^detect-client-leader = true;$/;"	k
length	.config/nvim/bundle/defx-icons/rplugin/python3/defx/column/icons.py	/^    def length(self, context: Context) -> int:$/;"	m	class:Column
length	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/column.py	/^    def length(self, context: Context) -> int:$/;"	m	class:Base
length	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/filename.py	/^    def length(self, context: Context) -> int:$/;"	m	class:Column
length	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/icon.py	/^    def length(self, context: Context) -> int:$/;"	m	class:Column
length	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/indent.py	/^    def length(self, context: Context) -> int:$/;"	m	class:Column
length	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/mark.py	/^    def length(self, context: Context) -> int:$/;"	m	class:Column
length	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/size.py	/^    def length(self, context: Context) -> int:$/;"	m	class:Column
length	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/time.py	/^    def length(self, context: Context) -> int:$/;"	m	class:Column
length	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/type.py	/^    def length(self, context: Context) -> int:$/;"	m	class:Column
let	.config/nvim/bundle/coc.nvim/src/util/throttle.ts	/^  let last = 0$/;"	v
let	.config/nvim/bundle/coc.nvim/src/util/throttle.ts	/^  let rtn$/;"	v
let	.config/nvim/bundle/coc.nvim/src/util/throttle.ts	/^  let timeoutID$/;"	v
lib	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "lib": ["es2017", "es2018"],$/;"	a	object:compilerOptions
license	.config/nvim/bundle/coc.nvim/package.json	/^  "license": "MIT",$/;"	s
lightline	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^  augroup lightline$/;"	a
lightline	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^  augroup lightline-disable$/;"	a
lightline	.config/nvim/bundle/lightline.vim/plugin/lightline.vim	/^augroup lightline$/;"	a
lightline#colorscheme	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#colorscheme() abort$/;"	f
lightline#colorscheme#background	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^  function! lightline#colorscheme#background() abort$/;"	f
lightline#colorscheme#fill	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#fill(p) abort$/;"	f
lightline#colorscheme#flatten	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#flatten(p) abort$/;"	f
lightline#colortable#gui2cui	.config/nvim/bundle/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui(rgb, fallback) abort$/;"	f
lightline#colortable#name_to_rgb	.config/nvim/bundle/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#name_to_rgb(name) abort$/;"	f
lightline#concatenate	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#concatenate(xs, right) abort$/;"	f
lightline#disable	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#disable() abort$/;"	f
lightline#enable	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#enable() abort$/;"	f
lightline#error	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#error(msg) abort$/;"	f
lightline#highlight	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#highlight(...) abort$/;"	f
lightline#init	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#init() abort$/;"	f
lightline#link	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#link(...) abort$/;"	f
lightline#mode	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#mode() abort$/;"	f
lightline#onetab	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#onetab(n, active) abort$/;"	f
lightline#palette	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#palette() abort$/;"	f
lightline#statusline	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#statusline(inactive) abort$/;"	f
lightline#tab#filename	.config/nvim/bundle/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#filename(n) abort$/;"	f
lightline#tab#modified	.config/nvim/bundle/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#modified(n) abort$/;"	f
lightline#tab#readonly	.config/nvim/bundle/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#readonly(n) abort$/;"	f
lightline#tab#tabnum	.config/nvim/bundle/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#tabnum(n) abort$/;"	f
lightline#tabline	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#tabline() abort$/;"	f
lightline#tabs	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#tabs() abort$/;"	f
lightline#toggle	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#toggle() abort$/;"	f
lightline#update	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#update() abort$/;"	f
lightline#update_disable	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#update_disable() abort$/;"	f
lightline#update_once	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#update_once() abort$/;"	f
lightline.Custom	.config/nvim/bundle/lightline.vim/test/expand.vim	/^  function! g:lightline.Custom()$/;"	f
lightline.vim	.config/nvim/bundle/lightline.vim/README.md	/^# lightline.vim$/;"	c
lint	.config/nvim/bundle/coc.nvim/package.json	/^    "lint": "tslint -c tslint.json -p .",$/;"	s	object:scripts
lint	.config/nvim/bundle/defx.nvim/Makefile	/^lint:$/;"	t
linterOptions	.config/nvim/bundle/coc.nvim/tslint.json	/^  "linterOptions": {$/;"	o
list.autoResize	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.autoResize": {$/;"	o	object:properties
list.extendedSearchMode	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.extendedSearchMode": {$/;"	o	object:properties
list.indicator	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.indicator": {$/;"	o	object:properties
list.insertMappings	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.insertMappings": {$/;"	o	object:properties
list.insertMappings	.config/nvim/coc-settings.json	/^  "list.insertMappings": {$/;"	o
list.limitLines	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.limitLines": {$/;"	o	object:properties
list.maxHeight	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.maxHeight": {$/;"	o	object:properties
list.maxPreviewHeight	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.maxPreviewHeight": {$/;"	o	object:properties
list.nextKeymap	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.nextKeymap": {$/;"	o	object:properties
list.normalMappings	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.normalMappings": {$/;"	o	object:properties
list.normalMappings	.config/nvim/coc-settings.json	/^  "list.normalMappings": {$/;"	o
list.previewHighlightGroup	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.previewHighlightGroup": {$/;"	o	object:properties
list.previewSplitRight	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.previewSplitRight": {$/;"	o	object:properties
list.previousKeymap	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.previousKeymap": {$/;"	o	object:properties
list.selectedSignText	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.selectedSignText": {$/;"	o	object:properties
list.signOffset	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.signOffset": {$/;"	o	object:properties
list.source.outline.ctagsFilestypes	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "list.source.outline.ctagsFilestypes": {$/;"	o	object:properties
listItems	.config/nvim/bundle/coc.nvim/src/__tests__/list/sources.test.ts	/^let listItems: ListItem[] = []$/;"	v
listed	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    listed: bool = False$/;"	v	class:Context
log	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^    return function log(str) {$/;"	f	function:log
log	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^let log = (function () {$/;"	f
log4js	.config/nvim/bundle/coc.nvim/package.json	/^    "log4js": "^4.3.1",$/;"	s	object:dependencies
logger	.config/nvim/bundle/coc.nvim/bin/server.js	/^const logger = require('..\/lib\/util\/logger')('server')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/attach.ts	/^const logger = require('.\/util\/logger')('attach')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/commands.ts	/^const logger = require('.\/util\/logger')('commands')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/completion/complete.ts	/^const logger = require('..\/util\/logger')('completion-complete')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/completion/floating.ts	/^const logger = require('..\/util\/logger')('floating')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/completion/index.ts	/^const logger = require('..\/util\/logger')('completion')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/configuration/index.ts	/^const logger = require('..\/util\/logger')('configurations')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/configuration/shape.ts	/^const logger = require('..\/util\/logger')('configuration-shape')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/configuration/util.ts	/^const logger = require('..\/util\/logger')('configuration-util')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/diagnostic/buffer.ts	/^const logger = require('..\/util\/logger')('diagnostic-buffer')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/diagnostic/collection.ts	/^const logger = require('..\/util\/logger')('diagnostic-collection')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/diagnostic/manager.ts	/^const logger = require('..\/util\/logger')('diagnostic-manager')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/events.ts	/^const logger = require('.\/util\/logger')('events')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/handler/codelens.ts	/^const logger = require('..\/util\/logger')('codelens')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/handler/colors.ts	/^const logger = require('..\/util\/logger')('colors')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/handler/documentHighlight.ts	/^const logger = require('..\/util\/logger')('documentHighlight')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/handler/highlighter.ts	/^const logger = require('..\/util\/logger')('highlighter')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/handler/index.ts	/^const logger = require('..\/util\/logger')('Handler')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/language-client/client.ts	/^const logger = require('..\/util\/logger')('language-client-client')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/language-client/configuration.ts	/^const logger = require('..\/util\/logger')('languageclient-configuration')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/language-client/index.ts	/^const logger = require('..\/util\/logger')('language-client-index')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/language-client/workspaceFolders.ts	/^const logger = require('..\/util\/logger')('language-client-workspaceFolder')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/languages.ts	/^const logger = require('.\/util\/logger')('languages')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/list/basic.ts	/^const logger = require('..\/util\/logger')('list-basic')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/list/history.ts	/^const logger = require('..\/util\/logger')('list-history')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/list/manager.ts	/^const logger = require('..\/util\/logger')('list-manager')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/list/mappings.ts	/^const logger = require('..\/util\/logger')('list-mappings')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/list/prompt.ts	/^const logger = require('..\/util\/logger')('list-prompt')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/list/source/actions.ts	/^const logger = require('..\/..\/util\/logger')('list-actions')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/list/source/diagnostics.ts	/^const logger = require('..\/..\/util\/logger')('list-symbols')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/list/source/extensions.ts	/^const logger = require('..\/..\/util\/logger')('list-extensions')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/list/source/location.ts	/^const logger = require('..\/..\/util\/logger')('list-location')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/list/source/outline.ts	/^const logger = require('..\/..\/util\/logger')('list-symbols')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/list/source/symbols.ts	/^const logger = require('..\/..\/util\/logger')('list-symbols')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/list/ui.ts	/^const logger = require('..\/util\/logger')('list-ui')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/model/chars.ts	/^const logger = require('..\/util\/logger')('model-chars')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/model/document.ts	/^const logger = require('..\/util\/logger')('model-document')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/model/fileSystemWatcher.ts	/^const logger = require('..\/util\/logger')('filesystem-watcher')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/model/floatBuffer.ts	/^const logger = require('..\/util\/logger')('model-floatBuffer')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/model/floatFactory.ts	/^const logger = require('..\/util\/logger')('model-float')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/model/memos.ts	/^const logger = require('..\/util\/logger')('model-memos')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/model/outputChannel.ts	/^const logger = require('..\/util\/logger')("outpubChannel")$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/model/resolver.ts	/^const logger = require('..\/util\/logger')('model-resolver')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/model/source-vim.ts	/^const logger = require('..\/util\/logger')('model-source-vim')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/model/source.ts	/^const logger = require('..\/util\/logger')('model-source')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/model/status.ts	/^const logger = require('..\/util\/logger')('model-status')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/model/willSaveHandler.ts	/^const logger = require('..\/util\/logger')('willSaveHandler')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/plugin.ts	/^const logger = require('.\/util\/logger')('plugin')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/provider/codeActionmanager.ts	/^const logger = require('..\/util\/logger')('codeActionManager')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/provider/declarationManager.ts	/^const logger = require('..\/util\/logger')('definitionManager')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/provider/definitionManager.ts	/^const logger = require('..\/util\/logger')('definitionManager')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/provider/manager.ts	/^const logger = require('..\/util\/logger')('provider-manager')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/provider/onTypeFormatManager.ts	/^const logger = require('..\/util\/logger')('onTypeFormatManager')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/services.ts	/^const logger = require('.\/util\/logger')('services')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/snippets/manager.ts	/^const logger = require('..\/util\/logger')('snippets-manager')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/snippets/parser.ts	/^const logger = require('..\/util\/logger')('snippets-parser')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/snippets/session.ts	/^const logger = require('..\/util\/logger')('snippets-session')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/snippets/snippet.ts	/^const logger = require('..\/util\/logger')('snippets-snipet')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/snippets/variableResolve.ts	/^const logger = require('..\/util\/logger')('snippets-variable')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/source/around.ts	/^const logger = require('..\/util\/logger')('source-around')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/source/buffer.ts	/^const logger = require('..\/util\/logger')('source-buffer')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/source/file.ts	/^const logger = require('..\/util\/logger')('source-file')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/sources.ts	/^const logger = require('.\/util\/logger')('sources')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/util/complete.ts	/^const logger = require('.\/logger')('util-complete')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/util/decorator.ts	/^const logger = require('.\/logger')('util-decorator')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/util/diff.ts	/^const logger = require('.\/logger')('util-diff')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/util/extensions.ts	/^const logger = require('.\/logger')('extensions')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/util/fs.ts	/^const logger = require('.\/logger')('util-fs')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/util/highlight.ts	/^const logger = require('.\/logger')('util-highlights')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/util/index.ts	/^const logger = require('.\/logger')('util-index')$/;"	C
logger	.config/nvim/bundle/coc.nvim/src/watchman.ts	/^const logger = require('.\/util\/logger')('watchman')$/;"	C
lua	.config/nvim/coc-settings.json	/^    "lua": {$/;"	o	object:languageserver
m	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  m = 109,$/;"	e	enum:CharCode
ma	.config/nvim/mappings/defx.vim	/^	nnoremap <silent><buffer><expr> ma$/;"	m
main	.config/nvim/bundle/coc.nvim/package.json	/^  "main": ".\/lib\/index.js",$/;"	s
main	.config/nvim/bundle/oceanic-next/test/style-components.js	/^    main: 'palevioletred',$/;"	p	class:Button.defaultProps.theme
maximum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "maximum": 100,$/;"	n	object:properties.suggest.highPrioritySourceLimit
maximum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "maximum": 100,$/;"	n	object:properties.suggest.lowPrioritySourceLimit
maximum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "maximum": 300,$/;"	n	object:properties.suggest.triggerCompletionWait
maximum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "maximum": 500,$/;"	n	object:properties.signature.triggerSignatureWait
maximum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "maximum": 5000,$/;"	n	object:properties.suggest.timeout
members	.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*(public|private)[ \\t]+(static)?[ \\t]*([a-zA-Z0-9_/;"	k	langdef:typescript
memory_display	.config/neofetch/config.conf	/^memory_display="off"$/;"	k
memory_percent	.config/neofetch/config.conf	/^memory_percent="off"$/;"	k
method	.config/compton/compton.conf	/^glx-swap-method = "undefined";$/;"	k
method	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "method": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
method	.ctags	/^--regex-js=\/([A-Za-z0-9_$]+)\\[["']([A-Za-z0-9_$]+)["']\\][ \\t]*=[ \\t]*function[ \\t]*\\(\/\\/;"	k	langdef:js:.tsx
method	.ctags	/^--regex-js=\/['"]*([A-Za-z$][A-Za-z0-9_$]+)['"]*:[ \\t]*function[ \\t]*\\(\/\\1\/m,method\/$/;"	k	langdef:js:.tsx
minimatch	.config/nvim/bundle/coc.nvim/package.json	/^    "minimatch": "^3.0.4",$/;"	s	object:dependencies
minimum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "minimum": 1,$/;"	n	object:properties.suggest.highPrioritySourceLimit
minimum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "minimum": 1,$/;"	n	object:properties.suggest.lowPrioritySourceLimit
minimum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "minimum": 50,$/;"	n	object:properties.signature.triggerSignatureWait
minimum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "minimum": 50,$/;"	n	object:properties.suggest.triggerCompletionWait
minimum	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "minimum": 500,$/;"	n	object:properties.suggest.timeout
mm	.config/nvim/mappings/defx.vim	/^	nnoremap <silent><buffer><expr> mm$/;"	m
mode	.config/nvim/bundle/coc.nvim/webpack.config.js	/^  mode: 'none',$/;"	p	class:module.exports
module	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "module": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
module	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "module": {$/;"	o	object:definitions.languageServerModule.properties
module	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "module": "commonjs",$/;"	s	object:compilerOptions
moduleFileExtensions	.config/nvim/bundle/coc.nvim/package.json	/^    "moduleFileExtensions": [$/;"	a	object:jest
moduleResolution	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "moduleResolution": "node",$/;"	s	object:compilerOptions
modules	.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*module[ \\t]+([a-zA-Z0-9_]+)\/\\2\/n,modules\/$/;"	k	langdef:typescript
mpc_args	.config/neofetch/config.conf	/^mpc_args=()$/;"	k
music_player	.config/neofetch/config.conf	/^music_player="auto"$/;"	k
n	.config/nvim/bundle/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.n = function(module) {$/;"	f	function:__webpack_require__
n	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  n = 110,$/;"	e	enum:CharCode
name	.config/nvim/bundle/coc.nvim/package.json	/^  "name": "coc.nvim",$/;"	s
name	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/coc-json/package.json	/^  "name": "coc-json",$/;"	s
name	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/global/package.json	/^  "name": "global",$/;"	s
name	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/local/package.json	/^  "name": "local",$/;"	s
name	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^  "name": "test",$/;"	s
name	.config/nvim/bundle/coc.nvim/src/__tests__/list/mappings.test.ts	/^  public name = 'test'$/;"	p	class:TestList
name	.config/nvim/bundle/coc.nvim/src/__tests__/list/worker.test.ts	/^  public name = 'task'$/;"	p	class:TaskList
name	.config/nvim/bundle/coc.nvim/src/list/basic.ts	/^  public name: string$/;"	C
name	.config/nvim/bundle/coc.nvim/src/list/source/lists.ts	/^  public readonly name = 'lists'$/;"	p	class:LinksList
name	.config/ranger/plugins/devicons_linemode.py	/^  name = "devicons"$/;"	v	class:DevIconsLinemode
name	.config/ranger/plugins/devicons_linemode.py	/^  name = "filename"$/;"	v	class:DevIconsLinemodeFile
name	.config/ranger/plugins/ranger_devicons/__init__.py	/^  name = "devicons"$/;"	v	class:DevIconsLinemode
name	.config/ranger/plugins/ranger_devicons/__init__.py	/^  name = "filename"$/;"	v	class:DevIconsLinemodeFile
net	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^let net = require('net');$/;"	v
new	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    new: bool = False$/;"	v	class:Context
newText	.config/nvim/bundle/coc.nvim/src/util/position.ts	/^  let { range, newText } = edit$/;"	v
nextWordIndex	.config/nvim/bundle/coc.nvim/src/completion/match.ts	/^function nextWordIndex(start = 0, codes: number[]): number {$/;"	f
no-console	.config/nvim/bundle/coc.nvim/tslint.json	/^    "no-console": true$/;"	b	object:rules
no-invalid-template-strings	.config/nvim/bundle/coc.nvim/tslint.json	/^    "no-invalid-template-strings": false,$/;"	b	object:rules
no-unused-expression	.config/nvim/bundle/coc.nvim/tslint.json	/^    "no-unused-expression": false,$/;"	b	object:rules
noImplicitAny	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "noImplicitAny": false,$/;"	b	object:compilerOptions
noImplicitThis	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "noImplicitThis": true,$/;"	b	object:compilerOptions
noUnusedLocals	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "noUnusedLocals": false,$/;"	b	object:compilerOptions
noUnusedParameters	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "noUnusedParameters": false,$/;"	b	object:compilerOptions
node	.config/nvim/bundle/coc.nvim/webpack.config.js	/^  node: {$/;"	c	class:module.exports
npm-run-all	.config/nvim/bundle/coc.nvim/package.json	/^    "npm-run-all": "^4.1.5",$/;"	s	object:devDependencies
numeric_key	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/sort.py	/^    def numeric_key(v: str) -> typing.List[typing.Any]:$/;"	f	function:_filename	file:
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/completion/basic.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/completion/float.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/completion/sources.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/list/location.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/list/manager.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/attach.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/colors.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/completion.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/diagnosticBuffer.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/diagnosticManager.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/document.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/extensions.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/floatBuffer.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/floatFactory.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/outputChannel.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/plugin.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/sources.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/task.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/terminal.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/util.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/modules/workspace.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/manager.test.ts	/^let nvim: Neovim$/;"	v
nvim	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/session.test.ts	/^let nvim: Neovim$/;"	v
o	.config/nvim/bundle/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnP/;"	f	function:__webpack_require__
o	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  o = 111,$/;"	e	enum:CharCode
o	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> o    :<C-U>exe <SID>BlameCommit((&splitbelow ? "botright" : "/;"	m
o	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> o     :<C-U>.,.+1Gblame<CR>$/;"	m
o	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> o     :<C-U>exe <SID>GF("split")<CR>$/;"	m
object	.ctags	/^--regex-js=\/([A-Za-z0-9._$]+)\\[["']([A-Za-z0-9_$]+)["']\\][ \\t]*=[ \\t]*\\{\/\\1\\.\\2\/o,obj/;"	k	langdef:js:.tsx
object	.ctags	/^--regex-js=\/['"]*([A-Za-z0-9_$]+)['"]*[ \\t]*:[ \\t]*\\{\/\\1\/o,object\/$/;"	k	langdef:js:.tsx
object	.ctags	/^--regex-js=\/\\.([A-Za-z0-9._$]+)[ \\t]*=[ \\t]*\\{\/\\1\/o,object\/$/;"	k	langdef:js:.tsx
objectProto	.config/nvim/bundle/coc.nvim/src/util/lodash.ts	/^const objectProto = Object.prototype$/;"	C
objs	.config/nvim/bundle/coc.nvim/src/__tests__/modules/array.test.ts	/^    let objs: { [key: string]: number[] }[] = [{ x: [1, 2] }, { y: [3, 4] }, { z: [5, 6] }]$/;"	v
off	.config/nvim/bundle/oceanic-next/test/test.js	/^  off(e, fn) {$/;"	m	class:SoundCloudAudio
on	.config/nvim/bundle/oceanic-next/test/test.js	/^  on(e, fn) {$/;"	m	class:SoundCloudAudio
on_init	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/column.py	/^    def on_init(self, context: Context) -> None:$/;"	m	class:Base
on_init	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/filename.py	/^    def on_init(self, context: Context) -> None:$/;"	m	class:Column
on_init	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/time.py	/^    def on_init(self, context: Context) -> None:$/;"	m	class:Column
on_init	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/type.py	/^    def on_init(self, context: Context) -> None:$/;"	m	class:Column
on_init	.config/nvim/bundle/defx.nvim/rplugin/python3/denite/source/defx/history.py	/^    def on_init(self, context: dict):$/;"	m	class:Source
on_redraw	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/column.py	/^    def on_redraw(self, context: Context) -> None:$/;"	m	class:Base
one	.config/nvim/bundle/lightline.vim/README.md	/^### one$/;"	S
oneOf	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "oneOf": [$/;"	a	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$
opacity	.config/compton/compton.conf	/^active-opacity = 1;$/;"	k
opacity	.config/compton/compton.conf	/^detect-client-opacity = true;$/;"	k
opacity	.config/compton/compton.conf	/^frame-opacity = 1;$/;"	k
opacity	.config/compton/compton.conf	/^inactive-opacity = 1;$/;"	k
opacity	.config/compton/compton.conf	/^menu-opacity = 1;$/;"	k
opacity	.config/compton/compton.conf	/^shadow-opacity = 0.1;$/;"	k
open	aliases.sh	/^alias open='xdg-open'$/;"	a
open_tree	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def open_tree(self, path: Path, index: int, max_level: int = 0) -> None:$/;"	m	class:View
operator	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "operator": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
opti	.config/compton/compton.conf	/^sw-opti = true;$/;"	k
originalWriteSync	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^    let originalWriteSync = fs.writeSync;$/;"	v
os_arch	.config/neofetch/config.conf	/^os_arch="on"$/;"	k
outDir	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "outDir": "lib",$/;"	s	object:compilerOptions
output	.config/nvim/bundle/coc.nvim/webpack.config.js	/^  output: {$/;"	c	class:module.exports
output	z.sh	/^            function output(matches, best_match, common) {$/;"	f
overlay	.config/compton/compton.conf	/^paint-on-overlay = true;$/;"	k
override	.config/compton/compton.conf	/^inactive-opacity-override = false;$/;"	k
p	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    const p = new SnippetParser()$/;"	C	function:assertText
p	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  p = 112,$/;"	e	enum:CharCode
p	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> p    :<C-U>exe <SID>Open((&splitbelow ? "botright" : "topleft/;"	m
p	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> p     :<C-U>.,.+2Gblame<CR>$/;"	m
p	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> p     :<C-U>exe <SID>GF("pedit")<CR>$/;"	m
p	.config/nvim/bundle/vista.vim/ftplugin/vista.vim	/^nnoremap <buffer> <silent> p     :<c-u>call vista#cursor#TogglePreview()<CR>$/;"	m
p	.config/nvim/bundle/vista.vim/ftplugin/vista_kind.vim	/^nnoremap <buffer> <silent> p    :<c-u>call vista#cursor#TogglePreview()<CR>$/;"	m
package_managers	.config/neofetch/config.conf	/^package_managers="on"$/;"	k
params	.config/nvim/bundle/coc.nvim/src/__tests__/client/converter.test.ts	/^    let params = cv.asCompletionParams(createDocument(), Position.create(0, 0), { triggerKind: C/;"	v
params	.config/nvim/bundle/coc.nvim/src/__tests__/client/converter.test.ts	/^    let params = cv.asReferenceParams(createDocument(), Position.create(0, 0), { includeDeclarat/;"	v
params	.config/nvim/bundle/coc.nvim/src/__tests__/client/converter.test.ts	/^    let params = cv.asTextDocumentPositionParams(createDocument(), Position.create(0, 0))$/;"	v
path	.config/nvim/bundle/coc.nvim/webpack.config.js	/^    path: path.resolve(__dirname, 'build'),$/;"	p	class:module.exports.output
path	.config/nvim/bundle/coc.nvim/webpack.config.js	/^const path = require('path')$/;"	C
patternProperties	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "patternProperties": {$/;"	o	object:properties.languageserver
patterns	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^        "patterns": [$/;"	a	object:contributes.rootPatterns.0
pipe	.config/nvim/bundle/coc.nvim/src/language-client/index.ts	/^  pipe,$/;"	e	enum:TransportKind
pixmap	.config/compton/compton.conf	/^glx-no-rebind-pixmap = true;$/;"	k
placeholder	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, placeholder transforms', function() {$/;"	C	function:assertText
plugins	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "plugins": []$/;"	a	object:compilerOptions
plugins	.config/nvim/bundle/coc.nvim/webpack.config.js	/^  plugins: [$/;"	p	class:module.exports
port	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "port": {$/;"	o	object:definitions.languageServerSocket.properties
pos	.config/nvim/bundle/coc.nvim/src/__tests__/modules/position.test.ts	/^    let pos = Position.create(0, 0)$/;"	v
pos	.config/nvim/bundle/coc.nvim/src/__tests__/modules/position.test.ts	/^    let pos = Position.create(0, 1)$/;"	v
possible	.config/compton/compton.conf	/^unredir-if-possible = true;$/;"	k
powerline (default)	.config/nvim/bundle/lightline.vim/README.md	/^### powerline (default)$/;"	S
powerlineBarWidget	awesome-theme/widgets/powerline-widgets.lua	/^function powerlineBarWidget(widgets, direction)$/;"	f
pp	.config/nvim/mappings/defx.vim	/^	nnoremap <silent><buffer><expr> pp$/;"	m
preload	.config/nvim/bundle/oceanic-next/test/test.js	/^  preload(streamUrl) {$/;"	m	class:SoundCloudAudio
prepare	.config/nvim/bundle/coc.nvim/package.json	/^    "prepare": "npm-run-all clean build",$/;"	s	object:scripts
prev_bufnr	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    prev_bufnr: int = 0$/;"	v	class:Context
prev_winid	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    prev_winid: int = 0$/;"	v	class:Context
print_msg	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def print_msg(self, expr: typing.Any) -> None:$/;"	m	class:View
profile	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    profile: bool = False$/;"	v	class:Context
properties	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerBase
properties	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerCommand
properties	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerModule
properties	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerSocket
properties	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:properties.suggest.completionItemKindLabels
properties	.config/nvim/bundle/coc.nvim/data/schema.json	/^  "properties": {$/;"	o
properties	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^      "properties": {$/;"	o	object:contributes.configuration
property	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "property": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
provideSelectionRanges	.config/nvim/bundle/coc.nvim/src/language-client/selectionRange.ts	/^  provideSelectionRanges?: (this: void, document: TextDocument, positions: Position[], token: Ca/;"	p	interface:SelectionRangeProviderMiddleware
public	.config/nvim/bundle/coc.nvim/src/commands.ts	/^  public execute(...args: any[]): void | Promise<any> {$/;"	C
public	.config/nvim/bundle/coc.nvim/src/list/basic.ts	/^  public name: string$/;"	C
public_ip_host	.config/neofetch/config.conf	/^public_ip_host="http:\/\/ident.me"$/;"	k
public_ip_timeout	.config/neofetch/config.conf	/^public_ip_timeout=2$/;"	k
push	.config/nvim/bundle/coc.nvim/src/model/db.ts	/^  public async push(key: string, data: number | null | boolean | string | { [index: string]: any/;"	m	class:DB
q	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  q = 113,$/;"	e	enum:CharCode
q	.config/nvim/bundle/defx.nvim/autoload/defx/exrename.vim	/^  nnoremap <buffer><silent> q :<C-u>call <SID>exit(bufnr('%'))<CR>$/;"	m
q	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> q    :exe substitute(bufwinnr(b:fugitive_blamed_bufnr).' winc/;"	m
q	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> q    :<C-U>bdelete<CR>$/;"	m
q	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> q :<C-U>if bufnr('$') == 1<Bar>quit<Bar>else<Bar>bdelete<Bar>endi/;"	m
q	.config/nvim/bundle/vista.vim/ftplugin/vista.vim	/^nnoremap <buffer> <silent> q     :close<CR>$/;"	m
q	.config/nvim/bundle/vista.vim/ftplugin/vista_kind.vim	/^nnoremap <buffer> <silent> q    :close<CR>$/;"	m
q	.config/nvim/mappings/defx.vim	/^	nnoremap <silent><buffer><expr> q$/;"	m
quit	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def quit(self) -> None:$/;"	m	class:View
r	.config/nvim/bundle/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.r = function(exports) {$/;"	f	function:__webpack_require__
r	.config/nvim/bundle/coc.nvim/src/__tests__/modules/position.test.ts	/^    let r = Range.create(0, 0, 0, 0)$/;"	v
r	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  r = 114,$/;"	e	enum:CharCode
ra	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ra    :<C-U>Grebase --abort<CR>$/;"	m
radius	.config/compton/compton.conf	/^shadow-radius = 5;$/;"	k
range	.config/nvim/bundle/coc.nvim/src/util/position.ts	/^  let { range, newText } = edit$/;"	v
rangeInRange	.config/nvim/bundle/coc.nvim/src/util/position.ts	/^export function rangeInRange(r: Range, range: Range): boolean {$/;"	f
rangeOverlap	.config/nvim/bundle/coc.nvim/src/util/position.ts	/^export function rangeOverlap(r: Range, range: Range): boolean {$/;"	f
rate	.config/compton/compton.conf	/^refresh-rate = 0;$/;"	k
rbs	aliases.sh	/^  alias rbs='reset && bin\/server'$/;"	a
rd	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rd    :<C-U>exe 'Grebase --interactive<C-R>=substitute(<SID>Squas/;"	m
re	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> re    :<C-U>Grebase --edit-todo<CR>$/;"	m
readable	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/util.py	/^def readable(path: Path) -> bool:$/;"	f
redraw	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def redraw(self, is_force: bool = False) -> None:$/;"	m	class:View
reference	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "reference": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
refresh_rate	.config/neofetch/config.conf	/^refresh_rate="off"$/;"	k
register	.config/nvim/bundle/coc.nvim/src/provider/codeLensManager.ts	/^  public register(selector: DocumentSelector, provider: CodeLensProvider): Disposable {$/;"	m	class:CodeLensManager
register	.config/nvim/bundle/coc.nvim/src/provider/documentColorManager.ts	/^  public register(selector: DocumentSelector, provider: DocumentColorProvider): Disposable {$/;"	m	class:DocumentColorManager
register	.config/nvim/bundle/coc.nvim/src/provider/documentHighlightManager.ts	/^  public register(selector: DocumentSelector, provider: DocumentHighlightProvider): Disposable {$/;"	m	class:DocumentHighlightManager
register	.config/nvim/bundle/coc.nvim/src/provider/documentLinkManager.ts	/^  public register(selector: DocumentSelector, provider: DocumentLinkProvider): Disposable {$/;"	m	class:DocumentLinkManager
register	.config/nvim/bundle/coc.nvim/src/provider/documentSymbolManager.ts	/^  public register(selector: DocumentSelector, provider: DocumentSymbolProvider): Disposable {$/;"	m	class:DocumentSymbolManager
register	.config/nvim/bundle/coc.nvim/src/provider/foldingRangeManager.ts	/^  public register(selector: DocumentSelector, provider: FoldingRangeProvider): Disposable {$/;"	m	class:FoldingRangeManager
register	.config/nvim/bundle/coc.nvim/src/provider/formatManager.ts	/^  public register(selector: DocumentSelector,$/;"	m	class:FormatManager
register	.config/nvim/bundle/coc.nvim/src/provider/formatRangeManager.ts	/^  public register(selector: DocumentSelector,$/;"	m	class:FormatRangeManager
register	.config/nvim/bundle/coc.nvim/src/provider/hoverManager.ts	/^  public register(selector: DocumentSelector, provider: HoverProvider): Disposable {$/;"	m	class:HoverManager
register	.config/nvim/bundle/coc.nvim/src/provider/implementatioinManager.ts	/^  public register(selector: DocumentSelector, provider: ImplementationProvider): Disposable {$/;"	m	class:ImplementationManager
register	.config/nvim/bundle/coc.nvim/src/provider/rangeManager.ts	/^  public register(selector: DocumentSelector, provider: SelectionRangeProvider): Disposable {$/;"	m	class:SelectionRangeManager
register	.config/nvim/bundle/coc.nvim/src/provider/referenceManager.ts	/^  public register(selector: DocumentSelector, provider: ReferenceProvider): Disposable {$/;"	m	class:ReferenceManager
register	.config/nvim/bundle/coc.nvim/src/provider/renameManager.ts	/^  public register(selector: DocumentSelector, provider: RenameProvider): Disposable {$/;"	m	class:RenameManager
register	.config/nvim/bundle/coc.nvim/src/provider/signatureManager.ts	/^  public register(selector: DocumentSelector, provider: SignatureHelpProvider, triggerCharacters/;"	m	class:SignatureManager
register	.config/nvim/bundle/coc.nvim/src/provider/typeDefinitionManager.ts	/^  public register(selector: DocumentSelector, provider: TypeDefinitionProvider): Disposable {$/;"	m	class:TypeDefinitionManager
register	.config/nvim/bundle/coc.nvim/src/provider/workspaceSymbolsManager.ts	/^  public register(selector: DocumentSelector, provider: WorkspaceSymbolProvider): Disposable {$/;"	m	class:WorkspaceSymbolManager
release	.config/nvim/bundle/coc.nvim/package.json	/^    "release": "pkg . --out-path .\/build"$/;"	s	object:scripts
replaceCodes	arch/ansi-colours.lua	/^local function replaceCodes(str)$/;"	f
repository	.config/nvim/bundle/coc.nvim/package.json	/^  "repository": {$/;"	o
requireRootPattern	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "requireRootPattern": {$/;"	o	object:definitions.languageServerBase.properties
requireRootPattern	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerCommand.properties
requireRootPattern	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerModule.properties
requireRootPattern	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerSocket.properties
requireRootPattern	.config/nvim/coc-settings.json	/^      "requireRootPattern": true,$/;"	b	object:languageserver.flow
required	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	a	object:definitions.languageServerCommand
required	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	a	object:definitions.languageServerModule
required	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	a	object:definitions.languageServerSocket
res	.config/nvim/bundle/coc.nvim/src/__tests__/client/converter.test.ts	/^    let res = cv.asSaveTextDocumentParams(createDocument(), true)$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/client/converter.test.ts	/^    let res = cv.asVersionedTextDocumentIdentifier(createDocument())$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/client/converter.test.ts	/^    let res = cv.asWillSaveTextDocumentParams({ document: createDocument(), reason: TextDocument/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/modules/array.test.ts	/^    let res = arrays.lastIndex([1, 2, 3], x => x < 3)$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/modules/diff.test.ts	/^    let res = diffLines('a\\n', 'a\\nb\\n')$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/modules/diff.test.ts	/^    let res = diffLines('a\\n', 'b\\n')$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/modules/diff.test.ts	/^    let res = diffLines('a\\n\\n', 'a\\n')$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/modules/diff.test.ts	/^    let res = diffLines('a\\n\\n\\n', 'a\\n')$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/modules/diff.test.ts	/^    let res = diffLines('a\\n\\n\\nb', 'a\\n\\nb')$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/modules/diff.test.ts	/^    let res = patchLine('foo', 'bar foo bar')$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/modules/score.test.ts	/^    let res = getMatchResult('LICENSES\/preferred\/MIT', 'lsit')$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/modules/score.test.ts	/^    let res = getMatchResult('\/coc.nvim\/Coc.txt', 'coc', 'Coc.txt')$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/modules/score.test.ts	/^    let res = getMatchResult('\/coc.nvim\/cdoxc.txt', 'coc', 'cdoxc.txt')$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/modules/score.test.ts	/^    let res = getMatchResult('\/coc.nvim\/coc.txt', 'coc', 'coc.txt')$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/modules/score.test.ts	/^    let res = getMatchResult('\/foob\/baxr\/xyz', 'fbx')$/;"	v
res	.config/nvim/bundle/coc.nvim/src/__tests__/modules/score.test.ts	/^    let res = getMatchResult('foobarzyx', 'fbx')$/;"	v
res	.config/nvim/bundle/coc.nvim/webpack.config.js	/^let res = cp.execSync('git rev-parse HEAD', {encoding: 'utf8'})$/;"	v
reset	aliases.sh	/^alias reset='echo -e "\\e[3J" && reset'$/;"	a
resolveJsonModule	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "resolveJsonModule": true,$/;"	b	object:compilerOptions
result	.config/nvim/bundle/coc.nvim/src/util/object.ts	/^  const result: any = Array.isArray(obj) ? [] : {}$/;"	C	function:deepClone
resume	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    resume: bool = False$/;"	v	class:Context
revealOutputChannelOn	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {$/;"	o	object:definitions.languageServerBase.properties
revealOutputChannelOn	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerCommand.properties
revealOutputChannelOn	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerModule.properties
revealOutputChannelOn	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerSocket.properties
revision	.config/nvim/bundle/coc.nvim/webpack.config.js	/^let revision = res.slice(0, 10)$/;"	v
rf	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rf    :<C-U>Grebase --autosquash<C-R>=substitute(<SID>SquashArgum/;"	m
ri	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ri    :<C-U>Grebase --interactive<C-R>=substitute(<SID>SquashArgu/;"	m
rimraf	.config/nvim/bundle/coc.nvim/package.json	/^    "rimraf": "^2.6.3",$/;"	s	object:devDependencies
rk	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rk    :<C-U>exe 'Grebase --interactive<C-R>=substitute(<SID>Squas/;"	m
rm	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rm    :<C-U>exe 'Grebase --interactive<C-R>=substitute(<SID>Squas/;"	m
root	.config/nvim/bundle/coc.nvim/src/__tests__/modules/mru.test.ts	/^const root = os.homedir()$/;"	C
rootPatterns	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "rootPatterns": {$/;"	o	object:definitions.languageServerBase.properties
rootPatterns	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerCommand.properties
rootPatterns	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerModule.properties
rootPatterns	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerSocket.properties
rootPatterns	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^    "rootPatterns": [$/;"	a	object:contributes
rootPatterns	.config/nvim/coc-settings.json	/^      "rootPatterns": [".ccls", "compile_commands.json", ".vim\/", ".git\/", ".hg\/"],$/;"	a	object:languageserver.ccls
rootPatterns	.config/nvim/coc-settings.json	/^      "rootPatterns": [".flowconfig"]$/;"	a	object:languageserver.flow
root_marker	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    root_marker: str = ''$/;"	v	class:Context
rp	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rp    :<C-U>Grebase --interactive @{push}<CR>$/;"	m
rr	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rr    :<C-U>Grebase --continue<CR>$/;"	m
rs	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rs    :<C-U>Grebase --skip<CR>$/;"	m
rtn	.config/nvim/bundle/coc.nvim/src/util/throttle.ts	/^  let rtn$/;"	v
ru	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ru    :<C-U>Grebase --interactive @{upstream}<CR>$/;"	m
rules	.config/nvim/bundle/coc.nvim/tslint.json	/^  "rules": {$/;"	o
runtime	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "runtime": {$/;"	o	object:definitions.languageServerModule.properties
rw	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rw    :<C-U>exe 'Grebase --interactive<C-R>=substitute(<SID>Squas/;"	m
rx	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> rx    :<C-U>exe 'Grebase --interactive<C-R>=substitute(<SID>Squas/;"	m
s	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  s = 115,$/;"	e	enum:CharCode
s	.config/nvim/bundle/vista.vim/ftplugin/vista.vim	/^nnoremap <buffer> <silent> s     :<c-u>call vista#Sort()<CR>$/;"	m
s	.config/nvim/bundle/vista.vim/ftplugin/vista_kind.vim	/^nnoremap <buffer> <silent> s    :<c-u>call vista#Sort()<CR>$/;"	m
s	.config/nvim/mappings/defx.vim	/^  nnoremap <silent><buffer><expr> s$/;"	m
s:AcceptSelection	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:AcceptSelection(action)$/;"	f
s:AddHeader	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:AddHeader(key, value) abort$/;"	f
s:AddSection	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:AddSection(label, lines, ...) abort$/;"	f
s:Aliases	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Aliases(dir) abort$/;"	f
s:AlignSource	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:AlignSource() abort$/;"	f
s:Append	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:Append(line, rows, depth) abort$/;"	f
s:AppendChild	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:AppendChild(line, rows, depth) abort$/;"	f
s:ApplyAppend	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:ApplyAppend(line, row, rows) abort$/;"	f
s:ApplyAutoUpdate	.config/nvim/bundle/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:ApplyAutoUpdate() abort$/;"	f
s:ApplyClose	.config/nvim/bundle/vista.vim/autoload/vista/floating.vim	/^function! s:ApplyClose() abort$/;"	f
s:ApplyExecute	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:ApplyExecute(bang, fpath) abort$/;"	f
s:ApplyExtracted	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:ApplyExtracted() abort$/;"	f
s:ApplyHighlight	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:ApplyHighlight(lnum, ensure_visible, ...) abort$/;"	f
s:ApplyJump	.config/nvim/bundle/vista.vim/autoload/vista/jump.vim	/^function! s:ApplyJump(lnum) abort$/;"	f
s:ApplyRun	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:ApplyRun(cmd) abort$/;"	f
s:ApplyRun	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:ApplyRun(opts, Hi) abort$/;"	f
s:ApplyRunAsync	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:ApplyRunAsync(cmd) abort$/;"	f
s:Assemble	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:Assemble(line, depth) abort$/;"	f
s:AsyncRequest	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! s:AsyncRequest(name, args) abort$/;"	f
s:AutoReloadStatus	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:AutoReloadStatus(...) abort$/;"	f
s:AutoUpdate	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^function! s:AutoUpdate(_fpath) abort$/;"	f
s:AutoUpdate	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
s:AutoUpdate	.config/nvim/bundle/vista.vim/autoload/vista/executive/lcn.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
s:AutoUpdate	.config/nvim/bundle/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
s:AutoUpdate	.config/nvim/bundle/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
s:Autocmd	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! s:Autocmd(...) abort$/;"	f
s:BlameCommand	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommand(line1, line2, range, count, bang, mods, reg, arg, args) abort$/;"	f
s:BlameCommit	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommit(cmd, ...) abort$/;"	f
s:BlameJump	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
s:BlameSyntax	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
s:BlobTemp	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlobTemp(url) abort$/;"	f
s:BlurStatus	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlurStatus() abort$/;"	f
s:BrowseCommand	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BrowseCommand(line1, line2, range, count, bang, mods, reg, arg, args) abort$/;"	f
s:BufName	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BufName(var) abort$/;"	f
s:BuildCmd	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:BuildCmd(file) abort$/;"	f
s:BuildPrompt	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:BuildPrompt(upd)$/;"	f
s:CalculatePosition	.config/nvim/bundle/vista.vim/autoload/vista/floating.vim	/^function! s:CalculatePosition(lines) abort$/;"	f
s:Call	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! s:Call(method, args)$/;"	f
s:CanAutoReloadStatus	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:CanAutoReloadStatus() abort$/;"	f
s:Cb	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^  function! s:Cb() closure$/;"	f
s:Cb	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^function! s:Cb(error, response) abort$/;"	f
s:Cd	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Cd(...) abort$/;"	f
s:ChannelSet	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^function! s:ChannelSet(dict, key, val)$/;"	f
s:ClearAugroups	.config/nvim/bundle/vista.vim/autoload/vista/sidebar.vim	/^function! s:ClearAugroups(...) abort$/;"	f
s:ClearOtherEvents	.config/nvim/bundle/vista.vim/autoload/vista/autocmd.vim	/^function! s:ClearOtherEvents(group) abort$/;"	f
s:Close	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Close()$/;"	f
s:CloseCustomFuncs	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CloseCustomFuncs()$/;"	f
s:CloseOnCursorMoved	.config/nvim/bundle/vista.vim/autoload/vista/floating.vim	/^function! s:CloseOnCursorMoved() abort$/;"	f
s:CloseOnWinEnter	.config/nvim/bundle/vista.vim/autoload/vista/floating.vim	/^function! s:CloseOnWinEnter() abort$/;"	f
s:ClosePopup	.config/nvim/bundle/vista.vim/autoload/vista/popup.vim	/^function! s:ClosePopup() abort$/;"	f
s:CodeActionFromSelected	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! s:CodeActionFromSelected(type)$/;"	f
s:CommandList	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! s:CommandList(...) abort$/;"	f
s:CommitCommand	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitCommand(line1, line2, range, count, bang, mods, reg, arg, args, ...) abort$/;"	f
s:CommitComplete	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
s:Compare	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:Compare(s1, s2) abort$/;"	f
s:Compare	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:Compare(s1, s2) abort$/;"	f
s:Compare	.config/nvim/bundle/vista.vim/autoload/vista/renderer/kind.vim	/^function! s:Compare(i1, i2) abort$/;"	f
s:CompareAge	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:CompareAge(mine, theirs) abort$/;"	f
s:ConfigTimestamps	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigTimestamps(dir, dict) abort$/;"	f
s:ContainWhitespaceOnly	.config/nvim/bundle/vista.vim/autoload/vista/renderer/kind.vim	/^function! s:ContainWhitespaceOnly(str) abort$/;"	f
s:ContainingCommit	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ContainingCommit() abort$/;"	f
s:CreateNewFile	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CreateNewFile(...)$/;"	f
s:CurTypeName	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CurTypeName()$/;"	f
s:DescendantsOf	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:DescendantsOf(candidates, root_line, scope) abort$/;"	f
s:DescendantsOfRoot	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:DescendantsOfRoot(candidates, root_line) abort$/;"	f
s:DetectFileType	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:DetectFileType(type, ft)$/;"	f
s:Diff	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Diff(vert,keepfocus,...) abort$/;"	f
s:Dir	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Dir(...) abort$/;"	f
s:DirArg	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DirArg(path) abort$/;"	f
s:DirCommitFile	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCommitFile(path) abort$/;"	f
s:DirComplete	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DirComplete(A, L, P) abort$/;"	f
s:DirRev	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DirRev(url) abort$/;"	f
s:Disable	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! s:Disable() abort$/;"	f
s:Dispatch	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
s:Dispatch	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^function! s:Dispatch(F, ...) abort$/;"	f
s:Dispatch	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:Dispatch(F, ...) abort$/;"	f
s:Display	.config/nvim/bundle/vista.vim/autoload/vista/floating.vim	/^function! s:Display(msg) abort$/;"	f
s:DisplayInFloatingWin	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:DisplayInFloatingWin(...) abort$/;"	f
s:Do	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Do(action, visual) abort$/;"	f
s:DoStageStaged	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageStaged(record) abort$/;"	f
s:DoStageUnstaged	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstaged(record) abort$/;"	f
s:DoStageUnstagedHeading	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstagedHeading(heading) abort$/;"	f
s:DoToggleHeadHeader	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHeadHeader(value) abort$/;"	f
s:DoToggleStaged	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStaged(record) abort$/;"	f
s:DoToggleStagedHeading	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStagedHeading(...) abort$/;"	f
s:DoToggleUnpulled	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulled(record) abort$/;"	f
s:DoToggleUnpulledHeading	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulledHeading(heading) abort$/;"	f
s:DoToggleUnpushed	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushed(record) abort$/;"	f
s:DoToggleUnpushedHeading	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushedHeading(heading) abort$/;"	f
s:DoToggleUnstaged	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstaged(record) abort$/;"	f
s:DoToggleUnstagedHeading	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstagedHeading(...) abort$/;"	f
s:DoUnstageStaged	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStaged(record) abort$/;"	f
s:DoUnstageStagedHeading	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStagedHeading(heading) abort$/;"	f
s:DoUnstageUnstaged	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnstaged(record) abort$/;"	f
s:DotRelative	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DotRelative(path) abort$/;"	f
s:Echo	.config/nvim/bundle/vista.vim/autoload/vista/error.vim	/^function! s:Echo(group, msg) abort$/;"	f
s:EchoInCmdline	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:EchoInCmdline(msg, tag) abort$/;"	f
s:EchoScope	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:EchoScope(scope) abort$/;"	f
s:Echon	.config/nvim/bundle/vista.vim/autoload/vista/error.vim	/^function! s:Echon(group, msg) abort$/;"	f
s:Enable	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! s:Enable()$/;"	f
s:EnsureExists	.config/nvim/bundle/vista.vim/autoload/vista/source.vim	/^function! s:EnsureExists() abort$/;"	f
s:Execute	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^function! s:Execute(bang, should_display) abort$/;"	f
s:Execute	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:Execute(bang, should_display) abort$/;"	f
s:Execute	.config/nvim/bundle/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:Execute() abort$/;"	f
s:ExitIfSingleCandidate	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ExitIfSingleCandidate()$/;"	f
s:Expand	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Expand(rev) abort$/;"	f
s:ExpandVar	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVar(other, var, flags, esc) abort$/;"	f
s:ExtensionList	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! s:ExtensionList(...) abort$/;"	f
s:Extract	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^function! s:Extract(symbols) abort$/;"	f
s:ExtractLinewise	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:ExtractLinewise(raw_data) abort$/;"	f
s:FindMaxLen	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:FindMaxLen() abort$/;"	f
s:FindNearestMethodOrFunction	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:FindNearestMethodOrFunction(_timer) abort$/;"	f
s:FinishCommit	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
s:ForceUpdate	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ForceUpdate()$/;"	f
s:Format	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Format(val) abort$/;"	f
s:FormatFile	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatFile(dict) abort$/;"	f
s:FormatFromSelected	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! s:FormatFromSelected(type)$/;"	f
s:FormatLog	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatLog(dict) abort$/;"	f
s:FormatRebase	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatRebase(dict) abort$/;"	f
s:GF	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
s:Generate	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Generate(rev, ...) abort$/;"	f
s:GenericAutoUpdate	.config/nvim/bundle/vista.vim/autoload/vista/autocmd.vim	/^function! s:GenericAutoUpdate(fpath) abort$/;"	f
s:GenericStopTimer	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:GenericStopTimer(timer) abort$/;"	f
s:GetAvaliableExecutives	.config/nvim/bundle/vista.vim/autoload/vista/debugging.vim	/^function! s:GetAvaliableExecutives() abort$/;"	f
s:GetCustomCmd	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:GetCustomCmd(ft) abort$/;"	f
s:GetExplicitExecutive	.config/nvim/bundle/vista.vim/autoload/vista/sidebar.vim	/^function! s:GetExplicitExecutive() abort$/;"	f
s:GetGlobalVariables	.config/nvim/bundle/vista.vim/autoload/vista/debugging.vim	/^function! s:GetGlobalVariables() abort$/;"	f
s:GetInfoUnderCursor	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:GetInfoUnderCursor() abort$/;"	f
s:GetLanguageSpecificOptition	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:GetLanguageSpecificOptition(filetype) abort$/;"	f
s:GetTrailingLnum	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:GetTrailingLnum() abort$/;"	f
s:GetVisibility	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:GetVisibility(line) abort$/;"	f
s:GitCommand	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:GitCommand(line1, line2, range, count, bang, mods, reg, arg, args) abort$/;"	f
s:GlobComplete	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:GlobComplete(lead, pattern) abort$/;"	f
s:GlobPath	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:GlobPath(dirs, depth)$/;"	f
s:GlobalChange	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! s:GlobalChange(dict, key, val)$/;"	f
s:Grep	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
s:GrepComplete	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepComplete(A, L, P) abort$/;"	f
s:Handler	.config/nvim/bundle/vista.vim/autoload/vista/executive/lcn.vim	/^function! s:Handler(output) abort$/;"	f
s:Handler	.config/nvim/bundle/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:Handler(_server, _req_id, _type, data) abort$/;"	f
s:HasAvaliableServers	.config/nvim/bundle/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:HasAvaliableServers() abort$/;"	f
s:HasVlnum	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:HasVlnum() abort$/;"	f
s:HeadingWhitespaces	.config/nvim/bundle/vista.vim/autoload/vista/fold.vim	/^function! s:HeadingWhitespaces(line) abort$/;"	f
s:HiTag	.config/nvim/bundle/vista.vim/autoload/vista/popup.vim	/^function! s:HiTag() abort$/;"	f
s:Highlight	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:Highlight() abort$/;"	f
s:HighlightNearestTag	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:HighlightNearestTag(_timer) abort$/;"	f
s:InitCustomFuncs	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:InitCustomFuncs()$/;"	f
s:Insert	.config/nvim/bundle/vista.vim/autoload/vista/parser/ctags.vim	/^function! s:Insert(container, kind, picked) abort$/;"	f
s:Insert	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:Insert(container, key, line) abort$/;"	f
s:InstallOptions	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! s:InstallOptions(...)abort$/;"	f
s:IntoTemp	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:IntoTemp(...) abort$/;"	f
s:IsBuiltin	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:IsBuiltin()$/;"	f
s:IsFileUri	.config/nvim/bundle/vista.vim/autoload/vista/parser/lsp.vim	/^function! s:IsFileUri(uri) abort$/;"	f
s:IsHeader	.config/nvim/bundle/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:IsHeader(cur_line, next_line) abort$/;"	f
s:IsUsable	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:IsUsable(cache, fpath) abort$/;"	f
s:KeyLoop	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:KeyLoop()$/;"	f
s:Keywordprg	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Keywordprg() abort$/;"	f
s:Kind2Symbol	.config/nvim/bundle/vista.vim/autoload/vista/parser/lsp.vim	/^function! s:Kind2Symbol(kind) abort$/;"	f
s:LoadData	.config/nvim/bundle/vista.vim/autoload/vista/parser/ctags.vim	/^function! s:LoadData(container, line) abort$/;"	f
s:Log	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Log(cmd, bang, line1, line2, ...) abort$/;"	f
s:MapNorms	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapNorms()$/;"	f
s:MapSpecs	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapSpecs()$/;"	f
s:MarkToOpen	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MarkToOpen()$/;"	f
s:MatchIt	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchIt(items, pat, limit, exc)$/;"	f
s:MatchedItems	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchedItems(items, pat, limit)$/;"	f
s:Merge	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Merge(cmd, bang, mods, args, ...) abort$/;"	f
s:MessageCfile	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:MessageCfile(...) abort$/;"	f
s:Move	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Move(force, rename, destination) abort$/;"	f
s:NavigateUp	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:NavigateUp(count) abort$/;"	f
s:NewWindow	.config/nvim/bundle/vista.vim/autoload/vista/sidebar.vim	/^function! s:NewWindow() abort$/;"	f
s:NextTopLevelLnum	.config/nvim/bundle/vista.vim/autoload/vista/jump.vim	/^function! s:NextTopLevelLnum() abort$/;"	f
s:OnExit	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^  function! s:OnExit(status) closure$/;"	f
s:OnExtensionInstalled	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^    function! s:OnExtensionInstalled(status, ...) closure$/;"	f
s:OnInstalled	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^  function! s:OnInstalled(status, ...) closure$/;"	f
s:OnUpdated	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^  function! s:OnUpdated(status, ...) closure$/;"	f
s:Open	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Open()$/;"	f
s:Open	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Open(cmd, bang, mods, arg, args) abort$/;"	f
s:OpenConfig	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! s:OpenConfig()$/;"	f
s:OpenMulti	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenMulti(...)$/;"	f
s:OpenNoMarks	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenNoMarks(md, line)$/;"	f
s:OpenParse	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:OpenParse(args) abort$/;"	f
s:OpenPopup	.config/nvim/bundle/vista.vim/autoload/vista/popup.vim	/^function! s:OpenPopup(lnum, tag) abort$/;"	f
s:Owner	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Owner(path, ...) abort$/;"	f
s:PREFIX	.config/nvim/bundle/defx.nvim/autoload/defx/exrename.vim	/^let s:PREFIX = has('win32') ? '[exrename]' : '*exrename*'$/;"	v
s:ParseTagfield	.config/nvim/bundle/vista.vim/autoload/vista/parser/ctags.vim	/^function! s:ParseTagfield(tagfields) abort$/;"	f
s:PathInfo	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:PathInfo(url) abort$/;"	f
s:PlatformSlash	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:PlatformSlash(path) abort$/;"	f
s:Prepare	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Prepare(...) abort$/;"	f
s:PrepareContainer	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^function! s:PrepareContainer() abort$/;"	f
s:PrepareContainer	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:PrepareContainer() abort$/;"	f
s:PreparePathArgs	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:PreparePathArgs(cmd, dir, literal) abort$/;"	f
s:PrependFpath	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! s:PrependFpath(lines) abort$/;"	f
s:PrevTopLevelLnum	.config/nvim/bundle/vista.vim/autoload/vista/jump.vim	/^function! s:PrevTopLevelLnum() abort$/;"	f
s:ProjectRun	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:ProjectRun(...) abort$/;"	f
s:ProjectionistDetect	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ProjectionistDetect() abort$/;"	f
s:PrtAdd	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtAdd(char)$/;"	f
s:PrtBS	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtBS()$/;"	f
s:PrtClear	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClear()$/;"	f
s:PrtClearCache	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClearCache()$/;"	f
s:PrtCurEnd	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurEnd()$/;"	f
s:PrtCurLeft	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurLeft()$/;"	f
s:PrtCurRight	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurRight()$/;"	f
s:PrtCurStart	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurStart()$/;"	f
s:PrtDelete	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDelete()$/;"	f
s:PrtDeleteEnt	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteEnt()$/;"	f
s:PrtDeleteMRU	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteMRU()$/;"	f
s:PrtDeleteWord	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteWord()$/;"	f
s:PrtExit	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExit()$/;"	f
s:PrtExpandDir	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExpandDir()$/;"	f
s:PrtFocusMap	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtFocusMap(char)$/;"	f
s:PrtHistory	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtHistory(...)$/;"	f
s:PrtInsert	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtInsert(...)$/;"	f
s:PrtSelectJump	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectJump(char)$/;"	f
s:PrtSelectMove	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectMove(dir)$/;"	f
s:PrtSwitcher	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSwitcher()$/;"	f
s:QueryLog	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:QueryLog(refspec) abort$/;"	f
s:ReadCommand	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ReadCommand(line1, line2, range, count, bang, mods, reg, arg, args) abort$/;"	f
s:ReadComplete	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ReadComplete(A,L,P) abort$/;"	f
s:RealParentOf	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:RealParentOf(candidate) abort$/;"	f
s:RebaseClean	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseClean(file) abort$/;"	f
s:RebaseEdit	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseEdit(cmd, dir) abort$/;"	f
s:RebaseSequenceAborter	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseSequenceAborter() abort$/;"	f
s:RehighlightBlame	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
s:Relative	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Relative(...) abort$/;"	f
s:ReloadStatus	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatus(...) abort$/;"	f
s:Remote	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Remote(dir) abort$/;"	f
s:RemoteComplete	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
s:Remove	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Remove(after, force) abort$/;"	f
s:RemoveVisibility	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^  function! s:RemoveVisibility(tag) abort$/;"	f
s:RenameComplete	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:RenameComplete(A,L,P) abort$/;"	f
s:Render	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Render(lines, pat)$/;"	f
s:Render	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:Render() abort$/;"	f
s:Render	.config/nvim/bundle/vista.vim/autoload/vista/viewer.vim	/^function! s:Render(data) abort$/;"	f
s:RenderDescendants	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:RenderDescendants(parent_name, parent_line, descendants, rows, depth) abort$/;"	f
s:RenderLinewise	.config/nvim/bundle/vista.vim/autoload/vista/renderer/line.vim	/^function! s:RenderLinewise() abort$/;"	f
s:RenderScopeless	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:RenderScopeless(scope_less, rows) abort$/;"	f
s:ReplaceCmd	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ReplaceCmd(cmd) abort$/;"	f
s:Reset	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Reset(args)$/;"	f
s:Resolve	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Resolve(path) abort$/;"	f
s:RevealInSourceFile	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:RevealInSourceFile(lnum, tag) abort$/;"	f
s:RevisionComplete	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
s:Run	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^function! s:Run() abort$/;"	f
s:Run	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:Run(fpath) abort$/;"	f
s:Run	.config/nvim/bundle/vista.vim/autoload/vista/executive/lcn.vim	/^function! s:Run() abort$/;"	f
s:Run	.config/nvim/bundle/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:Run() abort$/;"	f
s:Run	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:Run(...) abort$/;"	f
s:RunAsync	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^function! s:RunAsync() abort$/;"	f
s:RunAsync	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:RunAsync(fpath) abort$/;"	f
s:RunAsync	.config/nvim/bundle/vista.vim/autoload/vista/executive/lcn.vim	/^function! s:RunAsync() abort$/;"	f
s:RunAsync	.config/nvim/bundle/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:RunAsync() abort$/;"	f
s:Selection	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Selection(arg1, ...) abort$/;"	f
s:SetBufline	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! s:SetBufline(bufnr, lines) abort$/;"	f
s:SetDefTxt	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetDefTxt()$/;"	f
s:SetWD	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetWD(args)$/;"	f
s:SetupTemp	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:SetupTemp(file) abort$/;"	f
s:ShellExpand	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ShellExpand(cmd) abort$/;"	f
s:ShortToLong	.config/nvim/bundle/vista.vim/autoload/vista/parser/ctags.vim	/^function! s:ShortToLong(short) abort$/;"	f
s:ShowDetail	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:ShowDetail() abort$/;"	f
s:ShowInfo	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! s:ShowInfo()$/;"	f
s:Slash	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Slash(path) abort$/;"	f
s:Slash	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Slash(path) abort$/;"	f
s:SortCompare	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! s:SortCompare(i1, i2) abort$/;"	f
s:SpecInputs	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SpecInputs(str)$/;"	f
s:SplitPattern	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SplitPattern(str)$/;"	f
s:SquashArgument	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:SquashArgument() abort$/;"	f
s:StageApply	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageApply(info, reverse, extra) abort$/;"	f
s:StageArgs	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageArgs(visual) abort$/;"	f
s:StageDelete	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDelete(lnum, count) abort$/;"	f
s:StageDiff	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
s:StageDiffEdit	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
s:StageInfo	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInfo(...) abort$/;"	f
s:StageInline	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInline(mode, ...) abort$/;"	f
s:StageIntend	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageIntend(count) abort$/;"	f
s:StageNext	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
s:StagePatch	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
s:StagePrevious	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
s:StageReveal	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageReveal(...) abort$/;"	f
s:StageSeek	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageSeek(info, fallback) abort$/;"	f
s:StatusCfile	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCfile(...) abort$/;"	f
s:StatusCommand	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCommand(line1, line2, range, count, bang, mods, reg, arg, args) abort$/;"	f
s:StopCursorTimer	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:StopCursorTimer() abort$/;"	f
s:StopFindTimer	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:StopFindTimer() abort$/;"	f
s:StopHighlightTimer	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! s:StopHighlightTimer() abort$/;"	f
s:Subcommands	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Subcommands() abort$/;"	f
s:SyncAutocmd	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^function! s:SyncAutocmd(...)$/;"	f
s:System	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:System(cmd) abort$/;"	f
s:TempCmd	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:TempCmd(out, cmd) abort$/;"	f
s:ToggleByFname	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleByFname()$/;"	f
s:ToggleFocus	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleFocus()$/;"	f
s:ToggleKeyLoop	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleKeyLoop()$/;"	f
s:ToggleMRURelative	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleMRURelative()$/;"	f
s:ToggleRegex	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleRegex()$/;"	f
s:ToggleType	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleType(dir)$/;"	f
s:Tree	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Tree(...) abort$/;"	f
s:Tree	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Tree(path) abort$/;"	f
s:TreeChomp	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeChomp(...) abort$/;"	f
s:TreeInfo	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeInfo(dir, commit) abort$/;"	f
s:TryAlternatives	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:TryAlternatives(tried, fpath) abort$/;"	f
s:Uniq	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Uniq(list) abort$/;"	f
s:Update	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Update(str)$/;"	f
s:UsableWin	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:UsableWin(nr) abort$/;"	f
s:UserCmd	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:UserCmd(lscmd)$/;"	f
s:UserCommand	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommand() abort$/;"	f
s:WqCommand	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:WqCommand(...) abort$/;"	f
s:WriteCommand	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:WriteCommand(line1, line2, range, count, bang, mods, reg, arg, args) abort$/;"	f
s:YankLine	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:YankLine(...)$/;"	f
s:_	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^let s:_ = 1 " 1: uninitialized, 2: disabled$/;"	v
s:_handleOldOptions	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
s:_lightline	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^let s:_lightline = {$/;"	v
s:activate	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^  let s:activate = 'activate'$/;"	v
s:activate	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^let s:activate = ""$/;"	v
s:activated	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^let s:activated = 0$/;"	v
s:active_cwd	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:active_cwd = ''$/;"	v
s:active_cwd_len	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:active_cwd_len = 0$/;"	v
s:active_patterns	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:active_patterns = []$/;"	v
s:add_db	.config/nvim/bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
s:add_methods	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
s:added_db_files	.config/nvim/bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	.config/nvim/bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:addtomrufs	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:addtomrufs(fname)$/;"	f
s:aliases	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:aliases = {}$/;"	v
s:aligner	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^let s:aligner = {}$/;"	v
s:aligner.project_ctags	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:aligner.project_ctags() abort$/;"	f
s:app	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^  let s:app = "MacVim"$/;"	v
s:app	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^  let s:app = "System Events"$/;"	v
s:app	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^  let s:app = "Terminal"$/;"	v
s:app	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^  let s:app = "iTerm"$/;"	v
s:aqua	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:aqua = '#3e999f'$/;"	v
s:aqua	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:aqua = '#3e999f'$/;"	v
s:argmaps	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:argmaps(md, i)$/;"	f
s:ars	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:ars = ['s:maxdepth', 's:maxfiles', 's:compare_lim', 's:glob', 's:caching']$/;"	v
s:assert	.config/nvim/bundle/defx.nvim/test/autoload/defx/custom.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.config/nvim/bundle/lightline.vim/test/error.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.config/nvim/bundle/lightline.vim/test/expand.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.config/nvim/bundle/lightline.vim/test/link.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.config/nvim/bundle/lightline.vim/test/mode.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.config/nvim/bundle/lightline.vim/test/toggle.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.config/nvim/bundle/lightline.vim/test/uniq.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:at	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:at(str)$/;"	f
s:autocmds	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:autocmds()$/;"	f
s:background	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:background = '#444444'$/;"	v
s:background	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:background = '#F5F5F5'$/;"	v
s:base0	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base0 = [ '#0000ff', 12 ]$/;"	v
s:base0	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base0 = '#666666'$/;"	v
s:base0	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base0 = '#909090'$/;"	v
s:base0	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base0 = '#ffffff'$/;"	v
s:base0	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base0 = '#949494'$/;"	v
s:base0	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base0 = '#777777'$/;"	v
s:base0	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base0 = [ '#839496', s:cuicolors.base0[s:cuiindex] ]$/;"	v
s:base0	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base0 = [ '#808080', 244 ]$/;"	v
s:base00	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base00 = [ '#ffff00', 11  ]$/;"	v
s:base00	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base00 = '#808080'$/;"	v
s:base00	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base00 = '#6060df'$/;"	v
s:base00	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base00 = '#767676'$/;"	v
s:base00	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base00 = [ '#657b83', s:cuicolors.base00[s:cuiindex] ]$/;"	v
s:base00	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base00 = [ '#666666', 242  ]$/;"	v
s:base00	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base00=['#1b2b34', '235']$/;"	v
s:base00	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base00 =['#d8dee9', '253']$/;"	v
s:base00	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base00=['#1b2b34', '235']$/;"	v
s:base00	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base00=['#d8dee9', '253']$/;"	v
s:base01	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base01 = [ '#00ff00', 10 ]$/;"	v
s:base01	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base01 = '#b4b4b4'$/;"	v
s:base01	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base01 = '#6060af'$/;"	v
s:base01	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base01 = '#606060'$/;"	v
s:base01	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base01 = [ '#586e75', s:cuicolors.base01[s:cuiindex] ]$/;"	v
s:base01	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base01 = [ '#585858', 240 ]$/;"	v
s:base01	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base01=['#343d46', '237']$/;"	v
s:base01	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base01 =['#cdd3de', '252']$/;"	v
s:base01	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base01=['#343d46', '237']$/;"	v
s:base01	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base01=['#cdd3de', '252']$/;"	v
s:base02	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base02 = [ '#000000', 0 ]$/;"	v
s:base02	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base02 = '#c8c8c8'$/;"	v
s:base02	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base02 = '#434343'$/;"	v
s:base02	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base02 = '#606087'$/;"	v
s:base02	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base02 = '#4e4e4e'$/;"	v
s:base02	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base02 = '#444444'$/;"	v
s:base02	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base02 = [ '#30302c ', 236 ]$/;"	v
s:base02	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base02 = [ '#30302c ', 236 ]$/;"	v
s:base02	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base02 = [ '#073642', s:cuicolors.base02[s:cuiindex] ]$/;"	v
s:base02	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base02 = [ '#30302c ', 236 ]$/;"	v
s:base02	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base02 = [ '#444444 ', 238 ]$/;"	v
s:base02	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base02=['#4f5b66', '240']$/;"	v
s:base02	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base02 =['#c0c5ce', '251']$/;"	v
s:base02	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base02=['#4f5b66', '240']$/;"	v
s:base02	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base02=['#c0c5ce', '251']$/;"	v
s:base023	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base023 = '#dfdfdf'$/;"	v
s:base023	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base023 = '#303030'$/;"	v
s:base023	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base023 = '#202087'$/;"	v
s:base023	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base023 = '#262626'$/;"	v
s:base023	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base023 = '#333333'$/;"	v
s:base023	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base023 = [ '#353535 ', 236 ]$/;"	v
s:base03	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base03 = [ '#808080', 8 ]$/;"	v
s:base03	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base03 = '#fafafa'$/;"	v
s:base03	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base03 = '#1d1f21'$/;"	v
s:base03	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base03 = '#002451'$/;"	v
s:base03	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base03 = '#12124c'$/;"	v
s:base03	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base03 = '#2d2d2d'$/;"	v
s:base03	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base03 = [ '#002b36', s:cuicolors.base03[s:cuiindex] ]$/;"	v
s:base03	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base03 = [ '#242424', 235 ]$/;"	v
s:base03	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base03=['#65737e', '243']$/;"	v
s:base03	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base03 =['#a7adba', '145']$/;"	v
s:base03	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base03=['#65737e', '243']$/;"	v
s:base03	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base03=['#a7adba', '145']$/;"	v
s:base04	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base04=['#a7adba', '145']$/;"	v
s:base04	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base04 =['#65737e', '243']$/;"	v
s:base04	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base04=['#a7adba', '145']$/;"	v
s:base04	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base04=['#65737e', '243']$/;"	v
s:base05	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base05=['#c0c5ce', '251']$/;"	v
s:base05	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base05 =['#4f5b66', '240']$/;"	v
s:base05	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base05=['#c0c5ce', '251']$/;"	v
s:base05	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base05=['#4f5b66', '240']$/;"	v
s:base06	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base06=['#cdd3de', '252']$/;"	v
s:base06	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base06 =['#343d46', '237']$/;"	v
s:base06	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base06=['#cdd3de', '252']$/;"	v
s:base06	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base06=['#343d46', '237']$/;"	v
s:base07	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base07=['#d8dee9', '253']$/;"	v
s:base07	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base07 =['#1b2b34', '235']$/;"	v
s:base07	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base07=['#d8dee9', '253']$/;"	v
s:base07	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base07=['#1b2b34', '235']$/;"	v
s:base08	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base08=['#ec5f67', '203']$/;"	v
s:base08	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base08 =['#b40b11', '124']$/;"	v
s:base08	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base08=['#ec5f67', '203']$/;"	v
s:base08	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base08=['#b40b11', '124']$/;"	v
s:base09	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base09=['#f99157', '209']$/;"	v
s:base09	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base09 =['#b4713d', '131']$/;"	v
s:base09	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base09=['#f99157', '209']$/;"	v
s:base09	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base09=['#b4713d', '131']$/;"	v
s:base0A	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base0A=['#fac863', '221']$/;"	v
s:base0A	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base0A =['#a48c32', '137']$/;"	v
s:base0A	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base0A=['#fac863', '221']$/;"	v
s:base0A	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base0A=['#a48c32', '137']$/;"	v
s:base0B	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base0B=['#99c794', '114']$/;"	v
s:base0B	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base0B =['#869235', '101']$/;"	v
s:base0B	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base0B=['#99c794', '114']$/;"	v
s:base0B	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base0B=['#869235', '101']$/;"	v
s:base0C	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base0C=['#62b3b2', '73']$/;"	v
s:base0C	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base0C =['#5b9c90', '72']$/;"	v
s:base0C	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base0C=['#62b3b2', '73']$/;"	v
s:base0C	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base0C=['#5b9c90', '72']$/;"	v
s:base0D	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base0D=['#6699cc', '68']$/;"	v
s:base0D	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base0D =['#526f93', '60']$/;"	v
s:base0D	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base0D=['#6699cc', '68']$/;"	v
s:base0D	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base0D=['#526f93', '60']$/;"	v
s:base0E	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base0E=['#c594c5', '176']$/;"	v
s:base0E	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base0E =['#896a98', '96']$/;"	v
s:base0E	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base0E=['#c594c5', '176']$/;"	v
s:base0E	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base0E=['#896a98', '96']$/;"	v
s:base0F	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base0F=['#ab7967', '137']$/;"	v
s:base0F	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base0F =['#9a806d', '101']$/;"	v
s:base0F	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base0F=['#ab7967', '137']$/;"	v
s:base0F	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base0F=['#9a806d', '101']$/;"	v
s:base1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base1 = [ '#00ffff', 14 ]$/;"	v
s:base1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base1 = '#555555'$/;"	v
s:base1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base1 = '#a0a0a0'$/;"	v
s:base1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base1 = '#ffffff'$/;"	v
s:base1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base1 = '#b2b2b2'$/;"	v
s:base1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base1 = '#999999'$/;"	v
s:base1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base1 = [ '#93a1a1', s:cuicolors.base1[s:cuiindex] ]$/;"	v
s:base1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base1 = [ '#969696', 247 ]$/;"	v
s:base10	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^  let s:base10=['#ffffff', '15']$/;"	v
s:base10	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^  let s:base10 =['#ffffff', '15']$/;"	v
s:base10	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:base10=['#ffffff', '15']$/;"	v
s:base10	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:base10=['#ffffff', '15']$/;"	v
s:base2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base2 = [ '#c0c0c0', 7 ]$/;"	v
s:base2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base2 = '#4f4f4f'$/;"	v
s:base2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base2 = '#bababa'$/;"	v
s:base2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base2 = '#ffffff'$/;"	v
s:base2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base2 = '#c6c6c6'$/;"	v
s:base2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base2 = '#aaaaaa'$/;"	v
s:base2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base2 = [ '#eee8d5', s:cuicolors.base2[s:cuiindex] ]$/;"	v
s:base2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base2 = [ '#a8a8a8', 248 ]$/;"	v
s:base23	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base23 = '#ffffff'$/;"	v
s:base23	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base23 = '#d0d0d0'$/;"	v
s:base23	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base23 = '#bbbbbb'$/;"	v
s:base3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base3 = [ '#ffffff', 15 ]$/;"	v
s:base3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base3 = '#4d4d4c'$/;"	v
s:base3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base3 = '#c5c8c6'$/;"	v
s:base3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base3 = '#ffffff'$/;"	v
s:base3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base3 = '#eaeaea'$/;"	v
s:base3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base3 = '#cccccc'$/;"	v
s:base3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base3 = [ '#fdf6e3', s:cuicolors.base3[s:cuiindex] ]$/;"	v
s:base3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base3 = [ '#d0d0d0', 252 ]$/;"	v
s:bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg     = [ '#282c34', 235 ]$/;"	v
s:bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg     = [ '#fafafa', 255 ]$/;"	v
s:bins	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:bins = [$/;"	v
s:black	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:black(x) abort$/;"	f
s:black	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:black = [ '#2b2b2b', 235 ]$/;"	v
s:black	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:black = [ '#232526', 233 ]$/;"	v
s:blink.clear	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^  function! s:blink.clear() abort$/;"	f
s:blink.tick	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^  function! s:blink.tick(_) abort$/;"	f
s:blobdirs	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^  let s:blobdirs = {}$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:blue = [ '#000080', 4 ]$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:blue = [ '#4fb4d8' , 39 ]$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:blue = '#00afaf'$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:blue = '#81a2be'$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:blue = '#bbdaff'$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:blue = '#7aa6da'$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:blue = '#99cccc'$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:blue = [ '#6897bb' , 67 ] $/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:blue = [ '#8197bf', 103 ]$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:blue   = '#89ddff'$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:blue   = '#82aaff'$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:blue   = [ '#61afef', 75 ]$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:blue = [ '#87afaf', 109 ]$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:blue = [ '#268bd2', s:cuicolors.blue[s:cuiindex] ]$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:blue = [ '#5573a3', 4 ]$/;"	v
s:blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:blue = [ '#8ac6f2', 117 ]$/;"	v
s:bold	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^   let s:bold = "bold"$/;"	v
s:bold	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:bold = ""$/;"	v
s:bold	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^   let s:bold = "bold"$/;"	v
s:bold	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:bold = ""$/;"	v
s:bright_blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_blue = [ '#8eb2f7', 12 ]$/;"	v
s:bright_green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_green = [ '#98bc37', 10 ]$/;"	v
s:bright_magenta	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_magenta = [ '#e35682', 13 ]$/;"	v
s:buf_line_count	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:buf_line_count(bufnr) abort$/;"	f
s:buffer_commit	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
s:buffer_getline	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
s:buffer_getvar	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
s:buffer_name	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
s:buffer_path	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
s:buffer_prototype	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_relative	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_relative(...) dict abort$/;"	f
s:buffer_repo	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
s:buffer_spec	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_spec() dict abort$/;"	f
s:buffer_type	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
s:buffunc	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buffunc(e)$/;"	f
s:bufnr_width	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:bufnr_width = 3$/;"	v
s:bufnrfilpath	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufnrfilpath(line)$/;"	f
s:bufparts	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufparts(bufnr)$/;"	f
s:buftab	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buftab(bufnr, md)$/;"	f
s:bufwins	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufwins(bufnr)$/;"	f
s:buildpat	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buildpat(lst)$/;"	f
s:byfname	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:byfname()$/;"	f
s:cache_project_root	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
s:cachefile	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:cachefile()$/;"	f
s:callbacks	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^let s:callbacks = {}$/;"	v
s:can_diffoff	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
s:ccex	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:ccex = s:pref.'clear_cache_on_exit'$/;"	v
s:cfile	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:cfile() abort$/;"	f
s:changed_wildignore	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:changed_wildignore = 0$/;"	v
s:changelist	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:changelist(bufnr)$/;"	f
s:checkAutocmd	.config/nvim/bundle/coc.nvim/autoload/health/coc.vim	/^function! s:checkAutocmd()$/;"	f
s:checkCommand	.config/nvim/bundle/coc.nvim/autoload/health/coc.vim	/^function! s:checkCommand()$/;"	f
s:checkEnvironment	.config/nvim/bundle/coc.nvim/autoload/health/coc.vim	/^function! s:checkEnvironment() abort$/;"	f
s:checkInitailize	.config/nvim/bundle/coc.nvim/autoload/health/coc.vim	/^function! s:checkInitailize() abort$/;"	f
s:check_lines	.config/nvim/bundle/defx.nvim/autoload/defx/exrename.vim	/^function! s:check_lines() abort$/;"	f
s:check_required_python_for_defx	.config/nvim/bundle/defx.nvim/autoload/health/defx.vim	/^function! s:check_required_python_for_defx() abort$/;"	f
s:checkbuf	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:checkbuf()$/;"	f
s:chknearby	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:chknearby(pat)$/;"	f
s:choices	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:choices(str, choices, func, args)$/;"	f
s:chop	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:chop(mrufs)$/;"	f
s:clear	.config/nvim/bundle/lightline.vim/test/link.vim	/^function! s:clear()$/;"	f
s:client	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^let s:client = v:null$/;"	v
s:clients	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^let s:clients = {}$/;"	v
s:close_cb	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:close_cb(channel) abort$/;"	f
s:colors	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:colors = {$/;"	v
s:cols_layout	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^let s:cols_layout = {}$/;"	v
s:cols_layout.project_ctags	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:cols_layout.project_ctags() abort$/;"	f
s:column_length	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:column_length = get(g:, 'defx_icons_column_length', 1)$/;"	v
s:command	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:command(definition, ...) abort$/;"	f
s:commands	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:commands = []$/;"	v
s:common_efm	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:commondirs	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:commondirs = {}$/;"	v
s:comparent	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comparent(...)$/;"	f
s:compfnlen	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compfnlen(...)$/;"	f
s:compmatlen	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmatlen(...)$/;"	f
s:compmreb	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmreb(...)$/;"	f
s:compmref	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmref(...)$/;"	f
s:comptime	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comptime(...)$/;"	f
s:compval	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compval(...)$/;"	f
s:compval	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:compval(...)$/;"	f
s:config	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:config = {}$/;"	v
s:convert	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:convert(name, index) abort$/;"	f
s:convert	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:convert(rgb) abort$/;"	f
s:coretype_names	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:coretype_names = {$/;"	v
s:coretypes	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:coretypes = map(copy(g:ctrlp_types), '[s:coretype_names[v:val], v:val]')$/;"	v
s:cpath	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:cpath(path, ...) abort$/;"	f
s:ctags	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^let s:ctags = get(g:, 'vista_ctags_executable', 'ctags')$/;"	v
s:ctrlp1	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:ctrlp1    = [s:base10[0], s:base01[0], s:base10[1], s:base01[1]]$/;"	v
s:ctrlp1	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:ctrlp1    = [s:base10[0], s:base01[0], s:base10[1], s:base01[1]]$/;"	v
s:ctrlp2	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:ctrlp2    = [s:base10[0], s:base03[0], s:base10[1], s:base03[1]]$/;"	v
s:ctrlp2	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:ctrlp2    = [s:base10[0], s:base03[0], s:base10[1], s:base03[1]]$/;"	v
s:ctrlp3	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:ctrlp3    = [s:base10[0], s:base0D[0], s:base10[1], s:base0D[1]]$/;"	v
s:ctrlp3	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:ctrlp3    = [s:base10[0], s:base0D[0], s:base10[1], s:base0D[1]]$/;"	v
s:cuicolor	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:cuicolor = {$/;"	v
s:cuicolors	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cuicolors = {$/;"	v
s:cuiindex	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 0$/;"	v
s:cuiindex	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 1$/;"	v
s:cuiindex	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 2$/;"	v
s:cur_dir	.config/nvim/bundle/vista.vim/autoload/vista.vim	/^let s:cur_dir = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:cursor_timer	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^let s:cursor_timer = -1$/;"	v
s:curtype	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:curtype()$/;"	f
s:custom_alternate_buffer	.config/nvim/bundle/defx.nvim/autoload/defx/exrename.vim	/^function! s:custom_alternate_buffer() abort$/;"	f
s:cyan	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:cyan = [ '#008080', 6 ]$/;"	v
s:cyan	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:cyan = '#3e999f'$/;"	v
s:cyan	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:cyan = '#8abeb7'$/;"	v
s:cyan	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:cyan = '#99ffff'$/;"	v
s:cyan	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:cyan = '#70c0b1'$/;"	v
s:cyan	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:cyan = '#009999'$/;"	v
s:cyan	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:cyan = [ '#8fbfdc', 110 ]$/;"	v
s:cyan	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:cyan = [ '#66d9ef', 81 ]$/;"	v
s:cyan	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:cyan = [ '#87d7d7', 23 ]$/;"	v
s:cyan	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cyan = [ '#2aa198', s:cuicolors.cyan[s:cuiindex] ]$/;"	v
s:cyan	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:cyan = [ '#0aaeb3', 6 ]$/;"	v
s:cyan	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:cyan = s:blue$/;"	v
s:darkGray	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:darkGray = [ '#45474f' , 238 ]$/;"	v
s:default_icon	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:default_icon = get(g:, 'defx_icons_default_icon', '')$/;"	v
s:default_icon	.config/nvim/bundle/vista.vim/autoload/vista/renderer/kind.vim	/^let s:default_icon = ['╰─▸ ', '├─▸ ']$/;"	v
s:default_icon	.config/nvim/bundle/vista.vim/autoload/vista/renderer/markdown.vim	/^let s:default_icon = ['╰─▸ ', '├─▸ ']$/;"	v
s:default_icon	.config/nvim/bundle/vista.vim/autoload/vista/viewer.vim	/^let s:default_icon = ['╰─▸ ', '├─▸ ']$/;"	v
s:define_commands	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:define_commands() abort$/;"	f
s:defx_my_settings	.config/nvim/mappings/defx.vim	/^function! s:defx_my_settings() abort$/;"	f
s:delbuf	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delbuf()$/;"	f
s:delbufcond	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delbufcond(bufnr)$/;"	f
s:delent	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delent(rfunc)$/;"	f
s:dict2list	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:dict2list(dict)$/;"	f
s:dictindex	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dictindex(dict, expr)$/;"	f
s:did_check_exe	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:diff_modifier	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
s:diff_restore	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
s:diff_window_count	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
s:diffoff	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff() abort$/;"	f
s:diffoff_all	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
s:diffthis	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:diffthis() abort$/;"	f
s:dir	.config/nvim/bundle/coc.nvim/src/__tests__/vimrc	/^let s:dir = expand('<sfile>:h')$/;"	v
s:dir_for_worktree	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:dircompl	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dircompl(be, sd)$/;"	f
s:dircounts	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:dircounts = {}$/;"	v
s:directory_icon	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:directory_icon = get(g:, 'defx_icons_directory_icon', '')$/;"	v
s:directory_symlink_icon	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:directory_symlink_icon = get(g:, 'defx_icons_directory_symlink_icon', '')$/;"	v
s:dismrk	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dismrk()$/;"	f
s:do_rename	.config/nvim/bundle/defx.nvim/autoload/defx/exrename.vim	/^function! s:do_rename() abort$/;"	f
s:dohighlight	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dohighlight()$/;"	f
s:dosigns	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dosigns()$/;"	f
s:echo_signature	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! s:echo_signature(parts)$/;"	f
s:elapsed	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:elapsed(nr)$/;"	f
s:enable_syntax_highlight	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:enable_syntax_highlight = get(g:, 'defx_icons_enable_syntax_highlight', 1)$/;"	v
s:error	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:error = '#5f0000'$/;"	v
s:error	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:error = '#ffafdf'$/;"	v
s:error	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:error     = [s:base08[0], s:base01[0], s:base08[1], s:base01[1]]$/;"	v
s:error	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:error     = [s:base08[0], s:base01[0], s:base08[1], s:base01[1]]$/;"	v
s:error_sign	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^let s:error_sign = get(g:, 'coc_status_error_sign', has('mac') ? '❌ ' : 'E')$/;"	v
s:escape_pattern	.config/nvim/bundle/defx.nvim/autoload/defx/exrename.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:esctagscmd	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:esctagscmd(bin, args, ...)$/;"	f
s:eval_cmdline	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! s:eval_cmdline(cmdline) abort$/;"	f
s:evaluate_expand	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:evaluate_expand(component) abort$/;"	f
s:exact_matches	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:exact_matches = extend({$/;"	v
s:excl	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:excl(fn)$/;"	f
s:exec_paths	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:exec_paths = {}$/;"	v
s:execextvar	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:execextvar(key)$/;"	f
s:exectags	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectags(cmd)$/;"	f
s:exectagsonfile	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectagsonfile(fname, ftype)$/;"	f
s:executable	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:executable(binary) abort$/;"	f
s:executables	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:executables = {}$/;"	v
s:execute	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:execute(cmd)$/;"	f
s:exit	.config/nvim/bundle/defx.nvim/autoload/defx/exrename.vim	/^function! s:exit(bufnr) abort$/;"	f
s:expand	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! s:expand(path) abort$/;"	f
s:expand	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:expand(components) abort$/;"	f
s:expand	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:expand(...)$/;"	f
s:expand	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:expand = '\\%(\\(' . s:var . '\\)\\(' . s:flag . '*\\)\\(:S\\)\\=\\)'$/;"	v
s:expand_complete	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! s:expand_complete(path) abort$/;"	f
s:extensions	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:extensions = extend({$/;"	v
s:fetching	.config/nvim/bundle/vista.vim/autoload/vista/executive/lcn.vim	/^let s:fetching = v:true$/;"	v
s:fg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:fg     = '#d5dbe5'$/;"	v
s:fg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:fg     = '#eeffff'$/;"	v
s:fg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:fg     = [ '#abb2bf', 145 ]$/;"	v
s:ficounts	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:ficounts = {}$/;"	v
s:filecounts	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:filecounts = {}$/;"	v
s:filter	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:filter(tags)$/;"	f
s:find_timer	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^let s:find_timer = -1$/;"	v
s:findcommon	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findcommon(items, seed)$/;"	f
s:findcount	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:findcount(str, tgaddr)$/;"	f
s:findroot	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findroot(curr, mark, depth, type)$/;"	f
s:flag	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:flag = '\\%(:[p8~.htre]\\|:g\\=s\\(.\\).\\{-\\}\\1.\\{-\\}\\1\\)'$/;"	v
s:flatten	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:flatten(tree, cur)$/;"	f
s:flatten_twice	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:flatten_twice(xss) abort$/;"	f
s:floating_timer	.config/nvim/bundle/vista.vim/autoload/vista/floating.vim	/^let s:floating_timer = -1$/;"	v
s:fnameescape	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
s:fnameescape	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:fnameescape = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:fnesc	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:fnesc(...)$/;"	f
s:foreground	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:foreground = '#d0d0d0'$/;"	v
s:foreground	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:foreground = '#4d4d4c'$/;"	v
s:format	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:format(...)$/;"	f
s:formatline	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:formatline(str)$/;"	f
s:formatul	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:formatul(...)$/;"	f
s:fpats	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:fpats = {$/;"	v
s:funcs	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^let s:funcs = {}$/;"	v
s:funcs.buf_attach	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_attach(...)$/;"	f
s:funcs.buf_del_var	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_del_var(bufnr, name)$/;"	f
s:funcs.buf_detach	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_detach()$/;"	f
s:funcs.buf_get_changedtick	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_changedtick(bufnr)$/;"	f
s:funcs.buf_get_lines	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_lines(bufnr, start, end, strict) abort$/;"	f
s:funcs.buf_get_mark	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_mark(bufnr, name)$/;"	f
s:funcs.buf_get_name	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_name(bufnr)$/;"	f
s:funcs.buf_get_option	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_option(bufnr, name)$/;"	f
s:funcs.buf_get_var	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_var(bufnr, name)$/;"	f
s:funcs.buf_is_valid	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_is_valid(bufnr)$/;"	f
s:funcs.buf_line_count	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_line_count(bufnr) abort$/;"	f
s:funcs.buf_set_lines	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_lines(bufnr, start, end, strict, ...) abort$/;"	f
s:funcs.buf_set_name	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_name(bufnr, name) abort$/;"	f
s:funcs.buf_set_option	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_option(bufnr, name, val)$/;"	f
s:funcs.buf_set_var	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_var(bufnr, name, val)$/;"	f
s:funcs.call_atomic	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_atomic(calls)$/;"	f
s:funcs.call_dict_function	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_dict_function(dict, method, args) abort$/;"	f
s:funcs.call_function	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_function(method, args) abort$/;"	f
s:funcs.command	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.command(command) abort$/;"	f
s:funcs.command_output	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.command_output(cmd)$/;"	f
s:funcs.del_current_line	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.del_current_line(line)$/;"	f
s:funcs.del_var	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.del_var(name) abort$/;"	f
s:funcs.err_write	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.err_write(str)$/;"	f
s:funcs.err_writeln	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.err_writeln(str)$/;"	f
s:funcs.eval	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.eval(expr) abort$/;"	f
s:funcs.feedkeys	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.feedkeys(keys, mode, escape_csi)$/;"	f
s:funcs.get_api_info	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_api_info()$/;"	f
s:funcs.get_current_buf	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_buf()$/;"	f
s:funcs.get_current_line	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_line()$/;"	f
s:funcs.get_current_tabpage	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_tabpage()$/;"	f
s:funcs.get_current_win	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_win()$/;"	f
s:funcs.get_mode	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_mode()$/;"	f
s:funcs.get_option	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_option(name)$/;"	f
s:funcs.get_var	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_var(var)$/;"	f
s:funcs.get_vvar	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_vvar(var)$/;"	f
s:funcs.list_bufs	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_bufs()$/;"	f
s:funcs.list_runtime_paths	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_runtime_paths()$/;"	f
s:funcs.list_tabpages	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_tabpages()$/;"	f
s:funcs.list_wins	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_wins() abort$/;"	f
s:funcs.out_write	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.out_write(str)$/;"	f
s:funcs.set_client_info	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_client_info(...) abort$/;"	f
s:funcs.set_current_buf	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_buf(bufnr) abort$/;"	f
s:funcs.set_current_dir	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_dir(dir) abort$/;"	f
s:funcs.set_current_line	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_line(line)$/;"	f
s:funcs.set_current_tabpage	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_tabpage(tabnr) abort$/;"	f
s:funcs.set_current_win	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_win(win_id) abort$/;"	f
s:funcs.set_option	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_option(name, value) abort$/;"	f
s:funcs.set_var	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_var(name, value) abort$/;"	f
s:funcs.strwidth	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.strwidth(str)$/;"	f
s:funcs.subscribe	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.subscribe(...) abort$/;"	f
s:funcs.tabpage_del_var	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_del_var(tabnr, name)$/;"	f
s:funcs.tabpage_get_number	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_number(id)$/;"	f
s:funcs.tabpage_get_var	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_var(tabnr, name)$/;"	f
s:funcs.tabpage_get_win	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_win(tabnr)$/;"	f
s:funcs.tabpage_is_valid	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_is_valid(tabnr)$/;"	f
s:funcs.tabpage_list_wins	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_list_wins(tabnr)$/;"	f
s:funcs.tabpage_set_var	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_set_var(tabnr, name, value)$/;"	f
s:funcs.unsubscribe	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.unsubscribe(...) abort$/;"	f
s:funcs.win_del_var	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_del_var(win_id, name) abort$/;"	f
s:funcs.win_get_buf	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_buf(winid)$/;"	f
s:funcs.win_get_cursor	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_cursor(win_id) abort$/;"	f
s:funcs.win_get_height	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_height(win_id) abort$/;"	f
s:funcs.win_get_number	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_number(win_id) abort$/;"	f
s:funcs.win_get_option	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_option(win_id, name) abort$/;"	f
s:funcs.win_get_position	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_position(win_id) abort$/;"	f
s:funcs.win_get_tabpage	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_tabpage(win_id) abort$/;"	f
s:funcs.win_get_var	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_var(win_id, name) abort$/;"	f
s:funcs.win_get_width	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_width(win_id) abort$/;"	f
s:funcs.win_is_valid	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_is_valid(win_id) abort$/;"	f
s:funcs.win_set_cursor	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_cursor(win_id, pos) abort$/;"	f
s:funcs.win_set_height	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_height(win_id, height) abort$/;"	f
s:funcs.win_set_option	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_option(win_id, name, value) abort$/;"	f
s:funcs.win_set_var	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_var(win_id, name, value) abort$/;"	f
s:funcs.win_set_width	.config/nvim/bundle/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_width(win_id, width) abort$/;"	f
s:function	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:function(name) abort$/;"	f
s:generate_wildignore_options	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:generate_wildignore_options() abort$/;"	f
s:get_channel	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! s:get_channel(client)$/;"	f
s:get_ctags_executable	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
s:get_project_patterns	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! s:get_project_patterns(root_dir) abort$/;"	f
s:getbookmarks	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getbookmarks()$/;"	f
s:getenv	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getenv()$/;"	f
s:getextvar	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getextvar(key)$/;"	f
s:gethistdata	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistdata()$/;"	f
s:gethistloc	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistloc()$/;"	f
s:getinput	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getinput(...)$/;"	f
s:getinput	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getinput(str, ...)$/;"	f
s:getnewmix	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:getnewmix(cwd, clim)$/;"	f
s:getparent	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getparent(item)$/;"	f
s:getregs	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getregs()$/;"	f
s:getundo	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:getundo()$/;"	f
s:git_versions	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:glbpath	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:glbpath(...)$/;"	f
s:glbs	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:glbs = { 'magic': 1, 'to': 1, 'tm': 0, 'sb': 1, 'hls': 0, 'im': 0,$/;"	v
s:globdirs	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:globdirs(dirs, depth)$/;"	f
s:globsubs	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:globsubs = {$/;"	v
s:gray	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:gray = [ '#686b78' , 242 ]$/;"	v
s:gray	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:gray = [ '#323232', 236 ]$/;"	v
s:gray	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:gray = [ '#808080', 244 ]$/;"	v
s:gray1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#2c393f'$/;"	v
s:gray1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#37474f'$/;"	v
s:gray1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#2e3c43'$/;"	v
s:gray1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#314549'$/;"	v
s:gray1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1  = [ '#494b53', 238 ]$/;"	v
s:gray1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1  = [ '#5c6370', 241 ]$/;"	v
s:gray2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#2c393f'$/;"	v
s:gray2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#d5dbe5'$/;"	v
s:gray2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#2E3C43'$/;"	v
s:gray2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#eeffff'$/;"	v
s:gray2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2  = [ '#2c323d', 235 ]$/;"	v
s:gray2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2  = [ '#f0f0f0', 255 ]$/;"	v
s:gray3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#37474f'$/;"	v
s:gray3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#707880'$/;"	v
s:gray3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#314549'$/;"	v
s:gray3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#546e7a'$/;"	v
s:gray3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3  = [ '#3e4452', 240 ]$/;"	v
s:gray3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3  = [ '#d0d0d0', 250 ]$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:green = [ '#008000', 2 ]$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:green = [ '#78bd65' , 41 ]$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:green = '#008700'$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:green = '#008700'$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:green = '#718c00'$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:green = '#b5bd68'$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:green = '#d1f1a9'$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:green = '#b9ca4a'$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:green = '#99cc99'$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:green = [ '#629755', 71 ] $/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:green = [ '#99ad6a', 107 ]$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:green  = '#8bd649'$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:green  = '#c3e88d'$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:green = [ '#a6e22e', 118 ]$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:green  = [ '#98c379', 35 ]$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:green  = [ '#98c379', 76 ]$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:green = [ '#87af87', 108 ]$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:green = [ '#859900', s:cuicolors.green[s:cuiindex] ]$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:green = [ '#519f50', 2 ]$/;"	v
s:green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:green = [ '#95e454', 119 ]$/;"	v
s:gsub	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
s:gui	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^let s:gui = has('gui_running')$/;"	v
s:guicolor	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:guicolor = {$/;"	v
s:has_conceal	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:has_conceal = has('conceal')$/;"	v
s:has_floating_win	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^let s:has_floating_win = exists('*nvim_open_win')$/;"	v
s:has_popup	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^let s:has_popup = exists('*popup_create')$/;"	v
s:hash_colors	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:headntail	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:headntail(str)$/;"	f
s:hi	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^function! s:hi(name)$/;"	f
s:hi	.config/nvim/bundle/lightline.vim/test/link.vim	/^function! s:hi(name)$/;"	f
s:highlight	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:highlight(pat, grp)$/;"	f
s:highlight_timer	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^let s:highlight_timer = -1$/;"	v
s:hlgrps	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:hlgrps = {$/;"	v
s:icons	.config/nvim/bundle/vista.vim/autoload/vista/renderer.vim	/^let s:icons = {$/;"	v
s:id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:ifilter	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ifilter(list, str)$/;"	f
s:ignore	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ignore()$/;"	f
s:inactive1	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:inactive1 = [s:base07[0], s:base03[0], s:base07[1], s:base03[1]]$/;"	v
s:inactive1	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:inactive1 = [s:base07[0], s:base03[0], s:base07[1], s:base03[1]]$/;"	v
s:inactive2	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:inactive2 = [s:base07[0], s:base01[0], s:base07[1], s:base01[1]]$/;"	v
s:inactive2	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:inactive2 = [s:base07[0], s:base01[0], s:base07[1], s:base01[1]]$/;"	v
s:inactive3	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:inactive3 = [s:base03[0], s:base01[0], s:base03[1], s:base01[1]]$/;"	v
s:inactive3	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:inactive3 = [s:base03[0], s:base01[0], s:base03[1], s:base01[1]]$/;"	v
s:indexes	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:indexes = {}$/;"	v
s:insert1	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:insert1   = [s:base10[0], s:base0B[0], s:base10[1], s:base0B[1]]$/;"	v
s:insert1	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:insert1   = [s:base10[0], s:base0B[0], s:base10[1], s:base0B[1]]$/;"	v
s:insert2	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:insert2   = [s:base07[0], s:base03[0], s:base07[1], s:base03[1]]$/;"	v
s:insert2	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:insert2   = [s:base07[0], s:base03[0], s:base07[1], s:base03[1]]$/;"	v
s:insert3	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:insert3   = [s:base07[0], s:base01[0], s:base07[1], s:base01[1]]$/;"	v
s:insert3	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:insert3   = [s:base07[0], s:base01[0], s:base07[1], s:base01[1]]$/;"	v
s:insertcache	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertcache(str)$/;"	f
s:insertstr	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertstr()$/;"	f
s:install_yarn	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^let s:install_yarn = 0$/;"	v
s:internal_options	.config/nvim/bundle/defx.nvim/autoload/defx/init.vim	/^function! s:internal_options() abort$/;"	f
s:is_absolute	.config/nvim/bundle/defx.nvim/autoload/defx/exrename.vim	/^function! s:is_absolute(path) abort$/;"	f
s:is_mac	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^let s:is_mac = !s:is_windows && !has('win32unix')$/;"	v
s:is_vim	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	.config/nvim/bundle/coc.nvim/autoload/coc/snippet.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	.config/nvim/bundle/coc.nvim/autoload/coc/task.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_win	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_windows	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^let s:is_windows = has('win32') || has('win64')$/;"	v
s:isabs	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:isabs(path)$/;"	f
s:iscmdwin	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:iscmdwin()$/;"	f
s:ispathitem	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ispathitem()$/;"	f
s:isterminal	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:isterminal(buf)$/;"	f
s:italic	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^    let s:italic = "italic"$/;"	v
s:italic	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:italic = ""$/;"	v
s:italic	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^    let s:italic = "italic"$/;"	v
s:italic	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:italic = ""$/;"	v
s:known_files	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_projects	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:kprange	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:kprange = {$/;"	v
s:language_opt	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags.vim	/^let s:language_opt = map(s:language_opt,$/;"	v
s:language_opt	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags.vim	/^let s:language_opt = {$/;"	v
s:lash	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lash(...)$/;"	f
s:lash	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! s:lash(...)$/;"	f
s:last_lnum	.config/nvim/bundle/vista.vim/autoload/vista/floating.vim	/^let s:last_lnum = -1$/;"	v
s:last_lnum	.config/nvim/bundle/vista.vim/autoload/vista/popup.vim	/^let s:last_lnum = -1$/;"	v
s:last_req_id	.config/nvim/bundle/vista.vim/autoload/vista/executive/vim_lsp.vim	/^let s:last_req_id = 0$/;"	v
s:last_vlnum	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^let s:last_vlnum = v:null$/;"	v
s:last_wildignores	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:last_wildignores = ''$/;"	v
s:lastvisual	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lastvisual()$/;"	f
s:leavepre	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:leavepre()$/;"	f
s:lightGray	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:lightGray = [ '#848794' , 245 ]$/;"	v
s:line	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:line(tabline, inactive) abort$/;"	f
s:linechars	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
s:lineout	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:lineout(dict)$/;"	f
s:load	.config/nvim/bundle/lightline.vim/autoload/lightline/colortable.vim	/^function! s:load() abort$/;"	f
s:load_project_patterns	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! s:load_project_patterns(root_dir) abort$/;"	f
s:log	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:log(m)$/;"	f
s:logfile	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^let s:logfile = tempname()$/;"	v
s:lsCmd	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lsCmd()$/;"	f
s:magenta	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:magenta = [ '#800080', 5 ]$/;"	v
s:magenta	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:magenta = '#8959a8'$/;"	v
s:magenta	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:magenta = '#b294bb'$/;"	v
s:magenta	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:magenta = '#ebbbff'$/;"	v
s:magenta	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:magenta = '#c397d8'$/;"	v
s:magenta	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:magenta = '#cc99cc'$/;"	v
s:magenta	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:magenta = [ '#f0a0c0', 217 ]$/;"	v
s:magenta	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:magenta = [ '#df5f87', 168 ]$/;"	v
s:magenta	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:magenta = [ '#d33682', s:cuicolors.magenta[s:cuiindex] ]$/;"	v
s:magenta	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:magenta = [ '#e02c6d', 5 ]$/;"	v
s:magenta	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:magenta = [ '#f2c68a', 216 ]$/;"	v
s:manual_update_tags	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
s:map	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^  function! s:map(xs, f) abort$/;"	f
s:map	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^  let s:map = function('map')$/;"	v
s:map	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:map(mode, lhs, rhs, ...) abort$/;"	f
s:map_next	.config/nvim/bundle/coc.nvim/autoload/coc/snippet.vim	/^let s:map_next = 1$/;"	v
s:mark_icon	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:mark_icon = get(g: , 'defx_icons_mark_icon', '*')$/;"	v
s:match_window_opts	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:match_window_opts()$/;"	f
s:matchbuf	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchbuf(item, pat)$/;"	f
s:matchfname	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchfname(item, pat)$/;"	f
s:matchlens	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchlens(str, pat, ...)$/;"	f
s:matchtabe	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabe(item, pat)$/;"	f
s:matchtabs	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabs(item, pat)$/;"	f
s:max	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:max(len, max)$/;"	f
s:maxf	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:maxf(len)$/;"	f
s:mergelists	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:mergelists()$/;"	f
s:message	.config/nvim/bundle/lightline.vim/test/error.vim	/^function! s:message() abort$/;"	f
s:mfunc	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mfunc()$/;"	f
s:mixedsort	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mixedsort(...)$/;"	f
s:mmode	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mmode()$/;"	f
s:mode	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^let s:mode = ''$/;"	v
s:modevar	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:modevar()$/;"	f
s:modify	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:modify(entry, type)$/;"	f
s:mruf_map_string	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^let s:mruf_map_string = '!stridx(v:val, cwd) ? strpart(v:val, idx) : v:val'$/;"	v
s:msg	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:msg(name, cwd)$/;"	f
s:mtype	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mtype()$/;"	f
s:multipliers	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:multipliers(...)$/;"	f
s:name	.config/nvim/bundle/coc.nvim/autoload/coc/rpc.vim	/^let s:name = 'coc'$/;"	v
s:narrowable	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:narrowable()$/;"	f
s:navy	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:navy = '#df875f'$/;"	v
s:navy	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:navy = '#005f87'$/;"	v
s:nested_closed_tree_icon	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:nested_closed_tree_icon = get(g: ,'defx_icons_nested_closed_tree_icon', '')$/;"	v
s:nested_opened_tree_icon	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:nested_opened_tree_icon = get(g: ,'defx_icons_nested_opened_tree_icon', '')$/;"	v
s:newcache	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:newcache(cwd)$/;"	f
s:nocache	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nocache(...)$/;"	f
s:nocache	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:nocache()$/;"	f
s:nocache	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! s:nocache()$/;"	f
s:none	.config/nvim/bundle/oceanic-next/colors/OceanicNext.vim	/^  let s:none=['NONE', 'NONE']$/;"	v
s:none	.config/nvim/bundle/oceanic-next/colors/OceanicNextLight.vim	/^  let s:none=['NONE', 'NONE']$/;"	v
s:nord0	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord0 = ["#2E3440", "NONE"]$/;"	v
s:nord1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord1 = ["#3B4252", 0]$/;"	v
s:nord10	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord10 = ["#5E81AC", 12]$/;"	v
s:nord11	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord11 = ["#BF616A", 1]$/;"	v
s:nord12	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord12 = ["#D08770", 11]$/;"	v
s:nord13	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord13 = ["#EBCB8B", 3]$/;"	v
s:nord14	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord14 = ["#A3BE8C", 2]$/;"	v
s:nord15	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord15 = ["#B48EAD", 5]$/;"	v
s:nord2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord2 = ["#434C5E", "NONE"]$/;"	v
s:nord3	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord3 = ["#4C566A", 8]$/;"	v
s:nord4	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord4 = ["#D8DEE9", "NONE"]$/;"	v
s:nord5	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord5 = ["#E5E9F0", 7]$/;"	v
s:nord6	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord6 = ["#ECEFF4", 15]$/;"	v
s:nord7	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord7 = ["#8FBCBB", 14]$/;"	v
s:nord8	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord8 = ["#88C0D0", 6]$/;"	v
s:nord9	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord9 = ["#81A1C1", 4]$/;"	v
s:normal1	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:normal1   = [s:base10[0], s:base0C[0], s:base10[1], s:base0C[1]]$/;"	v
s:normal1	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:normal1   = [s:base10[0], s:base0C[0], s:base10[1], s:base0C[1]]$/;"	v
s:normal2	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:normal2   = [s:base07[0], s:base03[0], s:base07[1], s:base03[1]]$/;"	v
s:normal2	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:normal2   = [s:base07[0], s:base03[0], s:base07[1], s:base03[1]]$/;"	v
s:normal3	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:normal3   = [s:base07[0], s:base01[0], s:base07[1], s:base01[1]]$/;"	v
s:normal3	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:normal3   = [s:base07[0], s:base01[0], s:base07[1], s:base01[1]]$/;"	v
s:normalize	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:normalize(result) abort$/;"	f
s:nosort	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosort()$/;"	f
s:nosplit	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosplit()$/;"	f
s:notify	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! s:notify(method, args) dict$/;"	f
s:nr	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:nr(x) abort$/;"	f
s:nvim_job_exit_wrapper	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_exit_wrapper(real_cb, job, exit_code, event_type) abort$/;"	f
s:nvim_job_out_wrapper	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_out_wrapper(real_cb, job, lines, event_type) abort$/;"	f
s:offset	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:offset(lines, height)$/;"	f
s:olive	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:olive = '#dfaf5f'$/;"	v
s:olive	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:olive = '#718c00'$/;"	v
s:on_async_response	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! s:on_async_response(id, resp, isErr) dict$/;"	f
s:on_exit	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! s:on_exit(name, code) abort$/;"	f
s:on_exit	.config/nvim/bundle/coc.nvim/autoload/coc/task.vim	/^function! s:on_exit(id, code) abort$/;"	f
s:on_exit	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:on_exit(_job, _data, _event) abort dict$/;"	f
s:on_stderr	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! s:on_stderr(name, msgs)$/;"	f
s:on_stderr	.config/nvim/bundle/coc.nvim/autoload/coc/task.vim	/^function! s:on_stderr(id, msgs)$/;"	f
s:on_stdout	.config/nvim/bundle/coc.nvim/autoload/coc/task.vim	/^function! s:on_stdout(id, msgs)$/;"	f
s:openfile	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:openfile(cmd, fid, tail, chkmod, ...)$/;"	f
s:opts	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:opts(...)$/;"	f
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:orange = [ '#ff0000', 9 ]$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:orange = [ '#ef7c2a' , 202 ]$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:orange = '#f5871f'$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:orange = '#de935f'$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:orange = '#ffc58f'$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:orange = '#e78c45'$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:orange = '#f99157'$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:orange = [ '#fad07a', 222 ]$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:orange = [ '#ef5939', 166 ]$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:orange = [ '#d7875f', 216 ]$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:orange = [ '#cb4b16', s:cuicolors.orange[s:cuiindex] ]$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:orange = [ '#d75f00', 166 ]$/;"	v
s:orange	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:orange = [ '#e5786d', 173 ]$/;"	v
s:osascript	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! s:osascript(...) abort$/;"	f
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.right = [ [ s:base02, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.left = [ [ s:base3, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.error = [ [ s:base2, s:red ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.left = [ [ s:base3, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.warning = [ [ s:base02, s:yellow ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.left = [ [ s:base3, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.left = [ [ s:base3, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.left = [ [ s:lightGray, s:darkGray ], [ s:white, s:darkGray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.right = [ [ s:darkGray, s:gray ], [ s:darkGray, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.left = [ [ s:white, s:green ], [ s:white, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.right = copy(s:p.insert.left)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.error = [ [ s:red, s:darkGray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.left = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.right = copy(s:p.normal.left)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.warning = [ [ s:orange, s:darkGray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.left = [ [ s:white, s:red ], [ s:white, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.right = copy(s:p.replace.left)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.left = [ [ s:lightGray, s:darkGray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.middle = [ [ s:yellow, s:veryDarkGray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.right = copy(s:p.tabline.left)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.tabsel = [ [ s:darkGray, s:yellow ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.left = [ [ s:white, s:orange ], [ s:white, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.right = copy(s:p.visual.left)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.insert.left = [ [ s:background, s:blue], [ s:statusline_active_fg, s:status ], [ s:statu/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ /;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.visual.left = [ [ s:visual_fg, s:visual_bg ], [s:statusline_active_fg, s:status ], [ s:s/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.insert.left = [ [ s:blue, s:background ], [ s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ /;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.warning = [ [ s:background, s:olive ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.visual.left = [ [ s:background, s:orange ], [s:statusline_active_fg, s:status ], [ s:sta/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.error = [ [ s:red, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base0 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base00 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base0 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.left =  [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.right = [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:gray ] ] $/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.right = [ [ s:black, s:green ], [ s:green, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.left = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.right = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.right = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.left = [ [ s:blue, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.middle = [ [ s:blue, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.right = [ [ s:black, s:blue ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:blue ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.right = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue], [ '#abb2bf', '#3e/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.left = [ [ '#292c33', '#61afef', s:term_black, s:term_blue, 'bold' ], [ '#61afef'/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.middle = s:p.normal.middle$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue ], [ '#ABB2BF', '#3E4/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.error = [ [ '#292c33', '#e06c75', s:term_black, s:term_red ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.left = [ [ '#292c33', '#98c379', s:term_black, s:term_green, 'bold' ], [ '#98c379/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.middle = [ [ '#abb2bf', '#292c33', s:term_white, s:term_black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.right = [ [ '#292c33', '#98c379', s:term_black, s:term_green ], [ '#abb2bf', '#3e/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.warning = [ [ '#292c33', '#e5c07b', s:term_black, s:term_yellow ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.left = [ [ '#292c33', '#e06c75', s:term_black, s:term_red, 'bold' ], [ '#e06c75'/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.right = [ [ '#292c33', '#e06c75', s:term_black, s:term_red, 'bold' ], s:p.normal/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.left = [ s:p.normal.left[1] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.middle = s:p.normal.middle$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.right = [ s:p.normal.left[1] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.tabsel = [ s:p.normal.left[0] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.left = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple, 'bold' ], [ '#c678d/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.right = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple, 'bold' ], s:p.norm/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.replace.left = [ [ s:base02, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.middle = [ [ '#303030', '#121212', 236, 233 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.right = [ [ '#121212', '#606060', 233, 241 ], [ '#121212', '#3a3a3a', 233, 237 /;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.insert.left =  [ ['#005f00', '#ffffff', 22, 231, 'bold' ], [ '#ffffff', '#005f00', 231, /;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.error = [ [ '#d0d0d0', '#ff0000', 252, 196 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.left = [ ['#0000ff', '#ffffff', 21, 231, 'bold' ], [ '#ffffff', '#0000ff', 231, 2/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.middle = [ [ '#8a8a8a', '#303030', 245, 236 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.right = [ [ '#303030', '#d0d0d0', 236, 252 ], [ '#303030', '#8a8a8a', 236, 245 ],/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.warning = [ [ '#262626', '#ffff00', 235, 226 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.replace.left = [ [ '#af0000', '#ffffff', 124, 231, 'bold' ], [ '#ffffff', '#af0000', 231/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.left = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.middle = [ [ '#8a8a8a', '#3a3a3a', 245, 237 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.right = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.tabsel = [ [ '#dadada', '#121212', 253, 233 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.visual.left = [ [ '#5f00ff', '#ffffff', 57, 231, 'bold' ], [ '#ffffff', '#5f00ff', 231, /;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.left   = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.insert.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.right  = [ [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.left =  [ [ s:pink, s:black ], [ s:white, s:black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.middle = [ [ s:gray, s:black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.right = [ [ s:white, s:pink ], [ s:pink, s:black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.error = [ [ s:pink, s:black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.left = [ [ s:black, s:cyan ], [ s:orange, s:black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.middle = [ [ s:orange, s:black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.right = [ [ s:pink, s:black ], [ s:black, s:pink ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.left = [ [ s:pink, s:black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.middle = [ [ s:pink, s:black] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:pink ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:black ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.left =  [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.middle = [ [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.insert.left = [ [ s:nord1, s:nord6 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.error = [ [ s:nord1, s:nord11 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.left = [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.warning = [ [ s:nord1, s:nord13 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.replace.left = [ [ s:nord1, s:nord13 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.left = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.right = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.tabsel = [ [ s:nord1, s:nord8 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.visual.left = [ [ s:nord1, s:nord7 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['white', 'darkblue'] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.right = [ [ 'darkestcyan', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediu/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.middle = [ [ 'gray7', 'gray2' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.right = [ ['gray5', 'gray10'], ['gray9', 'gray4'], ['gray8', 'gray2'] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray4' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray8' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray3' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.visual.left = [ ['darkred', 'brightorange', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.replace.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.visual.left = [ [ s:base02, s:peach ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.middle = [ [ s:base01, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.right = [ [ s:base03, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.insert.left = [ [ s:base03, s:green ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.left = [ [ s:base03, s:blue ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.right = [ [ s:base03, s:base1 ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.warning = [ [ s:base03, s:yellow ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.replace.left = [ [ s:base03, s:red ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.left = [ [ s:base03, s:base00 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.tabsel = [ [ s:base03, s:base1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.visual.left = [ [ s:base03, s:magenta ], [ s:base03, s:base00 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.insert.left = [ [ s:base02, s:bright_green, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.left = [ [ s:base02, s:bright_blue, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.replace.left = [ [ s:base3, s:red, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00, 'bold'] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.visual.left = [ [ s:base3, s:bright_magenta, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base02 ], [ s:base00, s:base023 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.right = [ [ s:base023, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base03 ] ]$/;"	v
s:p	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p = {"normal": {}, "inactive": {}, "insert": {}, "replace": {}, "visual": {}, "tabline": {/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.inactive.left = [[["#d8dee9", 253], ["#65737e", 243]], [["#d8dee9", 253], ["#343d46", 23/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.inactive.middle = [[["#65737e", 243], ["#343d46", 237]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.inactive.right = [[["#d8dee9", 253], ["#343d46", 237]], [["#d8dee9", 253], ["#65737e", 2/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.insert.left = [[["#ffffff", 15], ["#99c794", 114]], [["#ffffff", 15], ["#65737e", 243]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.insert.middle = [[["#ffffff", 15], ["#343d46", 237]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.insert.right = [[["#ffffff", 15], ["#65737e", 243]], [["#ffffff", 15], ["#99c794", 114]]/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.normal.error = [[["#ffffff", 15], ["#ec5f67", 203]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.normal.left = [[["#ffffff", 15], ["#6699cc", 68]], [["#ffffff", 15], ["#65737e", 243]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.normal.middle = [[["#ffffff", 15], ["#343d46", 237]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.normal.right = [[["#ffffff", 15], ["#65737e", 243]], [["#ffffff", 15], ["#65737e", 243]]/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.normal.warning = [[["#ffffff", 15], ["#fac863", 221]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.replace.left = [[["#ffffff", 15], ["#ec5f67", 203]], [["#ffffff", 15], ["#65737e", 243]]/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.replace.middle = [[["#ffffff", 15], ["#343d46", 237]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.replace.right = [[["#ffffff", 15], ["#65737e", 243]], [["#ffffff", 15], ["#ec5f67", 203]/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.tabline.left = [[["#65737e", 243], ["#343d46", 237]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.tabline.middle = [[["#65737e", 243], ["#343d46", 237]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.tabline.right = [[["#65737e", 243], ["#343d46", 237]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.tabline.tabsel = [[["#ffffff", 15], ["#65737e", 243]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.visual.left = [[["#ffffff", 15], ["#f99157", 209]], [["#ffffff", 15], ["#65737e", 243]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.visual.middle = [[["#ffffff", 15], ["#343d46", 237]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnext.vim	/^let s:p.visual.right = [[["#ffffff", 15], ["#65737e", 243]], [["#ffffff", 15], ["#f99157", 209]]/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p = {"normal": {}, "inactive": {}, "insert": {}, "replace": {}, "visual": {}, "tabline": {/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.inactive.left = [[["#1b2b34", 235], ["#a7adba", 145]], [["#1b2b34", 235], ["#cdd3de", 25/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.inactive.middle = [[["#a7adba", 145], ["#cdd3de", 252]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.inactive.right = [[["#1b2b34", 235], ["#cdd3de", 252]], [["#1b2b34", 235], ["#a7adba", 1/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.insert.left = [[["#ffffff", 15], ["#869235", 101]], [["#ffffff", 15], ["#a7adba", 145]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.insert.middle = [[["#ffffff", 15], ["#cdd3de", 252]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.insert.right = [[["#ffffff", 15], ["#a7adba", 145]], [["#ffffff", 15], ["#869235", 101]]/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.normal.error = [[["", ], ["", ]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.normal.left = [[["#ffffff", 15], ["#526f93", 60]], [["#ffffff", 15], ["#a7adba", 145]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.normal.middle = [[["#ffffff", 15], ["#cdd3de", 252]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.normal.right = [[["#ffffff", 15], ["#a7adba", 145]], [["#ffffff", 15], ["#a7adba", 145]]/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.normal.warning = [[["", ], ["", ]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.replace.left = [[["#ffffff", 15], ["#b40b11", 124]], [["#ffffff", 15], ["#a7adba", 145]]/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.replace.middle = [[["#ffffff", 15], ["#cdd3de", 252]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.replace.right = [[["#ffffff", 15], ["#a7adba", 145]], [["#ffffff", 15], ["#b40b11", 124]/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.tabline.left = [[["#a7adba", 145], ["#cdd3de", 252]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.tabline.middle = [[["#a7adba", 145], ["#cdd3de", 252]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.tabline.right = [[["#a7adba", 145], ["#cdd3de", 252]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.tabline.tabsel = [[["#ffffff", 15], ["#a7adba", 145]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.visual.left = [[["#ffffff", 15], ["#b4713d", 131]], [["#ffffff", 15], ["#a7adba", 145]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.visual.middle = [[["#ffffff", 15], ["#cdd3de", 252]]]$/;"	v
s:p	.config/nvim/bundle/oceanic-next/autoload/lightline/colorscheme/oceanicnextlight.vim	/^let s:p.visual.right = [[["#ffffff", 15], ["#a7adba", 145]], [["#ffffff", 15], ["#b4713d", 131]]/;"	v
s:package_file	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^let s:package_file = s:root.'\/package.json'$/;"	v
s:parent_icon	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:parent_icon = get(g:, 'defx_icons_parent_icon', '')$/;"	v
s:parse_options	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! s:parse_options(cmdline) abort$/;"	f
s:parseline	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:parseline(line)$/;"	f
s:parts	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:parts(str)$/;"	f
s:path	.config/nvim/init.vim	/^let s:path = fnamemodify(expand('$MYVIMRC'), ':h')$/;"	v
s:pathshorten	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:pathshorten(str)$/;"	f
s:pattern	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^function! s:pattern(xs, ...) abort$/;"	f
s:pattern	.config/nvim/bundle/vista.vim/syntax/vista_kind.vim	/^let s:pattern = join(s:prefixes, '\\|')$/;"	v
s:pattern_matches	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:pattern_matches = extend({$/;"	v
s:peach	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:peach = [ '#d7afaf', 181 ]$/;"	v
s:pink	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:pink = '#afdf00'$/;"	v
s:pink	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:pink = '#d7005f'$/;"	v
s:pink	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:pink = [ '#f92672', 161 ]$/;"	v
s:plugin	.config/nvim/bundle/coc.nvim/src/__tests__/vimrc	/^let s:plugin = s:dir.'\/plugins'$/;"	v
s:popup_timer	.config/nvim/bundle/vista.vim/autoload/vista/popup.vim	/^let s:popup_timer = -1$/;"	v
s:prefixes	.config/nvim/bundle/vista.vim/syntax/vista_kind.vim	/^let s:prefixes = filter($/;"	v
s:prepare_env	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:prepare_env = {$/;"	v
s:prev_wildignore	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:prev_wildignore = ''$/;"	v
s:process	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:process(entries, type)$/;"	f
s:process	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:process(fname, ftype)$/;"	f
s:process	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:process(clines, ...)$/;"	f
s:process_options_file	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
s:proj_cache	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:proj_cache = {}$/;"	v
s:project_sink	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:project_sink(line) abort$/;"	f
s:provider	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	.config/nvim/bundle/vista.vim/autoload/vista/executive/lcn.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	.config/nvim/bundle/vista.vim/autoload/vista/executive/vim_lsp.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	.config/nvim/bundle/vista.vim/autoload/vista/extension/markdown.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:purple	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:purple = [ '#9876aa', 104 ]$/;"	v
s:purple	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:purple = '#82aaff'$/;"	v
s:purple	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:purple = '#c792ea'$/;"	v
s:purple	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:purple = [ '#c678dd', 176 ]$/;"	v
s:quit	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^  let s:quit = "quit"$/;"	v
s:quit	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^let s:quit = ""$/;"	v
s:re_unquoted_match	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! s:re_unquoted_match(match) abort$/;"	f
s:rebase_abbrevs	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:rebase_abbrevs = {$/;"	v
s:record	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:record(bufnr)$/;"	f
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:red = [ '#800000', 1 ]$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:red = [ '#f92672' , 161 ]$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:red = '#df0000'$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:red = '#df0000'$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:red = '#c82829'$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:red = '#cc6666'$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:red = '#ff9da4'$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:red = '#d54e53'$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:red = '#f2777a'$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:red = [ '#ff6b68', 204 ]$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:red = [ '#cf6a4c', 167 ]$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:red = [ '#ff0000', 160 ]$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:red = [ '#d68787', 131 ]$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:red = [ '#dc322f', s:cuicolors.red[s:cuiindex] ]$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:red = [ '#ff3128', 1 ]$/;"	v
s:red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:red = [ '#e5786d', 203 ]$/;"	v
s:red1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red1   = '#ec5f67'$/;"	v
s:red1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red1   = '#f07178'$/;"	v
s:red1	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red1   = [ '#e06c75', 168 ]$/;"	v
s:red2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red2   = '#ec5f67'$/;"	v
s:red2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red2   = '#ff5370'$/;"	v
s:red2	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red2   = [ '#be5046', 168 ]$/;"	v
s:redirects	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:redirects = {}$/;"	v
s:reformat	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:reformat(mrufs, ...)$/;"	f
s:regexfilter	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regexfilter(str)$/;"	f
s:regisfilter	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regisfilter(reg)$/;"	f
s:registered	.config/nvim/bundle/vista.vim/autoload/vista/autocmd.vim	/^let s:registered = []$/;"	v
s:reload_only	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^let s:reload_only = v:false$/;"	v
s:reload_only	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^let s:reload_only = v:false$/;"	v
s:reload_only	.config/nvim/bundle/vista.vim/autoload/vista/executive/lcn.vim	/^let s:reload_only = v:false$/;"	v
s:reload_only	.config/nvim/bundle/vista.vim/autoload/vista/executive/vim_lsp.vim	/^let s:reload_only = v:false$/;"	v
s:remarksigns	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:remarksigns()$/;"	f
s:remove_quote_pairs	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! s:remove_quote_pairs(s) abort$/;"	f
s:replace1	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:replace1  = [s:base10[0], s:base08[0], s:base10[1], s:base08[1]]$/;"	v
s:replace1	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:replace1  = [s:base10[0], s:base08[0], s:base10[1], s:base08[1]]$/;"	v
s:replace2	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:replace2  = [s:base07[0], s:base03[0], s:base07[1], s:base03[1]]$/;"	v
s:replace2	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:replace2  = [s:base07[0], s:base03[0], s:base07[1], s:base03[1]]$/;"	v
s:replace3	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:replace3  = [s:base07[0], s:base01[0], s:base07[1], s:base01[1]]$/;"	v
s:replace3	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:replace3  = [s:base07[0], s:base01[0], s:base07[1], s:base01[1]]$/;"	v
s:repo_bare	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
s:repo_config	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_config(name) dict abort$/;"	f
s:repo_dir	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
s:repo_find	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_find(object) dict abort$/;"	f
s:repo_git_chomp	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
s:repo_git_chomp_in_tree	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
s:repo_git_command	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
s:repo_head	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
s:repo_prepare	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_prepare(...) dict abort$/;"	f
s:repo_prototype	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repo_rev_parse	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
s:repo_superglob	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
s:repo_translate	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_translate(rev) dict abort$/;"	f
s:repo_tree	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
s:repo_user	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
s:repos	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:repos = {}$/;"	v
s:request	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! s:request(method, args) dict$/;"	f
s:request_async	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! s:request_async(method, args, cb) dict$/;"	f
s:rgb	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:rgb(r, g, b) abort$/;"	f
s:root	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	.config/nvim/bundle/coc.nvim/autoload/health/coc.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	.config/nvim/bundle/coc.nvim/plugin/coc.vim	/^let s:root = expand('<sfile>:h:h')$/;"	v
s:root	.config/nvim/bundle/coc.nvim/src/__tests__/vimrc	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root_opened_tree_icon	.config/nvim/bundle/defx-icons/plugin/defx_icons.vim	/^let s:root_opened_tree_icon = get(g:, 'defx_icons_root_opened_tree_icon', '')$/;"	v
s:runner_exe	.config/nvim/bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = gutentags#get_plat_file('update_tags')$/;"	v
s:running_task	.config/nvim/bundle/coc.nvim/autoload/coc/task.vim	/^let s:running_task = {}$/;"	v
s:safe_printf	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:safe_printf(format, ...)$/;"	f
s:samerootsyml	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:samerootsyml(each, isfile, cwd)$/;"	f
s:sanstail	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sanstail(str)$/;"	f
s:save_cpo	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.config/nvim/bundle/lightline.vim/autoload/lightline/colortable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.config/nvim/bundle/lightline.vim/autoload/lightline/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.config/nvim/bundle/lightline.vim/plugin/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:savebookmark	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:savebookmark(name, cwd)$/;"	f
s:saved_cursor	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^let s:saved_cursor = &guicursor$/;"	v
s:saved_ve	.config/nvim/bundle/coc.nvim/autoload/coc/list.vim	/^let s:saved_ve = &t_ve$/;"	v
s:savetofile	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:savetofile(mrufs)$/;"	f
s:scope_icon	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^let s:scope_icon = ['⊕', '⊖']$/;"	v
s:scope_icon	.config/nvim/bundle/vista.vim/autoload/vista/renderer/line.vim	/^let s:scope_icon = ['⊕', '⊖']$/;"	v
s:select_api	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^let s:select_api = exists('*nvim_select_popupmenu_item')$/;"	v
s:set_custom	.config/nvim/bundle/defx.nvim/autoload/defx/custom.vim	/^function! s:set_custom(dest, name_or_dict, value) abort$/;"	f
s:setentries	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:setentries()$/;"	f
s:setlines_post	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setlines_post()$/;"	f
s:setlines_pre	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setlines_pre(...)$/;"	f
s:settype	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:settype(type)$/;"	f
s:setupblank	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setupblank()$/;"	f
s:shellesc	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
s:shortest	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:shortest(lens)$/;"	f
s:should_display	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^let s:should_display = v:false$/;"	v
s:should_display	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^let s:should_display = v:false$/;"	v
s:should_display	.config/nvim/bundle/vista.vim/autoload/vista/executive/lcn.vim	/^let s:should_display = v:false$/;"	v
s:should_display	.config/nvim/bundle/vista.vim/autoload/vista/executive/vim_lsp.vim	/^let s:should_display = v:false$/;"	v
s:sink	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:sink(line) abort$/;"	f
s:solarized_termcolors	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:solarized_termcolors = get(g:, 'solarized_termcolors', 256)$/;"	v
s:start	.config/nvim/bundle/coc.nvim/autoload/coc/client.vim	/^function! s:start() dict$/;"	f
s:status	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:status = '#c6c6c6'$/;"	v
s:status	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:status = s:aqua$/;"	v
s:statusline_active_bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_bg = '#5f8787'$/;"	v
s:statusline_active_bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_bg = s:navy$/;"	v
s:statusline_active_fg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_fg = '#1c1c1c'$/;"	v
s:statusline_active_fg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_fg = s:window$/;"	v
s:statusline_inactive_bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_bg = '#444444'$/;"	v
s:statusline_inactive_bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_bg = '#dadada'$/;"	v
s:statusline_inactive_fg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_fg = '#c6c6c6'$/;"	v
s:statusline_inactive_fg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_fg = s:foreground$/;"	v
s:strwidth	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:strwidth(str)$/;"	f
s:strwidthpart	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart_reverse	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:sub	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
s:sublist	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist(l, s, e)$/;"	f
s:sublist7071	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist7071(l, s, e)$/;"	f
s:subseparator	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:subseparator(components, subseparator, expanded) abort$/;"	f
s:subseparator	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:subseparator(...)$/;"	f
s:substitute_path_separator	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
s:suite	.config/nvim/bundle/defx.nvim/test/autoload/defx/custom.vim	/^let s:suite = themis#suite('custom')$/;"	v
s:suite	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^let s:suite = themis#suite('concatenate')$/;"	v
s:suite	.config/nvim/bundle/lightline.vim/test/error.vim	/^let s:suite = themis#suite('error')$/;"	v
s:suite	.config/nvim/bundle/lightline.vim/test/expand.vim	/^let s:suite = themis#suite('expand')$/;"	v
s:suite	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^let s:suite = themis#suite('highlight')$/;"	v
s:suite	.config/nvim/bundle/lightline.vim/test/link.vim	/^let s:suite = themis#suite('link')$/;"	v
s:suite	.config/nvim/bundle/lightline.vim/test/mode.vim	/^let s:suite = themis#suite('mode')$/;"	v
s:suite	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^let s:suite = themis#suite('onetab')$/;"	v
s:suite	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^let s:suite = themis#suite('subseparator')$/;"	v
s:suite	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^let s:suite = themis#suite('tabline')$/;"	v
s:suite	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^let s:suite = themis#suite('tabs')$/;"	v
s:suite	.config/nvim/bundle/lightline.vim/test/toggle.vim	/^let s:suite = themis#suite('toggle')$/;"	v
s:suite	.config/nvim/bundle/lightline.vim/test/uniq.vim	/^let s:suite = themis#suite('uniq')$/;"	v
s:suite.active_inactive	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.active_inactive()$/;"	f
s:suite.before_each	.config/nvim/bundle/defx.nvim/test/autoload/defx/custom.vim	/^function! s:suite.before_each() abort$/;"	f
s:suite.before_each	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	.config/nvim/bundle/lightline.vim/test/link.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	.config/nvim/bundle/lightline.vim/test/toggle.vim	/^function! s:suite.before_each()$/;"	f
s:suite.component_raw	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.component_raw()$/;"	f
s:suite.component_type	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.component_type()$/;"	f
s:suite.component_type	.config/nvim/bundle/lightline.vim/test/link.vim	/^function! s:suite.component_type()$/;"	f
s:suite.custom	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom()$/;"	f
s:suite.custom_column	.config/nvim/bundle/defx.nvim/test/autoload/defx/custom.vim	/^function! s:suite.custom_column() abort$/;"	f
s:suite.custom_error	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_error()$/;"	f
s:suite.custom_left_nil	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_left_nil()$/;"	f
s:suite.custom_mixed	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed()$/;"	f
s:suite.custom_mixed_2	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed_2()$/;"	f
s:suite.custom_number	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_number()$/;"	f
s:suite.custom_one	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_one()$/;"	f
s:suite.custom_option	.config/nvim/bundle/defx.nvim/test/autoload/defx/custom.vim	/^function! s:suite.custom_option() abort$/;"	f
s:suite.custom_right_nil	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_right_nil()$/;"	f
s:suite.custom_source	.config/nvim/bundle/defx.nvim/test/autoload/defx/custom.vim	/^function! s:suite.custom_source() abort$/;"	f
s:suite.custom_string	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_string()$/;"	f
s:suite.custom_two	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_two()$/;"	f
s:suite.custom_type	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type()$/;"	f
s:suite.custom_type_error	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_error()$/;"	f
s:suite.custom_type_flatten	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_flatten()$/;"	f
s:suite.custom_type_left_nil	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_left_nil()$/;"	f
s:suite.custom_type_mixed	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed()$/;"	f
s:suite.custom_type_mixed_2	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed_2()$/;"	f
s:suite.custom_type_notfound	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_notfound()$/;"	f
s:suite.custom_type_number	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_number()$/;"	f
s:suite.custom_type_one	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_one()$/;"	f
s:suite.custom_type_right_nil	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_right_nil()$/;"	f
s:suite.custom_type_string	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_string()$/;"	f
s:suite.custom_type_two	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_two()$/;"	f
s:suite.custom_type_void_string	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string()$/;"	f
s:suite.custom_type_void_string_array	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array()$/;"	f
s:suite.custom_type_void_string_array_2	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_2()$/;"	f
s:suite.custom_type_void_string_array_3	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_3()$/;"	f
s:suite.custom_type_void_string_array_4	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_4()$/;"	f
s:suite.custom_void_string	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string()$/;"	f
s:suite.custom_void_string_array	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array()$/;"	f
s:suite.custom_void_string_array_2	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_2()$/;"	f
s:suite.custom_void_string_array_3	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_3()$/;"	f
s:suite.custom_void_string_array_4	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_4()$/;"	f
s:suite.default	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.default()$/;"	f
s:suite.default	.config/nvim/bundle/lightline.vim/test/toggle.vim	/^function! s:suite.default()$/;"	f
s:suite.dictionary_function	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.dictionary_function()$/;"	f
s:suite.disable_enable	.config/nvim/bundle/lightline.vim/test/toggle.vim	/^function! s:suite.disable_enable()$/;"	f
s:suite.disabled	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.disabled()$/;"	f
s:suite.duplicated_both_nil	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil()$/;"	f
s:suite.duplicated_both_nil_left_most	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_left_most()$/;"	f
s:suite.duplicated_both_nil_right_most	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_right_most()$/;"	f
s:suite.duplicated_left_nil	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_left_nil()$/;"	f
s:suite.duplicated_right_nil	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_right_nil()$/;"	f
s:suite.duplicated_string	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_string()$/;"	f
s:suite.duplicated_type_both_nil	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil()$/;"	f
s:suite.duplicated_type_both_nil_left_most	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_left_most()$/;"	f
s:suite.duplicated_type_both_nil_right_most	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_right_most()$/;"	f
s:suite.duplicated_type_left_nil	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_left_nil()$/;"	f
s:suite.duplicated_type_right_nil	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_right_nil()$/;"	f
s:suite.enabled	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.enabled()$/;"	f
s:suite.error	.config/nvim/bundle/lightline.vim/test/error.vim	/^function! s:suite.error()$/;"	f
s:suite.expand	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.expand()$/;"	f
s:suite.filename	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.filename()$/;"	f
s:suite.filename_modified	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.filename_modified()$/;"	f
s:suite.flatten	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.flatten()$/;"	f
s:suite.highlight	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.highlight()$/;"	f
s:suite.insert	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.insert()$/;"	f
s:suite.insert	.config/nvim/bundle/lightline.vim/test/link.vim	/^function! s:suite.insert()$/;"	f
s:suite.keep_original	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.keep_original()$/;"	f
s:suite.left_right	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.left_right()$/;"	f
s:suite.left_right	.config/nvim/bundle/lightline.vim/test/link.vim	/^function! s:suite.left_right()$/;"	f
s:suite.link	.config/nvim/bundle/lightline.vim/test/link.vim	/^function! s:suite.link()$/;"	f
s:suite.many1	.config/nvim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.many1()$/;"	f
s:suite.many2	.config/nvim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.many2()$/;"	f
s:suite.many3	.config/nvim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.many3()$/;"	f
s:suite.mode	.config/nvim/bundle/lightline.vim/test/mode.vim	/^function! s:suite.mode()$/;"	f
s:suite.mode_map	.config/nvim/bundle/lightline.vim/test/mode.vim	/^function! s:suite.mode_map()$/;"	f
s:suite.modified	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.modified()$/;"	f
s:suite.multiple	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.multiple()$/;"	f
s:suite.multiple_type	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.multiple_type()$/;"	f
s:suite.nil	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.nil()$/;"	f
s:suite.nil	.config/nvim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.nil()$/;"	f
s:suite.no_components	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.no_components()$/;"	f
s:suite.notfound	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.notfound()$/;"	f
s:suite.one	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.one()$/;"	f
s:suite.one	.config/nvim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.one()$/;"	f
s:suite.one_empty	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.one_empty()$/;"	f
s:suite.onetab	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.onetab()$/;"	f
s:suite.raw_type	.config/nvim/bundle/lightline.vim/test/expand.vim	/^function! s:suite.raw_type()$/;"	f
s:suite.replace	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.replace()$/;"	f
s:suite.replace	.config/nvim/bundle/lightline.vim/test/link.vim	/^function! s:suite.replace()$/;"	f
s:suite.subseparator	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.subseparator()$/;"	f
s:suite.subseparator	.config/nvim/bundle/lightline.vim/test/link.vim	/^function! s:suite.subseparator()$/;"	f
s:suite.subseparator_component	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component()$/;"	f
s:suite.subseparator_component_expand	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand()$/;"	f
s:suite.subseparator_component_expand_1	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_1()$/;"	f
s:suite.subseparator_component_expand_2	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_2()$/;"	f
s:suite.subseparator_component_expand_3	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_3()$/;"	f
s:suite.subseparator_component_function	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function()$/;"	f
s:suite.subseparator_component_function_1	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_1()$/;"	f
s:suite.subseparator_component_function_2	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_2()$/;"	f
s:suite.subseparator_component_function_3	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_3()$/;"	f
s:suite.subseparator_component_function_4	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_4()$/;"	f
s:suite.subseparator_component_function_5	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_5()$/;"	f
s:suite.subseparator_component_function_6	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_6()$/;"	f
s:suite.subseparator_component_function_7	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_7()$/;"	f
s:suite.subseparator_component_function_visible_condition_1	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_1()$/;"	f
s:suite.subseparator_component_function_visible_condition_2	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_2()$/;"	f
s:suite.subseparator_component_function_visible_condition_3	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_3()$/;"	f
s:suite.subseparator_component_function_visible_condition_4	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_4()$/;"	f
s:suite.subseparator_component_function_visible_condition_5	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_5()$/;"	f
s:suite.subseparator_component_function_visible_condition_6	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_6()$/;"	f
s:suite.subseparator_component_function_visible_condition_7	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_7()$/;"	f
s:suite.subseparator_component_not_found	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found()$/;"	f
s:suite.subseparator_component_not_found_1	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_1()$/;"	f
s:suite.subseparator_component_not_found_2	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_2()$/;"	f
s:suite.subseparator_component_visible_condition_1	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_1()$/;"	f
s:suite.subseparator_component_visible_condition_2	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_2()$/;"	f
s:suite.subseparator_component_visible_condition_3	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_3()$/;"	f
s:suite.subseparator_component_visible_condition_4	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_4()$/;"	f
s:suite.subseparator_component_visible_condition_5	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_5()$/;"	f
s:suite.subseparator_component_visible_condition_6	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_6()$/;"	f
s:suite.subseparator_component_visible_condition_7	.config/nvim/bundle/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_7()$/;"	f
s:suite.tab_component	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component()$/;"	f
s:suite.tab_component_empty_left	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_left()$/;"	f
s:suite.tab_component_empty_middle	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_middle()$/;"	f
s:suite.tab_component_function	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_function()$/;"	f
s:suite.tabclose	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose()$/;"	f
s:suite.tabclose_last	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose_last()$/;"	f
s:suite.tabline	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabline()$/;"	f
s:suite.tabnew	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew_20	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20()$/;"	f
s:suite.tabnew_20_tabfirst	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst()$/;"	f
s:suite.tabnew_20_tabfirst_tabnext	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst_tabnext()$/;"	f
s:suite.tabnew_20_tabnext_10	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabnext_10()$/;"	f
s:suite.tabnew_20_tabprevious	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious()$/;"	f
s:suite.tabnew_20_tabprevious_tabprevious	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious_tabprevious()$/;"	f
s:suite.tabnew_first	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew_first()$/;"	f
s:suite.tabnew_tabfirst	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabfirst()$/;"	f
s:suite.tabnew_tabnew	.config/nvim/bundle/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
s:suite.tabnew_tabnew	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
s:suite.tabnew_tabnew_tabfirst	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabfirst()$/;"	f
s:suite.tabnew_tabnew_tabprevious	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabprevious()$/;"	f
s:suite.tabnext	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabnext()$/;"	f
s:suite.tabonly	.config/nvim/bundle/lightline.vim/test/tabline.vim	/^function! s:suite.tabonly()$/;"	f
s:suite.tabs	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:suite.tabs()$/;"	f
s:suite.three	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three()$/;"	f
s:suite.three	.config/nvim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.three()$/;"	f
s:suite.three_duplicated	.config/nvim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.three_duplicated()$/;"	f
s:suite.three_empty_all	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_all()$/;"	f
s:suite.three_empty_left	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left()$/;"	f
s:suite.three_empty_left_middle	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_middle()$/;"	f
s:suite.three_empty_left_right	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_right()$/;"	f
s:suite.three_empty_middle	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle()$/;"	f
s:suite.three_empty_middle_right	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle_right()$/;"	f
s:suite.three_empty_right	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_right()$/;"	f
s:suite.toggle	.config/nvim/bundle/lightline.vim/test/toggle.vim	/^function! s:suite.toggle()$/;"	f
s:suite.two	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.two()$/;"	f
s:suite.two	.config/nvim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.two()$/;"	f
s:suite.two_duplicated	.config/nvim/bundle/lightline.vim/test/uniq.vim	/^function! s:suite.two_duplicated()$/;"	f
s:suite.two_empty_both	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_both()$/;"	f
s:suite.two_empty_left	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_left()$/;"	f
s:suite.two_empty_right	.config/nvim/bundle/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_right()$/;"	f
s:suite.visual	.config/nvim/bundle/lightline.vim/test/highlight.vim	/^function! s:suite.visual()$/;"	f
s:suite.visual	.config/nvim/bundle/lightline.vim/test/link.vim	/^function! s:suite.visual()$/;"	f
s:support_json_format	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^let s:support_json_format =$/;"	v
s:symbol_kind	.config/nvim/bundle/vista.vim/autoload/vista/parser/lsp.vim	/^let s:symbol_kind = {$/;"	v
s:syntax	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:syntax()$/;"	f
s:syntax	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:syntax()$/;"	f
s:syntax	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:syntax()$/;"	f
s:syntax	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! s:syntax()$/;"	f
s:syntax	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:syntax()$/;"	f
s:syntax	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:syntax()$/;"	f
s:syntax	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:syntax()$/;"	f
s:system	.config/nvim/bundle/coc.nvim/autoload/coc/util.vim	/^function! s:system(cmd)$/;"	f
s:tab	.config/nvim/bundle/lightline.vim/test/tabs.vim	/^function! s:tab(number, ...) abort$/;"	f
s:tabcnt	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^let s:tabcnt = -1$/;"	v
s:table	.config/nvim/bundle/lightline.vim/autoload/lightline/colortable.vim	/^let s:table = s:load()$/;"	v
s:tabline	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^let s:tabline = ''$/;"	v
s:tabline_active_bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_bg = '#00afaf'$/;"	v
s:tabline_active_bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_bg = s:window$/;"	v
s:tabline_active_fg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_fg = '#1c1c1c'$/;"	v
s:tabline_active_fg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_fg = s:foreground$/;"	v
s:tabline_bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_bg = '#3a3a3a'$/;"	v
s:tabline_bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_bg = s:navy$/;"	v
s:tabline_inactive_bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_bg = '#585858'$/;"	v
s:tabline_inactive_bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_bg = s:aqua$/;"	v
s:tabline_inactive_fg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_fg = '#c6c6c6'$/;"	v
s:tabline_inactive_fg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_fg = s:background$/;"	v
s:tabnr	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^let s:tabnr = -1$/;"	v
s:tail	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:tail()$/;"	f
s:temp_files	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:term	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^function! s:term(p) abort$/;"	f
s:term_black	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_black = 235$/;"	v
s:term_blue	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_blue = 39$/;"	v
s:term_green	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_green = 114$/;"	v
s:term_grey	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_grey = 236$/;"	v
s:term_purple	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_purple = 170$/;"	v
s:term_red	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_red = 204$/;"	v
s:term_white	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_white = 145$/;"	v
s:term_yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_yellow = 180$/;"	v
s:text	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:text = map(['second', 'seconds', 'minutes', 'hours', 'days', 'weeks',$/;"	v
s:textdialog	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:textdialog(str)$/;"	f
s:throw	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:throw(string) abort$/;"	f
s:trace	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! s:trace(message) abort$/;"	f
s:trees	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:trees = {}$/;"	v
s:trim	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^function! s:trim(str)$/;"	f
s:truncate	.config/nvim/bundle/defx.nvim/autoload/defx/util.vim	/^function! s:truncate(str, width) abort$/;"	f
s:types	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:types = ['fil', 'buf', 'mru']$/;"	v
s:types	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:types = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.lang = 'ada'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.sro = '.' " Not sure if possible$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ant.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ant.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ant.vim	/^let s:types.lang = 'ant'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/asm.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/asm.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/asm.vim	/^let s:types.lang = 'asm'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/aspvbs.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/aspvbs.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/aspvbs.vim	/^let s:types.lang = 'asp'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.lang = 'c'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.sro = '::'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/automake.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/automake.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/automake.vim	/^let s:types.lang = 'automake'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/awk.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/awk.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/awk.vim	/^let s:types.lang = 'awk'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/basic.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/basic.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/basic.vim	/^let s:types.lang = 'basic'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/beta.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/beta.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/beta.vim	/^let s:types.lang = 'beta'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.lang = 'c'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.sro = '::'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.lang = 'clojure'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.sro = '.'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cobol.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cobol.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cobol.vim	/^let s:types.lang = 'cobol'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/config.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/config.vim	/^let s:types.kinds = [$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/config.vim	/^let s:types.lang = 'autoconf'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.lang = 'c++'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.sro = '::'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.lang = 'c#'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.sro = '.'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/css.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/css.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/css.vim	/^let s:types.lang = 'css'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.lang = 'ctags'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.sro = '.' " Not actually possible$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.lang = 'D'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.sro = '.'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/dosbatch.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/dosbatch.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/dosbatch.vim	/^let s:types.lang = 'dosbatch'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.lang = 'eiffel'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.sro = '.' " Not sure, is nesting even possible?$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.lang = 'elm'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.sro = ':'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.lang = 'erlang'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.sro        = '.' " Not sure, is nesting even possible?$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.lang = 'fortran'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.sro = '.' " Not sure, is nesting even possible?$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/html.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/html.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/html.vim	/^let s:types.lang = 'html'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.lang = 'java'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.sro = '.'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.lang = 'javascript'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.sro        = '.'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/lisp.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/lisp.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/lisp.vim	/^let s:types.lang = 'lisp'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/lua.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/lua.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/lua.vim	/^let s:types.lang = 'lua'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/make.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/make.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/make.vim	/^let s:types.lang = 'make'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/matlab.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/matlab.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/matlab.vim	/^let s:types.lang = 'matlab'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.lang = 'flex'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.sro        = '.'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.lang = 'objectivec'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.sro = ':'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.lang = 'ocaml'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.sro = '.' " Not sure, is nesting even possible?$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/pascal.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/pascal.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/pascal.vim	/^let s:types.lang = 'pascal'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/perl.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/perl.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/perl.vim	/^let s:types.lang = 'perl'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.lang = 'php'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.sro = '\\\\'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/proto.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/proto.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/proto.vim	/^let s:types.lang = 'Protobuf'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.kinds     = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.lang = 'python'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.sro        = '.'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/r.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/r.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/r.vim	/^let s:types.lang = 'R'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/rexx.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/rexx.vim	/^let s:types.kinds     = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/rexx.vim	/^let s:types.lang = 'rexx'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.lang = 'ruby'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.sro = '.'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.lang = 'rust'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.sro = '::'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/scheme.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/scheme.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/scheme.vim	/^let s:types.lang = 'scheme'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/sh.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/sh.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/sh.vim	/^let s:types.lang = 'sh'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/slang.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/slang.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/slang.vim	/^let s:types.lang = 'slang'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/sml.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/sml.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/sml.vim	/^let s:types.lang = 'sml'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/sql.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/sql.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/sql.vim	/^let s:types.lang = 'sql'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/tcl.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/tcl.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/tcl.vim	/^let s:types.lang = 'tcl'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.lang = 'tex'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.sort = 0$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.sro = '""'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.lang = 'vala'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.sro = '.'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.kind2scope = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.lang = 'vera'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.scope2kind = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.sro        = '.' " Nesting doesn't seem to be possible$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/verilog.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/verilog.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/verilog.vim	/^let s:types.lang = 'verilog'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vhdl.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vhdl.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vhdl.vim	/^let s:types.lang = 'vhdl'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vim.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vim.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/vim.vim	/^let s:types.lang = 'vim'$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/yacc.vim	/^let s:types = {}$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/yacc.vim	/^let s:types.kinds = {$/;"	v
s:types	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/yacc.vim	/^let s:types.lang = 'yacc'$/;"	v
s:types6	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/perl6.vim	/^let s:types6 = {}$/;"	v
s:types6	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/perl6.vim	/^let s:types6.kinds = {$/;"	v
s:types6	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/perl6.vim	/^let s:types6.lang = 'perl6'$/;"	v
s:uniq	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^  function! s:uniq(xs) abort$/;"	f
s:uniq	.config/nvim/bundle/lightline.vim/autoload/lightline.vim	/^  let s:uniq = function('uniq')$/;"	v
s:uniq	.config/nvim/bundle/lightline.vim/test/uniq.vim	/^function! s:uniq(...)$/;"	f
s:unix_redir	.config/nvim/bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unmarksigns	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:unmarksigns()$/;"	f
s:upconvert	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:upconvert(nr) abort$/;"	f
s:update_in_progress	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^    let s:update_in_progress[module] = []$/;"	v
s:update_in_progress	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^let s:update_in_progress = {}$/;"	v
s:update_queue	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:update_tags	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
s:use_winid	.config/nvim/bundle/vista.vim/autoload/vista/source.vim	/^let s:use_winid = exists('*bufwinid')$/;"	v
s:usrign	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:usrign(item, type)$/;"	f
s:vacantdict	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:vacantdict(dict)$/;"	f
s:validfile	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:validfile(fname, ftype)$/;"	f
s:var	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^let s:var = '\\%(%\\|#<\\=\\d\\+\\|##\\=\\)'$/;"	v
s:veryDarkGray	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:veryDarkGray = [ '#1c1d21' , 234 ]$/;"	v
s:viewer	.config/nvim/bundle/vista.vim/autoload/vista/renderer/kind.vim	/^let s:viewer = {}$/;"	v
s:viewer.init	.config/nvim/bundle/vista.vim/autoload/vista/renderer/kind.vim	/^function! s:viewer.init(data) abort$/;"	f
s:viewer.render	.config/nvim/bundle/vista.vim/autoload/vista/renderer/kind.vim	/^function! s:viewer.render() abort$/;"	f
s:violet	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:violet = [ '#ff00ff', 13 ]$/;"	v
s:violet	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:violet = [ '#6c71c4', s:cuicolors.violet[s:cuiindex] ]$/;"	v
s:visibility_icon	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^let s:visibility_icon = {$/;"	v
s:visibility_icon	.config/nvim/bundle/vista.vim/autoload/vista/renderer/line.vim	/^let s:visibility_icon = {$/;"	v
s:visual1	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:visual1   = [s:base10[0], s:base09[0], s:base10[1], s:base09[1]]$/;"	v
s:visual1	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:visual1   = [s:base10[0], s:base09[0], s:base10[1], s:base09[1]]$/;"	v
s:visual2	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:visual2   = [s:base07[0], s:base03[0], s:base07[1], s:base03[1]]$/;"	v
s:visual2	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:visual2   = [s:base07[0], s:base03[0], s:base07[1], s:base03[1]]$/;"	v
s:visual3	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:visual3   = [s:base07[0], s:base01[0], s:base07[1], s:base01[1]]$/;"	v
s:visual3	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:visual3   = [s:base07[0], s:base01[0], s:base07[1], s:base01[1]]$/;"	v
s:visual_bg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_bg = '#8787af'$/;"	v
s:visual_fg	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_fg = '#000000'$/;"	v
s:walker	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:walker(m, p, d)$/;"	f
s:warn	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:warn(str) abort$/;"	f
s:warning	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnext.vim	/^let s:warning   = [s:base09[0], s:base01[0], s:base09[1], s:base01[1]]$/;"	v
s:warning	.config/nvim/bundle/oceanic-next/autoload/airline/themes/oceanicnextlight.vim	/^let s:warning   = [s:base09[0], s:base01[0], s:base09[1], s:base01[1]]$/;"	v
s:warning_sign	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^let s:warning_sign = get(g:, 'coc_status_warning_sign', has('mac') ? '⚠️ ' : 'W')$/;"	v
s:watched_keys	.config/nvim/bundle/coc.nvim/autoload/coc.vim	/^let s:watched_keys = []$/;"	v
s:white	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:white = [ '#ffffff' , 15 ]$/;"	v
s:white	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:white = [ '#a9b7c6', 250 ]$/;"	v
s:white	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:white = [ '#f8f8f2', 234 ]$/;"	v
s:white	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:white = [ '#d0d0d0', 252 ]$/;"	v
s:white	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:white = [ '#fce8c3', 15 ]$/;"	v
s:wig_cond	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^let s:wig_cond = v:version > 702 || ( v:version == 702 && has('patch051') )$/;"	v
s:wildignores_options_path	.config/nvim/bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:wildignores_options_path = ''$/;"	v
s:window	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:window = '#efefef'$/;"	v
s:window	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:window = '#efefef'$/;"	v
s:winshell	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:winshell() abort$/;"	f
s:worktree_for_dir	.config/nvim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:write_triggered_update_tags	.config/nvim/bundle/vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
s:writecache	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:writecache(cafile)$/;"	f
s:writecache	.config/nvim/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:writecache(lines)$/;"	f
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:yellow = [ '#808000', 3 ]$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:yellow = [ '#e5cd52' , 221 ]$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:yellow = '#eab700'$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:yellow = '#f0c674'$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:yellow = '#ffeead'$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:yellow = '#e7c547'$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:yellow = '#ffcc66'$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:yellow = [ '#ffc66d', 222 ]$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:yellow = [ '#ffb964', 215 ]$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:yellow = '#ffcc00'$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:yellow = '#ffcb6b'$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:yellow = [ '#e6db74', 229 ]$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:yellow = [ '#e5c07b', 180 ]$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:yellow = [ '#d8af5f', 3 ]$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:yellow = [ '#b58900', s:cuicolors.yellow[s:cuiindex] ]$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:yellow = [ '#fbb829', 3 ]$/;"	v
s:yellow	.config/nvim/bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:yellow = [ '#cae682', 180 ]$/;"	v
safe_call	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/util.py	/^def safe_call(fn: typing.Callable[..., typing.Any],$/;"	f
scanner	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    const scanner = new Scanner()$/;"	C
schema	.config/nvim/bundle/coc.nvim/src/__tests__/modules/settings.json	/^  "schema": {$/;"	o
score	.config/nvim/bundle/coc.nvim/src/__tests__/completion/match.test.ts	/^function score(word: string, input: string): number {$/;"	f
score	.config/nvim/bundle/coc.nvim/src/util/match.ts	/^export function score(selector: DocumentSelector | DocumentFilter | string, uri: string, languag/;"	f
score	.config/nvim/bundle/coc.nvim/src/util/score.ts	/^  score: number$/;"	p	interface:MatchResult
scripts	.config/nvim/bundle/coc.nvim/package.json	/^  "scripts": {$/;"	o
search	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    search: str = ''$/;"	v	class:Context
search_file	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def search_file(self, path: Path, index: int) -> bool:$/;"	m	class:View
seen	.config/nvim/bundle/coc.nvim/src/util/array.ts	/^  const seen: { [key: string]: boolean } = Object.create(null)$/;"	C	function:distinct
selector	.config/nvim/bundle/coc.nvim/src/__tests__/client/converter.test.ts	/^    let selector = ['css', { language: 'javascript' }]$/;"	v
semver	.config/nvim/bundle/coc.nvim/bin/server.js	/^const semver = require('semver')$/;"	C
semver	.config/nvim/bundle/coc.nvim/package.json	/^    "semver": "^6.1.1",$/;"	s	object:dependencies
seoul256	.config/nvim/bundle/lightline.vim/README.md	/^### seoul256$/;"	S
separator	.config/neofetch/config.conf	/^separator=":"$/;"	k
server	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^    let server = net.createServer(function (stream) {$/;"	v
server	.config/nvim/bundle/coc.nvim/src/__tests__/modules/watchman.test.ts	/^let server: net.Server$/;"	v
serverModule	.config/nvim/bundle/coc.nvim/src/__tests__/client/changedFiles.test.ts	/^    let serverModule = path.join(__dirname, '.\/server\/testFileWatcher.js')$/;"	v
servers	.config/nvim/bundle/coc.nvim/src/__tests__/modules/settings.json	/^  "servers": {$/;"	o
set_wallpaper	.config/awesome/rc.lua	/^local function set_wallpaper(s)$/;"	f
settings	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "settings": {$/;"	o	object:definitions.languageServerBase.properties
settings	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerCommand.properties
settings	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerModule.properties
settings	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerSocket.properties
settings	.config/nvim/coc-settings.json	/^      "settings": {},$/;"	o	object:languageserver.flow
settings	awesome-theme/widgets/battery.lua	/^  settings = function()$/;"	f
settings	awesome-theme/widgets/net.lua	/^    settings = function()$/;"	f
severityLevel	.config/nvim/bundle/coc.nvim/src/diagnostic/util.ts	/^export function severityLevel(level: string): number {$/;"	f
shadow	.config/compton/compton.conf	/^clear-shadow = true;$/;"	k
shadow	.config/compton/compton.conf	/^no-dock-shadow = true;$/;"	k
shadow	.config/compton/compton.conf	/^shadow = true;$/;"	k
shaped	.config/compton/compton.conf	/^shadow-ignore-shaped = false;$/;"	k
shell	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "shell": {$/;"	o	object:definitions.languageServerCommand.properties
shell_path	.config/neofetch/config.conf	/^shell_path="off"$/;"	k
shell_version	.config/neofetch/config.conf	/^shell_version="on"$/;"	k
show_ignored_files	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    show_ignored_files: bool = False$/;"	v	class:Context
signature.enable	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "signature.enable": {$/;"	o	object:properties
signature.hideOnTextChange	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "signature.hideOnTextChange": {$/;"	o	object:properties
signature.maxWindowHeight	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "signature.maxWindowHeight": {$/;"	o	object:properties
signature.preferShownAbove	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "signature.preferShownAbove": {$/;"	o	object:properties
signature.target	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "signature.target": {$/;"	o	object:properties
signature.target	.config/nvim/coc-settings.json	/^  "signature.target": "echo",$/;"	s
signature.triggerSignatureWait	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "signature.triggerSignatureWait": {$/;"	o	object:properties
slash	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet format section #37562', function() {$/;"	C	function:assertText
slash	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet regex #36715', function() {$/;"	C	function:assertText
snippet	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "snippet": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
socket	.config/nvim/bundle/coc.nvim/src/language-client/index.ts	/^  socket$/;"	e	enum:TransportKind
solarized dark	.config/nvim/bundle/lightline.vim/README.md	/^### solarized dark$/;"	S
solarized light	.config/nvim/bundle/lightline.vim/README.md	/^### solarized light$/;"	S
song_format	.config/neofetch/config.conf	/^song_format="%artist% - %album% - %title%"$/;"	k
song_shorthand	.config/neofetch/config.conf	/^song_shorthand="off"$/;"	k
sort	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    sort: str = ''$/;"	v	class:Context
sort	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/sort.py	/^def sort($/;"	f
sourceMap	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "sourceMap": true,$/;"	b	object:compilerOptions
speed_shorthand	.config/neofetch/config.conf	/^speed_shorthand="on"$/;"	k
speed_type	.config/neofetch/config.conf	/^speed_type="bios_limit"$/;"	k
split	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    split: str = 'no'$/;"	v	class:Context
start	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^        def start(self, args: typing.List[typing.Any]) -> None:$/;"	m	class:DefxHandlers
start	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/rplugin.py	/^    def start(self, args: typing.List[typing.Any]) -> None:$/;"	m	class:Rplugin
startPostgres	aliases.sh	/^  alias startPostgres='pg_ctl -D $PREFIX\/var\/lib\/postgresql start'$/;"	a
stdErrPipeName	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^let stdErrPipeName = process.env['STDERR_PIPE_NAME']; \/\/ tslint:disable-line$/;"	v
stdErrStream	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^    let stdErrStream = net.connect(stdErrPipeName);$/;"	v
stdInPipeName	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^let stdInPipeName = process.env['STDIN_PIPE_NAME']; \/\/ tslint:disable-line$/;"	v
stdOutPipeName	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^let stdOutPipeName = process.env['STDOUT_PIPE_NAME']; \/\/ tslint:disable-line$/;"	v
stdOutStream	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^    let stdOutStream = net.connect(stdOutPipeName);$/;"	v
stdio	.config/nvim/bundle/coc.nvim/src/language-client/index.ts	/^  stdio,$/;"	e	enum:TransportKind
stdioEncoding	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "stdioEncoding": {$/;"	o	object:definitions.languageServerBase.properties
stdioEncoding	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerCommand.properties
stdioEncoding	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerModule.properties
stdioEncoding	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerSocket.properties
stdout	.config/neofetch/config.conf	/^stdout="off"$/;"	k
stencil	.config/compton/compton.conf	/^glx-no-stencil = true;$/;"	k
step	.config/compton/compton.conf	/^alpha-step = 0.06;$/;"	k
step	.config/compton/compton.conf	/^fade-in-step = 0.03;$/;"	k
step	.config/compton/compton.conf	/^fade-out-step = 0.03;$/;"	k
stopPostgres	aliases.sh	/^  alias stopPostgres='pg_ctl  -D $PREFIX\/var\/lib\/postgresql stop'$/;"	a
str	arch/ansi-colours.lua	/^  str = string.gsub(str,"(%%{(.-)})", function(_, str) return escapeKeys(str) end )$/;"	f
stream_url	.config/nvim/bundle/oceanic-next/test/test.js	/^      stream_url: streamUrl$/;"	p	class:SoundCloudAudio.preload._track
strictFunctionTypes	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "strictFunctionTypes": false,$/;"	b	object:compilerOptions
strictNullChecks	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "strictNullChecks": false,$/;"	b	object:compilerOptions
strictPropertyInitialization	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "strictPropertyInitialization": false,$/;"	b	object:compilerOptions
struct	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "struct": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
suggest.acceptSuggestionOnCommitCharacter	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.acceptSuggestionOnCommitCharacter": {$/;"	o	object:properties
suggest.autoTrigger	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.autoTrigger": {$/;"	o	object:properties
suggest.completionItemKindLabels	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.completionItemKindLabels": {$/;"	o	object:properties
suggest.detailField	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.detailField": {$/;"	o	object:properties
suggest.detailMaxLength	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.detailMaxLength": {$/;"	o	object:properties
suggest.disableKind	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.disableKind": {$/;"	o	object:properties
suggest.disableMenu	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.disableMenu": {$/;"	o	object:properties
suggest.disableMenuShortcut	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.disableMenuShortcut": {$/;"	o	object:properties
suggest.echodocSupport	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.echodocSupport": {$/;"	o	object:properties
suggest.enablePreview	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.enablePreview": {$/;"	o	object:properties
suggest.fixInsertedWord	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.fixInsertedWord": {$/;"	o	object:properties
suggest.floatEnable	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.floatEnable": {$/;"	o	object:properties
suggest.highPrioritySourceLimit	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.highPrioritySourceLimit": {$/;"	o	object:properties
suggest.keepCompleteopt	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.keepCompleteopt": {$/;"	o	object:properties
suggest.labelMaxLength	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.labelMaxLength": {$/;"	o	object:properties
suggest.languageSourcePriority	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.languageSourcePriority": {$/;"	o	object:properties
suggest.localityBonus	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.localityBonus": {$/;"	o	object:properties
suggest.lowPrioritySourceLimit	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.lowPrioritySourceLimit": {$/;"	o	object:properties
suggest.maxCompleteItemCount	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.maxCompleteItemCount": {$/;"	o	object:properties
suggest.maxPreviewWidth	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.maxPreviewWidth": {$/;"	o	object:properties
suggest.minTriggerInputLength	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.minTriggerInputLength": {$/;"	o	object:properties
suggest.noselect	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.noselect": {$/;"	o	object:properties
suggest.numberSelect	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.numberSelect": {$/;"	o	object:properties
suggest.preferCompleteThanJumpPlaceholder	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.preferCompleteThanJumpPlaceholder": {$/;"	o	object:properties
suggest.snippetIndicator	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.snippetIndicator": {$/;"	o	object:properties
suggest.timeout	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.timeout": {$/;"	o	object:properties
suggest.timeout	.config/nvim/bundle/coc.nvim/src/__tests__/coc-settings.json	/^  "suggest.timeout": 5000,$/;"	n
suggest.triggerAfterInsertEnter	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.triggerAfterInsertEnter": {$/;"	o	object:properties
suggest.triggerCompletionWait	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "suggest.triggerCompletionWait": {$/;"	o	object:properties
syn_item	.config/nvim/bundle/defx-icons/rplugin/python3/defx/column/icons.py	/^    def syn_item(self, name, opt_name, hi_group_name) -> typing.List[str]:$/;"	m	class:Column
syn_list	.config/nvim/bundle/defx-icons/rplugin/python3/defx/column/icons.py	/^    def syn_list(self, opt) -> typing.List[str]:$/;"	m	class:Column
syntaxes	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/column.py	/^    def syntaxes(self) -> typing.List[str]:$/;"	m	class:Base
syntaxes	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/filename.py	/^    def syntaxes(self) -> typing.List[str]:$/;"	m	class:Column
syntaxes	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/icon.py	/^    def syntaxes(self) -> typing.List[str]:$/;"	m	class:Column
syntaxes	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/mark.py	/^    def syntaxes(self) -> typing.List[str]:$/;"	m	class:Column
syntaxes	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/column/type.py	/^    def syntaxes(self) -> typing.List[str]:$/;"	m	class:Column
t	.config/nvim/bundle/coc.nvim/build/index.js	/^\/******\/ 	__webpack_require__.t = function(value, mode) {$/;"	f	function:__webpack_require__
t	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  t = 116,$/;"	e	enum:CharCode
t	awesome-theme/widgets/taglist.lua	/^  awful.button({ }, 1, function(t) t:view_only() end),$/;"	f
t	awesome-theme/widgets/taglist.lua	/^  awful.button({ }, 4, function(t) awful.tag.viewnext(t.screen) end),$/;"	f
t	awesome-theme/widgets/taglist.lua	/^  awful.button({ }, 5, function(t) awful.tag.viewprev(t.screen) end)$/;"	f
taglist	awesome-theme/widgets/taglist.lua	/^local function taglist(s)$/;"	f
tail	.config/nvim/bundle/coc.nvim/src/util/array.ts	/^export function tail<T>(array: T[], n = 0): T {$/;"	f
target	.config/nvim/bundle/coc.nvim/tsconfig.json	/^    "target": "es2017",$/;"	s	object:compilerOptions
target	.config/nvim/bundle/coc.nvim/webpack.config.js	/^  target: 'node',$/;"	p	class:module.exports
targets	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    targets: typing.List[typing.Dict[str, typing.Any]] = []$/;"	v	class:Context
terminateTree	.config/nvim/bundle/coc.nvim/bin/terminateProcess.sh	/^terminateTree() {$/;"	f
test	.config/nvim/bundle/coc.nvim/package.json	/^    "test": "node --trace-warnings node_modules\/.bin\/jest --runInBand --detectOpenHandles --fo/;"	s	object:scripts
test	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/package.json	/^    "test": "^1.0.0",$/;"	s	object:dependencies
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Backslash character escape in choice tabstop doesn\\'t work #58494', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Marker, toTextmateString() <-> identity', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Marker, toTextmateString()', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Maximum call stack size exceeded, #28983', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Mirroring sequence of nested placeholders not selected properly on backjumping #58736', /;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet format section #37562', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet regex #36715', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, choise marker', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, default placeholder values and one transform', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, default placeholder values', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, only textmate', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, placeholder transforms', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, placeholder with choice', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, placeholder with transform', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, real world', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, transform example', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Repeated snippet placeholder should always inherit, #31040', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Snippet can freeze the editor, #30407', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Snippet choices: unable to escape comma and pipe, #31521', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Snippet optional transforms are not applied correctly when reusing the same variable, #3/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Snippet order for placeholders, #28185', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Snippet parser freeze #53144', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Snippet variable transformation doesn\\'t work if regex is complicated and snippet body /;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Snippets: make parser ignore `${0|choice|}`, #31599', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('TextmateSnippet#enclosingPlaceholders', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('TextmateSnippet#insertSnippet', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('TextmateSnippet#offset', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('TextmateSnippet#placeholder', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('TextmateSnippet#replace 1\/2', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('TextmateSnippet#replace 2\/2', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('TextmateSnippet#updatePlaceholder', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Transform -> FormatString#resolve', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Variable transformation doesn\\'t work if undefined variables are used in the same snipp/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('[BUG] HTML attribute suggestions: Snippet session does not have end-position set, #33147/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('backspace esapce in TM only, #16212', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('colon as variable\/placeholder value, #16717', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('incomplete placeholder', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('marker#len', () => {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('parser, parent node', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('problem with snippets regex #40570', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('snippets variable not resolved in JSON proposal #52931', function() {$/;"	C	function:assertText
test	.config/nvim/bundle/defx.nvim/Makefile	/^test:$/;"	t
test-build	.config/nvim/bundle/coc.nvim/package.json	/^    "test-build": "node --trace-warnings node_modules\/.bin\/jest --runInBand --coverage --force/;"	s	object:scripts
test.enable	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^        "test.enable": {$/;"	o	object:contributes.configuration.properties
testEnvironment	.config/nvim/bundle/coc.nvim/package.json	/^    "testEnvironment": "node",$/;"	s	object:jest
testLanguageServer	.config/nvim/bundle/coc.nvim/src/__tests__/client/integration.test.ts	/^async function testLanguageServer(serverOptions: lsclient.ServerOptions): Promise<void> {$/;"	f
testRegex	.config/nvim/bundle/coc.nvim/package.json	/^    "testRegex": "src\/__tests__\/.*\\\\.(test|spec)\\\\.ts$",$/;"	s	object:jest
test_view	.config/nvim/bundle/defx.nvim/test/rplugin/python3/defx/test_defx.py	/^def test_view():$/;"	f
text	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "text": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
theme	.config/nvim/bundle/oceanic-next/test/style-components.js	/^  theme: {$/;"	c	class:Button.defaultProps
throttle	.config/nvim/bundle/coc.nvim/src/util/throttle.ts	/^export default function throttle(func: Function, wait: number): Function & { clear(): void; } {$/;"	f
thumbnail_dir	.config/neofetch/config.conf	/^thumbnail_dir="${XDG_CACHE_HOME:-${HOME}\/.cache}\/thumbnails\/neofetch"$/;"	k
timeoutID	.config/nvim/bundle/coc.nvim/src/util/throttle.ts	/^  let timeoutID$/;"	v
title	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^        "title": "Test",$/;"	s	object:contributes.commands.0
to	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet format section #37562', function() {$/;"	C	function:assertText
to	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet regex #36715', function() {$/;"	C	function:assertText
toggle	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    toggle: bool = False$/;"	v	class:Context
trace.server	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "trace.server": {$/;"	o	object:definitions.languageServerBase.properties
trace.server	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerCommand.properties
trace.server	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerModule.properties
trace.server	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerSocket.properties
trace.server	.config/nvim/bundle/coc.nvim/src/__tests__/modules/settings.json	/^      "trace.server": "verbose"$/;"	s	object:servers.c
transform	.config/nvim/bundle/coc.nvim/package.json	/^    "transform": {$/;"	o	object:jest
transforms	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, placeholder transforms', function() {$/;"	C	function:assertText
transforms	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, variable transforms', function() {$/;"	C	function:assertText
transient	.config/compton/compton.conf	/^detect-transient = true;$/;"	k
transport	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "transport": {$/;"	o	object:definitions.languageServerModule.properties
transportPort	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "transportPort": {$/;"	o	object:definitions.languageServerModule.properties
tree_candidates	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/defx.py	/^    def tree_candidates($/;"	m	class:Defx
trim	awesome-theme/widgets/updates.lua	/^function trim(s)$/;"	f
ts-jest	.config/nvim/bundle/coc.nvim/package.json	/^    "ts-jest": "^24.0.2",$/;"	s	object:devDependencies
tslib	.config/nvim/bundle/coc.nvim/package.json	/^    "tslib": "^1.9.3",$/;"	s	object:dependencies
tslib_1	.config/nvim/bundle/coc.nvim/src/__tests__/client/server/testInitializeResult.js	/^const tslib_1 = require("tslib");$/;"	C
tslint	.config/nvim/bundle/coc.nvim/package.json	/^    "tslint": "^5.17.0",$/;"	s	object:devDependencies
tslint.enable	.config/nvim/bundle/coc.nvim/src/__tests__/coc-settings.json	/^  "tslint.enable": false$/;"	b
tsserver.enableJavascript	.config/nvim/coc-settings.json	/^  "tsserver.enableJavascript": true,$/;"	b
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.filetypes.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.rootPatterns.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerCommand.properties.args.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerModule.properties.args.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerModule.properties.execArgv.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.filetypes
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.rootPatterns
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerCommand.properties.args
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerModule.properties.args
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerModule.properties.execArgv
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableCompletion
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableDiagnostics
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableWorkspaceFolders
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.enable
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.requireRootPattern
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerCommand.properties.detached
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerCommand.properties.shell
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.languageServerModule.properties.transportPort
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.languageServerSocket.properties.port
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.env
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.initializationOptions
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.settings
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.cwd
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.trace.server
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerCommand.properties.command
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.module
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.runtime
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.transport
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerSocket.properties.host
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "class": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.class
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "color": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.color
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "constant": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.constant
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "constructor": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.constructor
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "default": {"type": "string"}$/;"	s	object:properties.suggest.completionItemKindLabels.properties.default
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "enum": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.enum
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "enumMember": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.enumMember
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "event": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.event
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "field": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.field
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "file": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.file
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "folder": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.folder
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "function": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.function
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "interface": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.interface
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "keyword": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.keyword
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "method": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.method
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "module": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.module
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "operator": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.operator
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "property": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.property
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "reference": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.reference
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "snippet": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.snippet
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "struct": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.struct
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "text": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.text
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.preferences.rootPatterns.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.around.disableSyntaxes.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.buffer.disableSyntaxes.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.disableSyntaxes.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.ignorePatterns.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.triggerCharacters.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.trimSameExts.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.list.source.outline.ctagsFilestypes.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.workspace.ignoredFiletypes.items
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "typeParameter": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.typeParameter
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "unit": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.unit
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "value": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.value
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "variable": {"type": "string"},$/;"	s	object:properties.suggest.completionItemKindLabels.properties.variable
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.preferences.rootPatterns
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.around.disableSyntaxes
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.buffer.disableSyntaxes
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.disableSyntaxes
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.ignorePatterns
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.triggerCharacters
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.trimSameExts
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.list.source.outline.ctagsFilestypes
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.workspace.ignoredFiletypes
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.bracketEnterImprove
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.colorSupport
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.enableFloatHighlight
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.formatOnType
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.previewAutoClose
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.snippets.enable
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.useQuickfixForLocations
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.around.enable
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.buffer.enable
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.buffer.ignoreGitignore
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.file.enable
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.file.ignoreHidden
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.codeLens.enable
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.checkCurrentLine
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.displayByAle
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.enable
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.enableSign
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.joinMessageLines
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.locationlist
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.refreshAfterSave
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.refreshOnInsertMode
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.virtualText
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.http.proxyStrictSSL
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.autoResize
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.extendedSearchMode
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.previewSplitRight
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.enable
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.hideOnTextChange
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.preferShownAbove
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.acceptSuggestionOnCommitCharacter
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableKind
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableMenu
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableMenuShortcut
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.echodocSupport
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.enablePreview
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.fixInsertedWord
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.floatEnable
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.keepCompleteopt
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.localityBonus
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.noselect
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.numberSelect
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.preferCompleteThanJumpPlaceholder
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.triggerAfterInsertEnter
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.around.priority
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.buffer.priority
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.file.priority
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.signature.triggerSignatureWait
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.highPrioritySourceLimit
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.lowPrioritySourceLimit
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.timeout
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.triggerCompletionWait
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.highlightOffset
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.maxWindowHeight
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.signOffset
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.virtualTextLines
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.limitLines
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.maxHeight
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.maxPreviewHeight
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.signOffset
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.signature.maxWindowHeight
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.detailMaxLength
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.labelMaxLength
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.languageSourcePriority
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.maxCompleteItemCount
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.maxPreviewWidth
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.minTriggerInputLength
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerBase
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerCommand
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerModule
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerSocket
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.languageserver
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.list.insertMappings
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.list.normalMappings
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.suggest.completionItemKindLabels
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.hoverTarget
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.jumpCommand
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.messageLevel
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.snippetStatusText
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.watchmanPath
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.around.shortcut
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.buffer.shortcut
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.file.shortcut
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.codeLens.separator
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.enableMessage
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.errorSign
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.hintSign
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.infoSign
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.level
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.messageTarget
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.virtualTextPrefix
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.warningSign
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.http.proxy
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.indicator
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.nextKeymap
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.previewHighlightGroup
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.previousKeymap
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.selectedSignText
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.signature.target
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.autoTrigger
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.detailField
type	.config/nvim/bundle/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.snippetIndicator
type	.config/nvim/bundle/coc.nvim/package.json	/^    "type": "git",$/;"	s	object:repository
type	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^          "type": "boolean",$/;"	s	object:contributes.configuration.properties.test.enable
typeParameter	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "typeParameter": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
type_go	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go = {}$/;"	v
type_go	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.kind2scope = {$/;"	v
type_go	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.kinds = {$/;"	v
type_go	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.lang = 'go'$/;"	v
type_go	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.scope2kind = {$/;"	v
type_go	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.sro = '.'$/;"	v
typescript	.config/nvim/bundle/coc.nvim/package.json	/^    "typescript": "3.5.1",$/;"	s	object:devDependencies
typescript	.ctags	/^--langdef=typescript$/;"	l
typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions	.config/nvim/bundle/coc.nvim/.vim/coc-settings.json	/^  "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": false,$/;"	b
typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces	.config/nvim/bundle/coc.nvim/.vim/coc-settings.json	/^  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,$/;"	b
typescript.preferences.noSemicolons	.config/nvim/bundle/coc.nvim/.vim/coc-settings.json	/^  "typescript.preferences.noSemicolons": true,$/;"	b
typescript.suggestionActions.enabled	.config/nvim/bundle/coc.nvim/.vim/coc-settings.json	/^  "typescript.suggestionActions.enabled": false$/;"	b
u	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  u = 117,$/;"	e	enum:CharCode
unbindAll	.config/nvim/bundle/oceanic-next/test/test.js	/^  unbindAll() {$/;"	m	class:SoundCloudAudio
underline_char	.config/neofetch/config.conf	/^underline_char="-"$/;"	k
underline_enabled	.config/neofetch/config.conf	/^underline_enabled="on"$/;"	k
uninstall	.config/ranger/plugins/ranger_devicons/Makefile	/^uninstall:$/;"	t
unit	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "unit": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
updateWidget:getUpdates	awesome-theme/widgets/updates.lua	/^function updateWidget:getUpdates()$/;"	f
updateWidget:update	awesome-theme/widgets/updates.lua	/^function updateWidget:update(count)$/;"	f
update_opened_candidates	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/view.py	/^    def update_opened_candidates(self) -> None:$/;"	m	class:View
upperFirst	.config/nvim/bundle/coc.nvim/src/util/string.ts	/^export function upperFirst(str: string): string {$/;"	f
uptime_shorthand	.config/neofetch/config.conf	/^uptime_shorthand="tiny"$/;"	k
uri	.config/nvim/bundle/coc.nvim/src/__tests__/client/converter.test.ts	/^    let uri = URI.file('\/tmp\/a')$/;"	v
url	.config/nvim/bundle/coc.nvim/package.json	/^    "url": "git+https:\/\/github.com\/neoclide\/coc.nvim.git"$/;"	s	object:repository
url	.config/nvim/bundle/coc.nvim/package.json	/^    "url": "https:\/\/github.com\/neoclide\/coc.nvim\/issues"$/;"	s	object:bugs
use_raw_list	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	.config/nvim/bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
uses_metadata	.config/ranger/plugins/devicons_linemode.py	/^  uses_metadata = False$/;"	v	class:DevIconsLinemode
uses_metadata	.config/ranger/plugins/ranger_devicons/__init__.py	/^  uses_metadata = False$/;"	v	class:DevIconsLinemode
uuid	.config/nvim/bundle/coc.nvim/package.json	/^    "uuid": "^3.3.2",$/;"	s	object:dependencies
v	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  v = 118,$/;"	e	enum:CharCode
v	.config/nvim/mappings/defx.vim	/^  nnoremap <silent><buffer><expr> v$/;"	m
validKeys	.config/nvim/bundle/coc.nvim/src/list/configuration.ts	/^export const validKeys = [$/;"	C
value	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "value": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
variable	.config/nvim/bundle/coc.nvim/data/schema.json	/^        "variable": {"type": "string"},$/;"	o	object:properties.suggest.completionItemKindLabels.properties
variable	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('Parser, variable transforms', function() {$/;"	C	function:assertText
variable_length	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    variable_length: int = 0$/;"	v	class:Context
variables	.ctags	/^--regex-typescript=\/^[ \\t]*export[ \\t]+var[ \\t]+([a-zA-Z0-9_]+)\/\\1\/v,variables\/$/;"	k	langdef:typescript
varlambdas	.ctags	/^--regex-typescript=\/^[ \\t]*var[ \\t]+([a-zA-Z0-9_]+)[ \\t]*=[ \\t]*function[ \\t]*\\(\\)\/\\1\//;"	k	langdef:typescript
version	.config/nvim/bundle/coc.nvim/bin/server.js	/^const version = process.version.replace('v', '')$/;"	C
version	.config/nvim/bundle/coc.nvim/package.json	/^  "version": "0.0.69",$/;"	s
version	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/coc-json/package.json	/^  "version": "1.0.0",$/;"	s
version	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/global/package.json	/^  "version": "1.0.0",$/;"	s
version	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/local/package.json	/^  "version": "1.0.0",$/;"	s
version	.config/nvim/bundle/coc.nvim/src/__tests__/extensions/test/package.json	/^  "version": "1.0.0",$/;"	s
vim	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^    vim = neovim$/;"	v
vim	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/__init__.py	/^    vim = pynvim$/;"	v
vim-themis	.config/nvim/bundle/defx.nvim/Makefile	/^vim-themis:$/;"	t
vista#	.config/nvim/bundle/vista.vim/autoload/vista.vim	/^function! vista#(bang, ...) abort$/;"	f
vista#GenericCloseOverlay	.config/nvim/bundle/vista.vim/autoload/vista.vim	/^function! vista#GenericCloseOverlay() abort$/;"	f
vista#OnExecute	.config/nvim/bundle/vista.vim/autoload/vista.vim	/^function! vista#OnExecute(provider, AUF) abort$/;"	f
vista#RunForNearestMethodOrFunction	.config/nvim/bundle/vista.vim/autoload/vista.vim	/^function! vista#RunForNearestMethodOrFunction() abort$/;"	f
vista#SetProvider	.config/nvim/bundle/vista.vim/autoload/vista.vim	/^function! vista#SetProvider(provider) abort$/;"	f
vista#ShouldSkip	.config/nvim/bundle/vista.vim/autoload/vista.vim	/^function! vista#ShouldSkip() abort$/;"	f
vista#Sort	.config/nvim/bundle/vista.vim/autoload/vista.vim	/^function! vista#Sort() abort$/;"	f
vista#autocmd#Init	.config/nvim/bundle/vista.vim/autoload/vista/autocmd.vim	/^function! vista#autocmd#Init(group_name, AUF) abort$/;"	f
vista#autocmd#InitMOF	.config/nvim/bundle/vista.vim/autoload/vista/autocmd.vim	/^function! vista#autocmd#InitMOF() abort$/;"	f
vista#cursor#FindNearestMethodOrFunction	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#FindNearestMethodOrFunction() abort$/;"	f
vista#cursor#FoldOrJump	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#FoldOrJump() abort$/;"	f
vista#cursor#ShowDetail	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#ShowDetail(_timer) abort$/;"	f
vista#cursor#ShowDetailWithDelay	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#ShowDetailWithDelay() abort$/;"	f
vista#cursor#ShowTag	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#ShowTag() abort$/;"	f
vista#cursor#ShowTagFor	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#ShowTagFor(lnum) abort$/;"	f
vista#cursor#TogglePreview	.config/nvim/bundle/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#TogglePreview() abort$/;"	f
vista#debugging#Info	.config/nvim/bundle/vista.vim/autoload/vista/debugging.vim	/^function! vista#debugging#Info() abort$/;"	f
vista#debugging#InfoToClipboard	.config/nvim/bundle/vista.vim/autoload/vista/debugging.vim	/^function! vista#debugging#InfoToClipboard() abort$/;"	f
vista#error#	.config/nvim/bundle/vista.vim/autoload/vista/error.vim	/^function! vista#error#(msg) abort$/;"	f
vista#error#Expect	.config/nvim/bundle/vista.vim/autoload/vista/error.vim	/^function! vista#error#Expect(expected) abort$/;"	f
vista#error#For	.config/nvim/bundle/vista.vim/autoload/vista/error.vim	/^function! vista#error#For(cmd, filetype) abort$/;"	f
vista#error#InvalidExecutive	.config/nvim/bundle/vista.vim/autoload/vista/error.vim	/^function! vista#error#InvalidExecutive(exe) abort$/;"	f
vista#error#InvalidOption	.config/nvim/bundle/vista.vim/autoload/vista/error.vim	/^function! vista#error#InvalidOption(opt, ...) abort$/;"	f
vista#error#Need	.config/nvim/bundle/vista.vim/autoload/vista/error.vim	/^function! vista#error#Need(needed) abort$/;"	f
vista#error#RunCtags	.config/nvim/bundle/vista.vim/autoload/vista/error.vim	/^function! vista#error#RunCtags(cmd) abort$/;"	f
vista#executive#coc#Cache	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^function! vista#executive#coc#Cache() abort$/;"	f
vista#executive#coc#Execute	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^function! vista#executive#coc#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#coc#Run	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^function! vista#executive#coc#Run(_fpath) abort$/;"	f
vista#executive#coc#RunAsync	.config/nvim/bundle/vista.vim/autoload/vista/executive/coc.vim	/^function! vista#executive#coc#RunAsync() abort$/;"	f
vista#executive#ctags#AutoUpdate	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#AutoUpdate(fpath) abort$/;"	f
vista#executive#ctags#Cache	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#Cache() abort$/;"	f
vista#executive#ctags#Execute	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#ctags#ProjectRun	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#ProjectRun() abort$/;"	f
vista#executive#ctags#Run	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#Run(fpath) abort$/;"	f
vista#executive#ctags#RunAsync	.config/nvim/bundle/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#RunAsync(fpath) abort$/;"	f
vista#executive#lcn#Cache	.config/nvim/bundle/vista.vim/autoload/vista/executive/lcn.vim	/^function! vista#executive#lcn#Cache() abort$/;"	f
vista#executive#lcn#Execute	.config/nvim/bundle/vista.vim/autoload/vista/executive/lcn.vim	/^function! vista#executive#lcn#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#lcn#Run	.config/nvim/bundle/vista.vim/autoload/vista/executive/lcn.vim	/^function! vista#executive#lcn#Run(_fpath) abort$/;"	f
vista#executive#lcn#RunAsync	.config/nvim/bundle/vista.vim/autoload/vista/executive/lcn.vim	/^function! vista#executive#lcn#RunAsync() abort$/;"	f
vista#executive#vim_lsp#Cache	.config/nvim/bundle/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! vista#executive#vim_lsp#Cache() abort$/;"	f
vista#executive#vim_lsp#Execute	.config/nvim/bundle/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! vista#executive#vim_lsp#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#vim_lsp#Run	.config/nvim/bundle/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! vista#executive#vim_lsp#Run(_fpath) abort$/;"	f
vista#executive#vim_lsp#RunAsync	.config/nvim/bundle/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! vista#executive#vim_lsp#RunAsync() abort$/;"	f
vista#extension#markdown#AutoUpdate	.config/nvim/bundle/vista.vim/autoload/vista/extension/markdown.vim	/^function! vista#extension#markdown#AutoUpdate(fpath) abort$/;"	f
vista#extension#markdown#Execute	.config/nvim/bundle/vista.vim/autoload/vista/extension/markdown.vim	/^function! vista#extension#markdown#Execute(_bang, should_display) abort$/;"	f
vista#finder#fzf#ProjectRun	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! vista#finder#fzf#ProjectRun() abort$/;"	f
vista#finder#fzf#Run	.config/nvim/bundle/vista.vim/autoload/vista/finder/fzf.vim	/^function! vista#finder#fzf#Run(...) abort$/;"	f
vista#floating#Close	.config/nvim/bundle/vista.vim/autoload/vista/floating.vim	/^function! vista#floating#Close() abort$/;"	f
vista#floating#Display	.config/nvim/bundle/vista.vim/autoload/vista/floating.vim	/^function! vista#floating#Display(lnum, tag) abort$/;"	f
vista#fold#Expr	.config/nvim/bundle/vista.vim/autoload/vista/fold.vim	/^function! vista#fold#Expr() abort$/;"	f
vista#fold#Text	.config/nvim/bundle/vista.vim/autoload/vista/fold.vim	/^function! vista#fold#Text() abort$/;"	f
vista#jump#NextTopLevel	.config/nvim/bundle/vista.vim/autoload/vista/jump.vim	/^function! vista#jump#NextTopLevel() abort$/;"	f
vista#jump#PrevTopLevel	.config/nvim/bundle/vista.vim/autoload/vista/jump.vim	/^function! vista#jump#PrevTopLevel() abort$/;"	f
vista#jump#TagLine	.config/nvim/bundle/vista.vim/autoload/vista/jump.vim	/^function! vista#jump#TagLine(tag) abort$/;"	f
vista#parser#ctags#FromExtendedRaw	.config/nvim/bundle/vista.vim/autoload/vista/parser/ctags.vim	/^function! vista#parser#ctags#FromExtendedRaw(line, container) abort$/;"	f
vista#parser#ctags#FromJSON	.config/nvim/bundle/vista.vim/autoload/vista/parser/ctags.vim	/^function! vista#parser#ctags#FromJSON(line, container) abort$/;"	f
vista#parser#ctags#RecursiveFromJSON	.config/nvim/bundle/vista.vim/autoload/vista/parser/ctags.vim	/^function! vista#parser#ctags#RecursiveFromJSON(line, container) abort$/;"	f
vista#parser#ctags#RecursiveFromXformat	.config/nvim/bundle/vista.vim/autoload/vista/parser/ctags.vim	/^function! vista#parser#ctags#RecursiveFromXformat(line, container) abort$/;"	f
vista#parser#lsp#ExtractSymbol	.config/nvim/bundle/vista.vim/autoload/vista/parser/lsp.vim	/^function! vista#parser#lsp#ExtractSymbol(symbol, container) abort$/;"	f
vista#parser#lsp#KindToSymbol	.config/nvim/bundle/vista.vim/autoload/vista/parser/lsp.vim	/^function! vista#parser#lsp#KindToSymbol(line, container) abort$/;"	f
vista#popup#Close	.config/nvim/bundle/vista.vim/autoload/vista/popup.vim	/^function! vista#popup#Close() abort$/;"	f
vista#popup#Display	.config/nvim/bundle/vista.vim/autoload/vista/popup.vim	/^function! vista#popup#Display(lnum, tag) abort$/;"	f
vista#renderer#Decorate	.config/nvim/bundle/vista.vim/autoload/vista/renderer.vim	/^function! vista#renderer#Decorate(kind) abort$/;"	f
vista#renderer#default#Render	.config/nvim/bundle/vista.vim/autoload/vista/renderer/default.vim	/^function! vista#renderer#default#Render() abort$/;"	f
vista#renderer#kind#Render	.config/nvim/bundle/vista.vim/autoload/vista/renderer/kind.vim	/^function! vista#renderer#kind#Render(data) abort$/;"	f
vista#renderer#line#Render	.config/nvim/bundle/vista.vim/autoload/vista/renderer/line.vim	/^function! vista#renderer#line#Render() abort$/;"	f
vista#renderer#markdown#Render	.config/nvim/bundle/vista.vim/autoload/vista/renderer/markdown.vim	/^function! vista#renderer#markdown#Render(data) abort$/;"	f
vista#sidebar#Close	.config/nvim/bundle/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#Close() abort$/;"	f
vista#sidebar#IsVisible	.config/nvim/bundle/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#IsVisible() abort$/;"	f
vista#sidebar#Open	.config/nvim/bundle/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#Open() abort$/;"	f
vista#sidebar#OpenOrUpdate	.config/nvim/bundle/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#OpenOrUpdate(rows) abort$/;"	f
vista#sidebar#Reload	.config/nvim/bundle/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#Reload(data) abort$/;"	f
vista#sidebar#Toggle	.config/nvim/bundle/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#Toggle() abort$/;"	f
vista#source#GotoWin	.config/nvim/bundle/vista.vim/autoload/vista/source.vim	/^function! vista#source#GotoWin() abort$/;"	f
vista#source#Update	.config/nvim/bundle/vista.vim/autoload/vista/source.vim	/^function! vista#source#Update(bufnr, winnr, ...) abort$/;"	f
vista#statusline#	.config/nvim/bundle/vista.vim/autoload/vista/statusline.vim	/^function! vista#statusline#() abort$/;"	f
vista#statusline#Render	.config/nvim/bundle/vista.vim/autoload/vista/statusline.vim	/^function! vista#statusline#Render() abort$/;"	f
vista#statusline#RenderOnWinEvent	.config/nvim/bundle/vista.vim/autoload/vista/statusline.vim	/^function! vista#statusline#RenderOnWinEvent() abort$/;"	f
vista#statusline#ShouldDisable	.config/nvim/bundle/vista.vim/autoload/vista/statusline.vim	/^function! vista#statusline#ShouldDisable() abort$/;"	f
vista#types#uctags#KindsFor	.config/nvim/bundle/vista.vim/autoload/vista/types/uctags.vim	/^function! vista#types#uctags#KindsFor(filetype) abort$/;"	f
vista#util#BinarySearch	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#BinarySearch(array, target, cmp_key, ret_key) abort$/;"	f
vista#util#Blink	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#Blink(times, delay, ...) abort$/;"	f
vista#util#Complete	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#Complete(A, L, P) abort$/;"	f
vista#util#EnsureRunOnSourceFile	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#EnsureRunOnSourceFile(Run, ...) abort$/;"	f
vista#util#JobStop	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#JobStop(jobid) abort$/;"	f
vista#util#Join	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#Join(...) abort$/;"	f
vista#util#LowerIndentLineNr	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#LowerIndentLineNr() abort$/;"	f
vista#util#MaxLen	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#MaxLen() abort$/;"	f
vista#util#Retriving	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#Retriving(executive) abort$/;"	f
vista#util#SetBufline	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#SetBufline(bufnr, lines) abort$/;"	f
vista#util#ToCamelCase	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#ToCamelCase(s) abort$/;"	f
vista#util#Trim	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#Trim(str) abort$/;"	f
vista#util#Truncate	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#Truncate(msg) abort$/;"	f
vista#util#Warning	.config/nvim/bundle/vista.vim/autoload/vista/util.vim	/^function! vista#util#Warning(msg) abort$/;"	f
vista#viewer#Display	.config/nvim/bundle/vista.vim/autoload/vista/viewer.vim	/^function! vista#viewer#Display(data) abort$/;"	f
vista#viewer#Render	.config/nvim/bundle/vista.vim/autoload/vista/viewer.vim	/^function! vista#viewer#Render(data) abort$/;"	f
vista#viewer#prefixes	.config/nvim/bundle/vista.vim/autoload/vista/viewer.vim	/^function! vista#viewer#prefixes() abort$/;"	f
visual_end	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    visual_end: int = 0$/;"	v	class:Context
visual_start	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    visual_start: int = 0$/;"	v	class:Context
volumeWidget.decVolume	awesome-theme/widgets/volume.lua	/^function volumeWidget.decVolume()$/;"	f
volumeWidget.incVolume	awesome-theme/widgets/volume.lua	/^function volumeWidget.incVolume()$/;"	f
volumeWidget.toggleVolume	awesome-theme/widgets/volume.lua	/^function volumeWidget.toggleVolume()$/;"	f
volumeWidget:checkIcon	awesome-theme/widgets/volume.lua	/^function volumeWidget:checkIcon(widget, volume, muted)$/;"	f
volumeWidget:updateIcon	awesome-theme/widgets/volume.lua	/^function volumeWidget:updateIcon()$/;"	f
vscode-languageserver	.config/nvim/bundle/coc.nvim/package.json	/^    "vscode-languageserver": "^5.3.0-next.7"$/;"	s	object:devDependencies
vscode-languageserver-protocol	.config/nvim/bundle/coc.nvim/package.json	/^    "vscode-languageserver-protocol": "^3.15.0-next.5",$/;"	s	object:dependencies
vscode-languageserver-types	.config/nvim/bundle/coc.nvim/package.json	/^    "vscode-languageserver-types": "^3.15.0-next.1",$/;"	s	object:dependencies
vscode-uri	.config/nvim/bundle/coc.nvim/package.json	/^    "vscode-uri": "^2.0.1",$/;"	s	object:dependencies
vscode_languageserver_1	.config/nvim/bundle/coc.nvim/src/__tests__/client/server/testInitializeResult.js	/^const vscode_languageserver_1 = require("vscode-languageserver");$/;"	C
vsync	.config/compton/compton.conf	/^vsync = "none";#"opengl-swc";$/;"	k
w	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  w = 119,$/;"	e	enum:CharCode
wait	.config/nvim/bundle/coc.nvim/src/__tests__/modules/attach.test.ts	/^function wait(ms: number): Promise<void> {$/;"	f
walkReminder	awesome-theme/tools/health.lua	/^local function walkReminder()$/;"	f
watch	.config/nvim/bundle/coc.nvim/package.json	/^    "watch": "tsc -p tsconfig.json --watch true --sourceMap",$/;"	s	object:scripts
watchman	.config/nvim/bundle/coc.nvim/package.json	/^    "watchman": false,$/;"	b	object:jest
waterReminder	awesome-theme/tools/health.lua	/^local function waterReminder()$/;"	f
way	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet format section #37562', function() {$/;"	C	function:assertText
way	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^  test('No way to escape forward slash in snippet regex #36715', function() {$/;"	C	function:assertText
webpack	.config/nvim/bundle/coc.nvim/webpack.config.js	/^const webpack = require('\/Users\/chemzqm\/.config\/yarn\/global\/node_modules\/webpack')$/;"	C
which	.config/nvim/bundle/coc.nvim/package.json	/^    "which": "^1.3.1"$/;"	s	object:dependencies
wiBarFont	awesome-theme/utils.lua	/^local function wiBarFont(text)$/;"	f
wiBarMargin	awesome-theme/utils.lua	/^local function wiBarMargin(widget)$/;"	f
win	.config/compton/compton.conf	/^use-ewmh-active-win = true;$/;"	k
wincol	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    wincol: int = 0$/;"	v	class:Context
winheight	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    winheight: int = 0$/;"	v	class:Context
winrow	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    winrow: int = 0$/;"	v	class:Context
wintypes	.config/compton/compton.conf	/^wintypes:$/;"	k
winwidth	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/context.py	/^    winwidth: int = 0$/;"	v	class:Context
wombat	.config/nvim/bundle/lightline.vim/README.md	/^### wombat$/;"	S
wordChar	.config/nvim/bundle/coc.nvim/src/util/fuzzy.ts	/^export function wordChar(ch: number): boolean {$/;"	f
workspace.ignoredFiletypes	.config/nvim/bundle/coc.nvim/data/schema.json	/^    "workspace.ignoredFiletypes": {$/;"	o	object:properties
wrapper	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/base/kind.py	/^    def wrapper(func: ACTION_FUNC) -> ACTION_FUNC:$/;"	f	function:action	file:
wrapper	.config/nvim/bundle/defx.nvim/rplugin/python3/defx/kind/file.py	/^    def wrapper(func: ACTION_FUNC) -> ACTION_FUNC:$/;"	f	function:action	file:
writeSync	.config/nvim/bundle/coc.nvim/bin/tsserverForkStart.js	/^    fs.writeSync = function (\/\/ tslint:disable-line$/;"	f	function:fs
x	.config/compton/compton.conf	/^shadow-offset-x = -5;$/;"	k
x	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  x = 120,$/;"	e	enum:CharCode
xoffset	.config/neofetch/config.conf	/^xoffset=0$/;"	k
y	.config/compton/compton.conf	/^shadow-offset-y = -5;$/;"	k
y	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  y = 121,$/;"	e	enum:CharCode
yoffset	.config/neofetch/config.conf	/^yoffset=0$/;"	k
yp	.config/nvim/mappings/defx.vim	/^	nnoremap <silent><buffer><expr> yp$/;"	m
yy	.config/nvim/mappings/defx.vim	/^  nnoremap <silent><buffer><expr> yy$/;"	m
z	.config/nvim/bundle/coc.nvim/src/__tests__/snippets/parser.test.ts	/^    assertTextAndMarker('${foo\/([A-Z][a-z]\/format\/}', '${foo\/([A-Z][a-z]\/format\/}', Text)$/;"	C	function:assertText
z	.config/nvim/bundle/coc.nvim/src/util/charCode.ts	/^  z = 122,$/;"	e	enum:CharCode
{noReset	arch/ansi-colours.lua	/^return setmetatable({noReset = replaceCodes}, {__call = function (_, str) return ansicolors (str/;"	f
~	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> ~    :<C-U>exe <SID>BlameJump('~'.v:count1)<CR>$/;"	m
~	.config/nvim/bundle/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> ~     :<C-U>exe 'Gedit ' . <SID>fnameescape(<SID>ContainingCommit/;"	m
